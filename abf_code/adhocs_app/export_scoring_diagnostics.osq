/*****************************************************************************
  Quick utility to export four diagnostic files after a scoring test run.
  DF - May 2011
*****************************************************************************/
PROCEDURE export_scoring_diagnostics () =

DECLARE
	h_return    = INTEGER1      NOT NULL,
        h_period    = CHAR(6)       NOT NULL,
        h_count     = INTEGER4      NOT NULL,
	h_filename  = VARCHAR(60)   NOT NULL,
	h_tablename = VARCHAR(60)   NOT NULL

BEGIN

h_period = PROMPT 'Period to export? ' WITH STYLE = POPUP;

/*-------------------------------------------------------------------------
                        EXPORT CQPV
-------------------------------------------------------------------------*/

h_filename  = '/admin/scratch/cqpv_export_'+ :h_period + '.csv';
h_tablename = 'tt_cqpv_export_'+ :h_period;
h_count = 0;

MESSAGE'Checking...';

SELECT COUNT(contributor_reference) AS h_count
FROM   cqpv
WHERE  period = :h_period;
commit;

IF h_count = 0
THEN
  MESSAGE 'ERROR: No records found to export from cqpv.'
  WITH STYLE = POPUP;
  EXIT;
ENDIF;


MESSAGE 'EXPORTING: ' 
      + VARCHAR(:h_count) + ' records for ' 
      + VARCHAR(:h_period) + ' to '
      + VARCHAR(:h_filename) +' .'
WITH STYLE = POPUP;

MESSAGE 'Selecting...';

CREATE TABLE :h_tablename
AS
SELECT *
FROM cqpv
WHERE period = :h_period;
commit;

MESSAGE 'Exporting...';

COPY TABLE :h_tablename ( contributor_reference = c0comma,
                          quest_order           = c0comma,
                          question              = c0comma,
                          period                = c0comma,
                          contributor_inquiry   = c0comma,
                          contributor_industry  = c0comma,
                          question_industry     = c0comma,
                          acell                 = c0comma,
                          avalue                = c0comma,
                          acell_type            = c0comma,
                          aconstruction_type    = c0comma,
                          evalue                = c0comma,
                          fcell                 = c0comma,
                          fvalue                = c0comma,
                          fcell_type            = c0comma,
                          fconstruction_type    = c0comma,
                          confirmation_code     = c0comma,
                          confirmation_date     = c0comma,
                          atypical              = c0nl)
INTO :h_filename;
commit;

MESSAGE 'Truncating and dropping...';

MODIFY :h_tablename TO TRUNCATED;
commit;

DROP TABLE :h_tablename;
commit;

/*-------------------------------------------------------------------------
                        EXPORT BTO_QUESTION_SCORE
-------------------------------------------------------------------------*/

h_filename  = '/admin/scratch/qst_score_export_'+ :h_period + '.csv';
h_tablename = 'tt_question_score_'+ :h_period;
h_count = 0;

MESSAGE'Checking...';

SELECT COUNT(contributor_reference) AS h_count
FROM   bto_question_score
WHERE  period = :h_period;
commit;

IF h_count = 0
THEN
  MESSAGE 'ERROR: No records found to export on bto_question_score.'
  WITH STYLE = POPUP;
  EXIT;
ENDIF;

MESSAGE 'EXPORTING: ' 
      + VARCHAR(:h_count) + ' records for ' 
      + VARCHAR(:h_period) + ' to '
      + VARCHAR(:h_filename) +' .'
WITH STYLE = POPUP;

MESSAGE 'Selecting...';

CREATE TABLE :h_tablename
AS
SELECT *
FROM bto_question_score
WHERE period = :h_period;
commit;

MESSAGE 'Exporting...';

COPY TABLE :h_tablename ( period                = c0comma,
                          contributor_reference = c0comma,
                          question              = c0comma,
                          score                 = c0comma,
                          code                  = c0comma,
                          zone                  = c0nl)
INTO :h_filename;
commit;

MESSAGE 'Truncating and dropping...';

MODIFY :h_tablename TO TRUNCATED;
commit;

DROP TABLE :h_tablename;
commit;

/*-------------------------------------------------------------------------
                        EXPORT BTO_REFERENCE_SCORE
-------------------------------------------------------------------------*/

h_filename  = '/admin/scratch/ref_score_export_'+ :h_period + '.csv';
h_tablename = 'tt_reference_score_'+ :h_period;
h_count = 0;

MESSAGE'Checking...';

SELECT COUNT(contributor_reference) AS h_count
FROM   bto_reference_score
WHERE  period = :h_period;
commit;

IF h_count = 0
THEN
  MESSAGE 'ERROR: No records found to export from bto_reference_score.'
  WITH STYLE = POPUP;
  EXIT;
ENDIF;


MESSAGE 'EXPORTING: ' 
      + VARCHAR(:h_count) + ' records for ' 
      + VARCHAR(:h_period) + ' to '
      + VARCHAR(:h_filename) +' .'
WITH STYLE = POPUP;

MESSAGE 'Selecting...';

CREATE TABLE :h_tablename
AS
SELECT *
FROM  bto_reference_score
WHERE period = :h_period;
commit;

MESSAGE 'Exporting...';

COPY TABLE :h_tablename ( contributor_reference = c0comma,
                          period                = c0comma,
                          score                 = c0comma,
                          zone                  = c0comma,
                          marker                = c0nl)
INTO :h_filename;
commit;

MESSAGE 'Truncating and dropping...';

MODIFY :h_tablename TO TRUNCATED;
commit;

DROP TABLE :h_tablename;
commit;

/*-------------------------------------------------------------------------
                        EXPORT BTO_SCORING_DEBUG
-------------------------------------------------------------------------*/

h_filename  = '/admin/scratch/score_detail_export_'+ :h_period + '.csv';
h_tablename = 'tt_score_detail_export_'+ :h_period;
h_count = 0;

MESSAGE'Checking...';

SELECT COUNT(contributor_reference) AS h_count
FROM   bto_scoring_debug
WHERE  period = :h_period;
commit;

IF h_count = 0
THEN
  MESSAGE 'ERROR: No records found to export from bto_scoring_debug.'
  WITH STYLE = POPUP;
  EXIT;
ENDIF;


MESSAGE 'EXPORTING: ' 
      + VARCHAR(:h_count) + ' records for ' 
      + VARCHAR(:h_period) + ' to '
      + VARCHAR(:h_filename) +' .'
WITH STYLE = POPUP;

MESSAGE 'Selecting...';

CREATE TABLE :h_tablename
AS
SELECT *
FROM bto_scoring_debug
WHERE period = :h_period;
commit;

MESSAGE 'Exporting...';

COPY TABLE :h_tablename ( contributor_reference = c0comma,
                          question              = c0comma,
                          period                = c0comma,
                          avalue                = c0comma,
                          evalue                = c0comma,
                          estimated             = c0comma,
                          tvalue                = c0comma,
                          weight                = c0comma,
                          score                 = c0nl)
INTO :h_filename;
commit;

MESSAGE 'Truncating and dropping...';

MODIFY :h_tablename TO TRUNCATED;
commit;

DROP TABLE :h_tablename;
commit;

/*-------------------------------------------------------------------------
                        EXPORT KEY QUESTIONS
-------------------------------------------------------------------------*/

h_filename  = '/admin/scratch/key_qsts_export_'+ :h_period + '.csv';
h_tablename = 'tt_key_questions_'+ :h_period;
h_count = 0;

MESSAGE'Checking...';

SELECT COUNT(contributor_reference) AS h_count
FROM   key_responder_data
WHERE  for_period = :h_period;
commit;

IF h_count = 0
THEN
  MESSAGE 'ERROR: No records found to export from key_responder_data.'
  WITH STYLE = POPUP;
  EXIT;
ENDIF;


MESSAGE 'EXPORTING: ' 
      + VARCHAR(:h_count) + ' records for ' 
      + VARCHAR(:h_period) + ' to '
      + VARCHAR(:h_filename) +' .'
WITH STYLE = POPUP;

MESSAGE 'Selecting...';

CREATE TABLE :h_tablename
AS
SELECT *
FROM  key_responder_data
WHERE for_period = :h_period;
commit;

MESSAGE 'Exporting...';

COPY TABLE :h_tablename ( contributor_reference = c0comma,
                          question              = c0nl)
INTO :h_filename;
commit;

MESSAGE 'Truncating and dropping...';

MODIFY :h_tablename TO TRUNCATED;
commit;

DROP TABLE :h_tablename;
commit;

/*-------------------------------------------------------------------------
                        EXPORT FNA 
-------------------------------------------------------------------------*/

h_filename  = '/admin/scratch/fna_export_'+ :h_period + '.csv';
h_tablename = 'tt_fna_export'+ :h_period;
h_count = 0;

MESSAGE'Checking...';

SELECT COUNT(contributor_reference) AS h_count
FROM   bto_view_images
WHERE  period = :h_period;
commit;

IF h_count = 0
THEN
  MESSAGE 'ERROR: No records found to export from bto_view_images.'
  WITH STYLE = POPUP;
  EXIT;
ENDIF;

SELECT COUNT(contributor_reference) AS h_count
FROM   tt_bto_question_backup
WHERE  period = :h_period;
commit;

IF h_count = 0
THEN
  MESSAGE 'ERROR: No records found to export from tt_bto_question_backup.'
  WITH STYLE = POPUP;
  EXIT;
ENDIF;

MESSAGE 'EXPORTING: Some records that would be on FNA for ' 
      + VARCHAR(:h_period) + ' to '
      + VARCHAR(:h_filename) +' .'
WITH STYLE = POPUP;

MESSAGE 'Selecting...';

CREATE TABLE :h_tablename
AS
SELECT a.contributor_reference, a.zone, a.marker , '    ' AS acu
  FROM bto_reference_score a
 WHERE (a.zone = 'A' OR a.marker IN ('R','S'))
   AND a.contributor_reference NOT IN
     ( SELECT b.contributor_reference
         FROM bto_view_images b
        WHERE a.period = b.period)

UNION

SELECT c.contributor_reference, c.zone, c.marker, d.tick_boxes AS acu
  FROM bto_reference_score c,
       bto_view_images d
 WHERE c.contributor_reference = d.contributor_reference
   AND c.period = d.period
   AND c.contributor_reference IN
     ( SELECT e.contributor_reference
         FROM tt_bto_question_backup e
        WHERE e.period = d.period);

commit;

MODIFY :h_tablename TO btree ON contributor_reference, zone, marker;
commit;

MESSAGE 'Exporting...';

COPY TABLE :h_tablename ( contributor_reference = c0comma,
                          zone                  = c0comma,
                          marker                = c0comma,
                          acu                   = c0nl)
INTO :h_filename;
commit;

MESSAGE 'Truncating and dropping...';

MODIFY :h_tablename TO TRUNCATED;
commit;

DROP TABLE :h_tablename;
commit;

/*-------------------------------------------------------------------------
                        NOTIFY SUCCESS AND END
-------------------------------------------------------------------------*/

MESSAGE 'Extracts completed successfully and temp tables removed.'
WITH STYLE = POPUP;

EXIT;

END

