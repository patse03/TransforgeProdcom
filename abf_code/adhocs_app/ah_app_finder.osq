/*************************************************************************

  Ad hoc app to find an app containing object starting with given
  characters.
  
  Saves hours of looking for msamxyz needles in the ProdCom haystack

  DF 2013

*************************************************************************/

INITIALIZE () =

DECLARE
  h_retries_max        = INTEGER1    NOT NULL WITH DEFAULT,
  h_retries            = INTEGER1    NOT NULL WITH DEFAULT,
  h_retry_or_not       = CHAR(5)     NOT NULL WITH DEFAULT,
  h_return             = INTEGER1    NOT NULL WITH DEFAULT,
  h_frpr_name          = VARCHAR(24) NOT NULL WITH DEFAULT,

  lp_full_error_check  = PROCEDURE RETURNING INTEGER NOT NULL WITH DEFAULT

{

SET_FORMS FRS (MAPFILE='/home/prodcom/admin/prodcom.map');
SET_FORMS FIELD '' (MODE(tf) = 'READ');
h_frpr_name = 'ah_app_finder';

RESUME FIELD s_obj_str;

}

FIELD s_obj_str = 
{

h_retry_or_not      = 'RETRY';
h_retries           = 0;
h_retries_max       = 3;

WHILE :h_retries < h_retries_max AND :h_retry_or_not = 'RETRY'
DO

  h_retries = :h_retries + 1;

  tf = 

  SELECT DISTINCT
         o.object_name AS app_name
  FROM   ii_objects o,
         ii_objects o2,
         ii_abfobjects a,
         ii_abfdependencies ad
  WHERE  o2.object_name LIKE :s_obj_str
    AND  o.object_class = 2001
    AND  o2.object_class IN (2050,2210,2220)
    AND  o.object_id = a.applid
    AND  a.object_id = o2.object_id
    AND  a.object_id = ad.object_id;

  h_return = CALLPROC lp_full_error_check (p_num_row_ck = 1);

  IF h_return != 7
  THEN
    h_retry_or_not = '';
  ENDIF;

ENDWHILE;

IF h_return = 7
THEN
  EXIT;

 ELSEIF h_return > 1
  THEN
  MESSAGE 'SYSTEM ERROR: Failed to select from system tables. '
	+ 'Error code '+VARCHAR(:h_return)+'.' +X'0D'
	+ 'Process cannot continue.'
  WITH STYLE = POPUP;
  EXIT;

  ELSEIF h_return = 1
  THEN
  MESSAGE 'WARNING: No results found for that search string.'
  WITH STYLE = POPUP;
  RESUME FIELD s_obj_str;
ENDIF;

REDISPLAY;

RESUME menu;

}

/*=======================================================================
   FRSKEY4: New search
======================================================================*/

'NEW', KEY FRSKEY4 = 
{

CLEAR  FIELD s_obj_str;
RESUME FIELD s_obj_str;

}

/*=======================================================================
   FRSKEY8: Refine search
======================================================================*/

'REFINE', KEY FRSKEY8 = 
{

RESUME FIELD s_obj_str;

}

/*=======================================================================
   FRSKEY14: End
======================================================================*/

'END', KEY FRSKEY14 = 
{

EXIT;

}

/****************************************************************************/
/*********************** LOCAL PROCEDURES ***********************************/
/****************************************************************************/

/*===========================================================================
	      Local procedure for error checking within retry loop.
============================================================================*/

PROCEDURE lp_full_error_check
	  (p_num_row_ck  = INTEGER4 NOT NULL WITH DEFAULT)=

DECLARE lp_return = INTEGER4 NOT NULL WITH DEFAULT


{

lp_return = CALLPROC check_inq_ing (h_num_row_ck      = :p_num_row_ck,
 				    h_commit          = 'Y',
				    h_rollback        = 'N',
				    h_retries         = :h_retries,
                                    h_retries_allowed = :h_retries_max,
                                    h_frpr_name       = ':h_frpr_name');
RETURN :lp_return;

}


















