/*--------------------------------------------------------------
                MSACM_FP_SIMUL_IMP_CALC

        Option to automatically calculate imp ratios
--------------------------------------------------------------*/

PROCEDURE msacm_fp_simul_imp_calc () =

DECLARE   ret_val      = INTEGER4 NOT NULL,
          h_rows       = INTEGER4 NOT NULL,
          h_count1     = INTEGER4 NOT NULL,
          h_count2     = INTEGER4 NOT NULL,
          h_count3     = INTEGER4 NOT NULL,
          h_frpr_name  = VARCHAR(24) NOT NULL,
          h_table1     = VARCHAR(24) NOT NULL,
          h_table2     = VARCHAR(24) NOT NULL,
          h_table3     = VARCHAR(24) NOT NULL,
          year1        = INTEGER4 NOT NULL,
          year2        = INTEGER4 NOT NULL,
          q1           = INTEGER4 NOT NULL,
          q2           = INTEGER4 NOT NULL,
          q3           = INTEGER4 NOT NULL,
          q4           = INTEGER4 NOT NULL,
          h_table_name = VARCHAR(24) NOT NULL,
          ar1          = ARRAY OF g_industry_inquiry
{
    h_frpr_name = 'msacm_fp_simul_imp_calc';
    h_table1 = 'imp_uncleared';
    h_table2 = 'imp_uncleared_9200';
    h_table3 = 'clear_cqpv_cons';

    IF :g_inquiry = :gc_asi
    THEN
        IF g_results_span = 1
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'There is no imputation to run',
                      h_frpr_name = :h_frpr_name);
            RETURN 0;
        ENDIF;
    ENDIF;

    /*------------------------------------------------------------------
      Delete redundant links from asi_to_qsi_link
      The periods are set up as follows:

      eg if the period is 199512 
         then q1-q4 are 199603,199606,199609,199612

         if the period is 199603 - 199609 
         then q1-q4 are 199603,199606,199609,199612

         for both of the above the annual periods are
	 year1 = 199500 and year2 = 199600
    ------------------------------------------------------------------*/

    IF :g_inquiry = :gc_qsi
    THEN
        IF MOD(:g_input_period,100) = 12
        THEN
            q1 = :g_input_period / 100 * 100 + 100 + 3;
            q2 = :g_input_period / 100 * 100 + 100 + 6;
            q3 = :g_input_period / 100 * 100 + 100 + 9;
            q4 = :g_input_period / 100 * 100 + 100 + 12;

            year1 = :g_input_period - 12;
            year2 = year1 + 100;
        ELSE
            q1 = :g_input_period / 100 * 100 + 3;
            q2 = :g_input_period / 100 * 100 + 6;
            q3 = :g_input_period / 100 * 100 + 9;
            q4 = :g_input_period / 100 * 100 + 12;

            year1 = :q1 - 3 - 100;
            year2 = year1 + 100;
        ENDIF;

        /*--------------------------------------------------------------
          Delete from asi_to_qsi_link where the contributor is no longer
          selected
	too many links being deleted using NOT in :year1, so :year2
	added as well
        --------------------------------------------------------------*/

        DELETE FROM asi_to_qsi_link
        WHERE       asi_period IN (:year1,:year2)
        AND         question_industry IN
                    (SELECT industry FROM :g_results_industry)
        AND         contributor_reference NOT IN
                    (SELECT contributor_reference
                     FROM   contributor_period
                     WHERE  period IN (:year1,:year2));

        ret_val = CALLPROC msacm_fp_check_inq_ing (
                  h_num_row_ck = 1,
                  h_commit = 'Y',
                  h_rollback = 'N',
                  h_frpr_name = :h_frpr_name );

        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error deleting non selected references',
                      h_frpr_name = :h_frpr_name);
            RETURN 9;
        ENDIF;

        /*--------------------------------------------------------------
          Delete from asi_to_qsi_link where the contributor is now
          selected for a quarterly period
        --------------------------------------------------------------*/

        DELETE FROM asi_to_qsi_link
        WHERE       asi_period = :year2
        AND         question_industry IN
                    (SELECT industry FROM :g_results_industry)
        AND         contributor_reference IN
                    (SELECT contributor_reference
                     FROM   contributor_period
                     WHERE  period IN (:q1,:q2,:q3,:q4));

        ret_val = CALLPROC msacm_fp_check_inq_ing (
                  h_num_row_ck = 1,
                  h_commit = 'Y',
                  h_rollback = 'N',
                  h_frpr_name = :h_frpr_name );

        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error deleting reclassified references',
                      h_frpr_name = :h_frpr_name);
            RETURN 9;
        ENDIF;

    ENDIF;

    /*------------------------------------------------------------------
      If imp_uncleared table exists and has rows on it, it means that
      procs 2-4 have not ended tidily, and the data on them should
      be reinstated onto cqpv (by hand)
    ------------------------------------------------------------------*/

    h_count1 = 0;
    h_count2 = 0;
    h_count3 = 0;

    SELECT table_name AS h_table_name
    FROM   iitables
    WHERE  table_name = :h_table1
    AND    table_owner = (SELECT user_name FROM iidbconstants);

    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 0
    THEN
        SELECT COUNT(*) AS h_count1
        FROM   :h_table1;

        ret_val = CALLPROC msacm_fp_check_inq_ing (
                  h_num_row_ck = 1,
                  h_commit = 'Y',
                  h_rollback = 'N',
                  h_frpr_name = :h_frpr_name );

        IF h_count1 <> 0
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = VARCHAR(:h_count1) + ' rows still on ' +
                               :h_table1,
                      h_frpr_name = :h_frpr_name);
        ENDIF;
    ENDIF;

    /*------------------------------------------------------------------
      If imp_uncleared table9200 exists and has rows on it, it means 
      that procs 2-4 have not ended tidily, and the data on them should
      be reinstated onto cqpv (by hand)
    ------------------------------------------------------------------*/

    SELECT table_name AS h_table_name
    FROM   iitables
    WHERE  table_name = :h_table2
    AND    table_owner = (SELECT user_name FROM iidbconstants);

    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 0
    THEN
        SELECT COUNT(*) AS h_count2
        FROM   :h_table2;

        ret_val = CALLPROC msacm_fp_check_inq_ing (
                  h_num_row_ck = 1,
                  h_commit = 'Y',
                  h_rollback = 'N',
                  h_frpr_name = :h_frpr_name );

        IF h_count2 <> 0
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = VARCHAR(:h_count2) + ' rows still on ' +
                               :h_table2,
                      h_frpr_name = :h_frpr_name);
        ENDIF;
    ENDIF;

    /*------------------------------------------------------------------
      If clear_cqpv_cons exists and has rows on it, it means 
      that procs 2-4 have not ended tidily, and the data on them should
      be reinstated onto cqpv (by hand)
    ------------------------------------------------------------------*/

    SELECT table_name AS h_table_name
    FROM   iitables
    WHERE  table_name = :h_table3
    AND    table_owner = (SELECT user_name FROM iidbconstants);

    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 0
    THEN
        SELECT COUNT(*) AS h_count3
        FROM   :h_table3;

        ret_val = CALLPROC msacm_fp_check_inq_ing (
                  h_num_row_ck = 1,
                  h_commit = 'Y',
                  h_rollback = 'N',
                  h_frpr_name = :h_frpr_name );

        IF h_count3 <> 0
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = VARCHAR(:h_count3) + ' rows still on ' +
                               :h_table3,
                      h_frpr_name = :h_frpr_name);
        ENDIF;
    ENDIF;

    IF h_count1 <> 0 OR h_count2 <> 0 OR h_count3 <> 0
    THEN
        RETURN 9;
    ENDIF;

    /*--------------------------------------------------------------
     This is why processes 2-4 must be run as one:

     Any uncleared data must be overwritten on cqpv with I cell codes,
     allowing imputation to be carried out, so

     1. Create a table of all the U/K cell codes.
    --------------------------------------------------------------*/

    ret_val = CALLPROC msacm_fp_drop_table (
              h_table = :h_table1);
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    CREATE TABLE :h_table1
    AS SELECT    *
    FROM         cqpv
    WHERE        acell IN ('U','K','M','L')
    AND          period BETWEEN :g_period[:g_periods].period
                            AND :g_period[1].period
    AND          question_industry IN (
                 SELECT industry FROM :g_results_industry);

    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name );

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error creating ' + :h_table1,
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    /*------------------------------------------------------------------
     2. Create a table of Total Sales of all Contributors who have
        U/K cell codes
    ------------------------------------------------------------------*/

    ret_val = CALLPROC msacm_fp_drop_table (
              h_table = :h_table2);
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    CREATE TABLE :h_table2
    AS SELECT    DISTINCT a.contributor_reference,
                 a.period,
                 a.avalue,
                 a.acell
    FROM         cqpv a,
                 :h_table1 b
    WHERE        a.quest_order = 10
    AND          a.contributor_reference = b.contributor_reference
    AND          a.period = b.period;

    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name );

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error creating ' + :h_table2,
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    /*------------------------------------------------------------------
     Insert into 9200 table all 9200 with acells of 1V and 1U as these 
     were not being imputed for and were missing from the sim tables 
     if these were the only questions on the form that were still 
     uncleared when results was run.
    ------------------------------------------------------------------*/

    INSERT INTO :h_table2 
    SELECT       contributor_reference,
                 period,
                 avalue,
                 acell
    FROM         cqpv a
    WHERE        acell IN ('1U','1V')
    AND          period BETWEEN :g_period[:g_periods].period
                            AND :g_period[1].period
    AND          quest_order = 10
    AND          question_industry IN (
                 SELECT industry FROM :g_results_industry)
    AND          contributor_reference NOT IN
                 (SELECT contributor_reference
                  FROM   :h_table2 b
                  WHERE  a.period = b.period);

    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name );

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error inserting 9200 1U 1Vs into' + :h_table2,
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    /*------------------------------------------------------------------
     3. Update cqpv's U/K rows to I (to allow them to be imputed over)
    ------------------------------------------------------------------*/

    UPDATE cqpv a
    FROM   :h_table1 b
    SET    acell = 'I'
    WHERE  a.contributor_reference = b.contributor_reference
    AND    a.question = b.question
    AND    a.period = b.period;

    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name );

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error updating cqpv from ' + :h_table1,
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    /*--------------------------------------------------------------
       populate array with industries
    --------------------------------------------------------------*/

    ar1 = SELECT DISTINCT industry,
                 inquiry
          FROM   industry_period
          WHERE  inquiry = :g_inquiry
          AND    period BETWEEN :g_period[:g_periods].period
                            AND :g_period[1].period
          /*AND    industry <> 34100 */
          AND    industry IN ( SELECT industry FROM :g_results_industry);

    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name );

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error selecting into array',
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ELSEIF ret_val = 1
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error selecting into array - no rows',
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    h_rows = CALLPROC ARRAYALLROWS (ar1);

    /*--------------------------------------------------------------
       for each industry ...
    --------------------------------------------------------------*/

    WHILE h_rows > 0
    DO
        g_industry = ar1[h_rows].industry;

        IF :g_inquiry = :gc_asi
        THEN
            ret_val = CALLPROC msacm_fp_asi_imp_ratios ();
        ELSE
            ret_val = CALLPROC msacm_fp_qsi_imp_ratios ();
        ENDIF;

        IF ret_val <> 0
        THEN
            RETURN 9;
        ENDIF;

        h_rows = h_rows - 1;

    ENDWHILE;

    RETURN 0;
}
