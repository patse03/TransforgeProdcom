/*drop table jw_copy_table1;
  CREATE TABLE jw_copy_table1 (
          contributor_reference char(11) not null,
          period                integer4 not null,
          question              integer4 not null,
          quest_order           integer1 not null,
          question_industry     integer4 not null,
          lag                   char(1) not null,
          contributor_inquiry   integer2 not null,
          contributor_industry  integer4 not null,
          proposed_industry     integer4 not null,
          enterprise            char(10) not null,
          register_emp          integer4 not null,
          acell                 char(2) not null,
          avalue                integer4 not null)
;
 
 
        INSERT INTO jw_copy_table1
        SELECT a.contributor_reference,
               a.qperiod as period,
               a.question,
               a.quest_order,
               a.question_industry,
               '0' as lag,
               a.inquiry,
               a.contributor_industry,
               a.contributor_industry as proposed_industry,
               a.enterprise,
               int4(0) as register_emp,
               acell,
               avalue
        FROM sim_29122_200109_cqpv a;
 
    INSERT INTO jw_copy_table1
    SELECT a.contributor_reference,
               a.period as period,
               a.question,
               a.quest_order,
               a.question_industry,
               '0' as lag,
               15 as inquiry,
               a.contributor_industry,
               a.contributor_industry as proposed_industry,
               b.enterprise,
               b.register_emp as register_emp,
               a.acell,
               a.avalue
    FROM cqpv a,
         contributor_period b
    WHERE acell = 'N'
    AND a.contributor_reference = b.contributor_reference
    AND a.period = b.period
    AND a.period BETWEEN 200009
           AND 200109
    AND a.contributor_inquiry = 15
    AND question_industry IN (29122);
*/
 
 
        CREATE TABLE jw_table3
        AS SELECT b.contributor_reference ,
                  b.period as period,
                  b.question,
                  b.quest_order,
                  b.question_industry,
                  '0' as lag,
                  b.contributor_inquiry as inquiry,
                  b.contributor_industry,
                  b.contributor_industry as proposed_industry,
                  '            ' as enterprise,
                  int4(0) as register_emp,
                  b.acell,
                  b.avalue
 
        FROM
             cqpv b
        WHERE b.contributor_inquiry = 14
        AND mod(question,10000) = 9200
        AND (b.period = 200009/100*100
        OR b.period = 200109/100*100 );
 
/*
        CREATE TABLE h_table4
        AS SELECT contributor_reference ,
                  period/100*100+3 as period,
                  question,
                  quest_order,
                  question_industry,
                  lag,
                  inquiry,
                  contributor_industry,
                  proposed_industry,
                  enterprise,
                  register_emp,
                  acell,
                  avalue/4 as avalue
 
        FROM jw_table3;
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
/* update for 06*/
        UPDATE h_table4
        SET period = period + 3;
 
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
/* update for 09*/
        UPDATE h_table4
        SET period = period + 3;
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
/* update for 12*/
        UPDATE h_table4
        SET period = period + 3;
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
/*
I don't think the following works as there is a join with a quarterly
period on table a and an annual period on table b - look into this and try
and change*/
        DELETE FROM h_table4 a
        WHERE a.contributor_reference IN
                (SELECT contributor_reference FROM contributor_period b
                WHERE a.period = b.period
                AND a.contributor_industry != b.contributor_industry);
 
        IF mod(200109,100) = '03'
        THEN
 
        UPDATE h_table4
        SET period = period/100*100 + 103;
 
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
        UPDATE h_table4
        SET period = period/100*100 + 103;
 
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
        UPDATE h_table4
        SET period = period + 3;
 
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
 
        UPDATE h_table4
        SET period = period/100*100 + 103;
 
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
        UPDATE h_table4
        SET period = period + 3;
 
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
 
        UPDATE h_table4
        SET period = period + 3;
 
        INSERT INTO h_copy_table1
        SELECT * FROM h_table4;
 
        IF mod(200109,100) != '00'
        THEN
        DELETE FROM h_copy_table1 a
        WHERE a.contributor_reference IN
                (SELECT contributor_reference FROM contributor_period b
                WHERE a.period = b.period
                AND a.contributor_industry != b.contributor_industry);
 
    /*changed this delete to delete the earlier tids rather than the
    the latest as this caused problem with data created for annual
    contributors carrying in to quarterly results
    JW Feb 2002*/
 
 
    DELETE FROM h_copy_table1 a
    WHERE contributor_reference IN (
        SELECT contributor_reference FROM h_copy_table1 b
        WHERE a.quest_order = b.quest_order
        AND a.question = b.question
        AND a.period = b.period
        AND a.tid < b.tid);
 
 
/*----------------------------------------------------------------
During checking of 200109 results in Feb 2002 - problems were found
mostly due to the early timimg of results whereby annual contributors
carrying in to quarterly industries didn't have enough data in and
too many were being treated as non/never responders. This caused
problems with the grossing factors in estimation. As well as this
there were genuine duplicates created in this program that were
included in the quarterly extract data that was copied down to the
SAS system. These duplicates were reclassifications from one annual
industry to another. They were updated on IDBR during the annual update
in June 2001 and then selected on the current field for annual 2001
Prodcom.
The following delete will delete the genuine duplicates for the
reclassified contributors!!!! I hope
----------------------------------------------------------------*/
    DELETE FROM h_copy_table1 a
    WHERE contributor_reference IN (
          SELECT contributor_reference
          FROM h_copy_table1 b
          WHERE a.contributor_reference = b.contributor_reference
          AND   a.contributor_industry <> b.contributor_industry
          AND   MOD(a.question,10000) = 9200
          AND   MOD(b.question,10000) = 9200
          AND   a.period = b.period
          AND   a.contributor_industry IN (
                SELECT contributor_industry
                FROM   contributor_period c
                WHERE  a.contributor_reference = c.contributor_reference
                AND    c.period = 200009/100 * 100));
 
  /* delete future periods as these may cause problem */
 
    DELETE FROM h_copy_table1
    WHERE period > 200109
    AND contributor_industry NOT IN
        (SELECT industry
         FROM   industry
         WHERE  inquiry = 15);
 
 
    MODIFY h_copy_table1 TO BTREE UNIQUE ON  contributor_reference,
                                              quest_order,
                                              question,
                                              period;
 
 
 
        UPDATE h_copy_table1 a
        FROM contributor_period b
        SET register_emp = b.register_emp
        WHERE a.contributor_reference = b.contributor_reference
        AND a.period = b.period;
 
        UPDATE h_copy_table1 a
        FROM contributor_period b
        SET register_emp = b.register_emp
        WHERE a.contributor_reference = b.contributor_reference
        AND a.period = b.period
        AND a.period = curr_period;
 
 
    IF g_inquiry = 15
    THEN
 
    MESSAGE 'Updating SAS table for employment - carry';
 
        UPDATE h_copy_table1 a
        FROM contributor_period b
        SET register_emp = b.register_emp,
            enterprise = b.enterprise
        WHERE a.contributor_reference = b.contributor_reference
        AND a.period/100*100 = b.period
        AND b.inquiry = 14;
 
        ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
 
 
        IF ret_val <> 0
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error updating emp/ent quarterly data  ' ,
                      h_frpr_name = h_frpr_name);
        ENDIF;
 
 
        UPDATE h_copy_table1 a
        FROM contributor_period b
        SET register_emp = b.register_emp,
            enterprise = b.enterprise
        WHERE a.contributor_reference = b.contributor_reference
        AND (a.period/100*100) - 100 = b.period
        AND b.inquiry = 14;
 
        ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
 
 
        IF ret_val <> 0
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error updating emp/ent quarterly data  ' ,
                      h_frpr_name = h_frpr_name);
        ENDIF;
 
    ELSE
 
    MESSAGE 'Creating table6 for employment - carry';
 
        CREATE TABLE h_table6
        AS SELECT b.contributor_reference ,
                  b.period as qsi_period,
                  b.period/100*100 as asi_period,
                  register_emp
        FROM
             contributor_period b
        WHERE b.period/100*100 BETWEEN 200009
                   AND 200109
        AND inquiry = 15;
 
        ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
 
 
        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error creating carry annual data  ' +
h_table6,
                      h_frpr_name = h_frpr_name);
            RETURN 9;
        ENDIF;
 
    MESSAGE 'Creating table7 for employment - carry';
 
        CREATE TABLE h_table7
        AS SELECT contributor_reference ,
                  asi_period as period,
                  avg(register_emp) as register_emp
        FROM h_table6
        GROUP BY contributor_reference,asi_period;
 
        ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
 
 
        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error creating carry annual data  ' +
h_table7,
                      h_frpr_name = h_frpr_name);
            RETURN 9;
        ENDIF;
 
    MESSAGE 'Updating SAS table for employment - carry';
 
        UPDATE h_copy_table1 a
        FROM h_table7 b
        SET register_emp = b.register_emp
        WHERE a.contributor_reference = b.contributor_reference
        AND a.period = b.period;
 
 
        ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
 
 
        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error updating carry annual data from ' +
h_table7,
                      h_frpr_name = h_frpr_name);
            RETURN 9;
        ENDIF;
 
    ENDIF;
 
    MESSAGE 'Updating SAS table for lag';
 
 
    IF g_inquiry = 15
    THEN
 
       UPDATE h_copy_table1 a
       FROM question_library b
       SET lag = varchar(b.lag)
       WHERE a.question = b.question
       AND a.period/100*100 = b.period;
 
 
    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
    ELSE
 
      h_cnt = g_row;
      WHILE h_cnt >= 1
      DO
       curr_period = g_period[h_cnt].period;
 
       UPDATE h_copy_table1 a
       FROM question_library b
       SET lag = varchar(b.lag)
       WHERE a.question = b.question
       AND a.period = b.period
       AND a.period = curr_period;
 
 
    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
       h_cnt = h_cnt - 1;
 
      ENDWHILE;
 
   ENDIF;
 
    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
 
 
    IF ret_val <> 0
    THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error updating lag data  ' +
h_copy_table1,
                      h_frpr_name = h_frpr_name);
    ENDIF;
 
 
    MESSAGE 'Updating SAS table for reclassification 1';
 
    UPDATE h_copy_table1 a
    FROM reclass_contrib_archive b
    SET proposed_industry = b.proposed_ind
    WHERE a.contributor_reference = b.contributor_reference
    AND a.period = b.period;
 
    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
 
 
    IF ret_val > 1
    THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error updating reclass archive data  ' +
h_copy_table1,
                      h_frpr_name = h_frpr_name);
    ENDIF;
 
 
    MESSAGE 'Updating SAS table for reclassification 2';
 
    UPDATE h_copy_table1 a
    FROM reclass_contrib b
    SET proposed_industry = b.proposed_ind
    WHERE a.contributor_reference = b.contributor_reference
    AND a.period = b.period;
 
    ret_val = CALLPROC msacm_fp_check_inq_ing (
              h_num_row    = BYREF(h_count),
              h_num_row_ck = 1,
              h_rollback   = 'N',
              h_commit     = 'Y',
              h_frpr_name  = h_frpr_name);
 
 
    IF ret_val > 1
    THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error updating reclass data 2 ' +
h_copy_table1,
                      h_frpr_name = h_frpr_name);
    ENDIF;
 
    MESSAGE 'Copying SAS table to delimited file';
 
    COPY table h_copy_table1
    (
          contributor_reference = c(0)'^',
          period                = c(0)'^' ,
          question              = c(0)'^' ,
          quest_order           = c(0)'^' ,
          question_industry     = c(0)'^' ,
          lag                   = c(0)'^' ,
          contributor_inquiry   = c(0)'^' ,
          contributor_industry  = c(0)'^' ,
          proposed_industry     = c(0)'^' ,
          enterprise            = c(0)'^',
          register_emp          = c(0)'^' ,
          acell                 = c(0)'^',
          avalue                = c0nl )
    INTO h_copy_out;
 
 
*/
 
 
