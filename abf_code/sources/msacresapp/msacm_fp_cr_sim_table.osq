/*----------------------------------------------------------------------
                  MSACM_FP_CR_SIM_TABLE
----------------------------------------------------------------------*/

PROCEDURE msacm_fp_cr_sim_table () =

DECLARE   ret_val      = INTEGER4 NOT NULL,
          end_period   = INTEGER4 NOT NULL,
          start_period = INTEGER4 NOT NULL,
          t_cqpv       = VARCHAR(25) NOT NULL,
          h_table1     = VARCHAR(25) NOT NULL,
          h_view       = VARCHAR(25) NOT NULL,
          h_table2     = VARCHAR(25) NOT NULL,
          h_table3     = VARCHAR(25) NOT NULL,
          h_rows       = INTEGER4 NOT NULL,
          h_frpr_name  = VARCHAR(25) NOT NULL,
          ar1          = ARRAY OF g_industry_inquiry
{

    h_table1 = 'imp_uncleared';
    h_table2 = 'imp_uncleared_9200';
    h_table3 = 'clear_cqpv_cons';
    h_view = 'imp_uncleared_view';

    start_period = :g_period[:g_periods].period;
    end_period = :g_period[1].period;
    h_frpr_name = 'msacm_fp_cr_sim_table';

    /*------------------------------------------------------------------
     Following from Process 2, create a view from imp_uncleared_9200.
     Update cqpv from this, setting the Imputed Total Sales to the sum
     of the imputed 01s.
    ------------------------------------------------------------------*/

    ret_val = CALLPROC msacm_fp_drop_table ( h_table = :h_view);
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    CREATE VIEW :h_view
    AS SELECT   a.contributor_reference,
                a.period,
                SUM(a.avalue) AS avalue
    FROM        cqpv a,
                :h_table2 b
    WHERE       a.contributor_reference = b.contributor_reference
    AND         a.period = b.period
    AND         MOD(a.question,10) = 1
    GROUP BY    a.contributor_reference,
                a.period;

    ret_val = CALLPROC msacm_fp_check_inq_ing(
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error creating ' + :h_view,
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    /*------------------------------------------------------------------
     Update cqpv to the sum of 01s for the mixed U/K cellcodes
    ------------------------------------------------------------------*/

    UPDATE cqpv a
    FROM   :h_view b
    SET    avalue = b.avalue,
           acell = 'I'
    WHERE  a.contributor_reference = b.contributor_reference
    AND    a.period = b.period
    AND    a.quest_order = 10;

    ret_val = CALLPROC msacm_fp_check_inq_ing(
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error updating cqpv from view',
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    /*--------------------------------------------------------------
     Populate array with industry detail
    --------------------------------------------------------------*/

    ar1 = SELECT   DISTINCT industry,
                   inquiry
          FROM     industry_period
          WHERE    inquiry = :g_inquiry
          AND      period BETWEEN :start_period AND :end_period
          AND      industry IN (SELECT industry FROM :g_results_industry);

    ret_val = CALLPROC msacm_fp_check_inq_ing(
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error creating list of industries',
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ELSEIF ret_val = 1
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'No rows creating list of industries',
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    h_rows = CALLPROC ARRAYALLROWS (ar1);

    /*--------------------------------------------------------------
     For each industry ...
    --------------------------------------------------------------*/

    WHILE h_rows > 0
    DO
        g_industry = ar1[h_rows].industry;

        t_cqpv = 'sim_'+ VARCHAR(:g_industry) + '_' +
                 VARCHAR(:end_period) + '_cqpv';

        ret_val = CALLPROC msacm_fp_drop_table (
                  h_table = :t_cqpv);
        IF ret_val = 9
        THEN
            RETURN 9;
        ENDIF;

        /*--------------------------------------------------------------
        Create new sim table
        --------------------------------------------------------------*/

        IF g_inquiry = :gc_asi
        THEN

            CREATE TABLE   :t_cqpv
            AS SELECT      contributor_reference,
                           quest_order,
                           question,
                           period AS aperiod,
                           period AS qperiod,
                           contributor_inquiry AS inquiry,
                           contributor_industry,
                           question_industry,
                           acell,
                           avalue,
                           acell_type,
                           1.00000 AS imputation_ratio,
                           '          ' AS enterprise,
                           confirmation_code,
                           confirmation_date
            FROM           cqpv
            WHERE          contributor_inquiry = :gc_asi
            AND            question_industry = :g_industry
            AND            period BETWEEN :start_period AND :end_period
            AND            acell IN ('V','C','P','A','B','I','Z')
            UNION
            SELECT         contributor_reference,
                           quest_order,
                           question,
                           period AS aperiod,
                           period AS qperiod,
                           :gc_asi AS inquiry,
                           contributor_industry,
                           question_industry,
                           acell,
                           avalue,
                           acell_type,
                           1.00000 AS imputation_ratio,
                           '          ' AS enterprise,
                           '0' AS confirmation_code,
                           'today' AS confirmation_date
            FROM           mid_carryout
            WHERE          question_industry = :g_industry
            AND            period BETWEEN :start_period AND :end_period
            AND            acell IN ('V','C','P','A','B','I','Z')
                           WITH LOCATION = (prod2);
        ELSE

            /*----------------------------------------------------------
             Delete duplicates from Asi_to_qsi_link
            ----------------------------------------------------------*/

            DELETE FROM asi_to_qsi_link
            WHERE tid IN (
                      SELECT b.tid
                      FROM   cqpv a,
                             asi_to_qsi_link b
                      WHERE  a.contributor_reference = b.contributor_reference
                      AND    a.period = b.qsi_period
                      AND    a.question = b.question)
             AND   question_industry = :g_industry ;

            ret_val = CALLPROC msacm_fp_check_inq_ing(
                      h_num_row_ck = 1,
                      h_commit = 'Y',
                      h_rollback = 'N',
                      h_frpr_name = :h_frpr_name);

            IF ret_val = 9
            THEN
                ret_val = CALLPROC msacm_fp_log_message (
                          h_text = 'Error deleting asi_to_qsi dups',
                          h_frpr_name = :h_frpr_name);
                RETURN 9;
            ENDIF;

            CREATE TABLE   :t_cqpv
            AS SELECT      contributor_reference,
                           quest_order,
                           question,
                           (period/100*100) AS aperiod,
                           period AS qperiod,
                           contributor_inquiry AS inquiry,
                           contributor_industry,
                           question_industry,
                           acell,
                           avalue,
                           acell_type,
                           1.00000 AS imputation_ratio,
                           '          ' AS enterprise,
                           confirmation_code,
                           confirmation_date
            FROM           cqpv
            WHERE          contributor_inquiry = :gc_qsi
            AND            question_industry = :g_industry
            AND            period BETWEEN :start_period AND :end_period
            AND            acell IN ('V','C','P','A','B','I','Z')
            UNION
            SELECT         contributor_reference,
                           quest_order,
                           question,
                           asi_period AS aperiod,
                           qsi_period AS qperiod,
                           :gc_qsi AS inquiry,
                           contributor_industry,
                           question_industry,
                           acell,
                           avalue,
                           acell_type,
                           1.00000 AS imputation_ratio,
                           enterprise,
                           '0' AS confirmation_code,
                           'today' AS confirmation_date
            FROM           asi_to_qsi_link
            WHERE          question_industry = :g_industry
            AND            qsi_period BETWEEN :start_period AND :end_period
            AND            acell IN ('V','C','P','A','B','I','Z')
                           WITH LOCATION = (prod2);

        ENDIF;

        ret_val = CALLPROC msacm_fp_check_inq_ing(
                  h_num_row_ck = 1,
                  h_rollback   = 'N',
                  h_commit     = 'Y',
                  h_frpr_name  = :h_frpr_name);

        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error creating table ' + :t_cqpv,
                      h_frpr_name = :h_frpr_name);
            RETURN 9;
        ENDIF;

        /*--------------------------------------------------------------
         Modify sim table to btree
        --------------------------------------------------------------*/

        MODIFY     :t_cqpv TO BTREE
        UNIQUE ON  contributor_reference,
                   quest_order,
                   question,
                   aperiod,
                   qperiod;

        ret_val = CALLPROC msacm_fp_check_inq_ing(
                  h_num_row_ck = 1,
                  h_rollback   = 'N',
                  h_commit     = 'Y',
                  h_frpr_name  = :h_frpr_name);

        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error modifying ' + :t_cqpv,
                      h_frpr_name = :h_frpr_name);
            RETURN 9;
        ENDIF;

        /*--------------------------------------------------------------
          Adding enterprise to the sim table
        --------------------------------------------------------------*/

        UPDATE :t_cqpv a
        FROM   contributor_period b
        SET    enterprise = b.enterprise
        WHERE  a.qperiod = b.period
        AND    a.enterprise IN ('','0')
        AND    a.contributor_reference = b.contributor_reference;

        ret_val = CALLPROC msacm_fp_check_inq_ing(
                  h_num_row_ck = 1,
                  h_rollback   = 'N',
                  h_commit     = 'Y',
                  h_frpr_name  = :h_frpr_name);

        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error adding enterprises to ' + :t_cqpv,
                      h_frpr_name = :h_frpr_name);
            RETURN 9;
        ENDIF;

        /*--------------------------------------------------------------
          Annual: Adding enterprise to the sim table for Q to A.
          Update 4th quarter, then 3rd, etc.
        --------------------------------------------------------------*/

        IF :g_inquiry = :gc_asi
        THEN

            UPDATE :t_cqpv a
            FROM   contributor_period b
            SET    enterprise = b.enterprise
            WHERE  a.qperiod + 12 = b.period
            AND    a.enterprise IN ('','0')
            AND    a.contributor_reference = b.contributor_reference;

            ret_val = CALLPROC msacm_fp_check_inq_ing(
                      h_num_row_ck = 1,
                      h_rollback   = 'N',
                      h_commit     = 'Y',
                      h_frpr_name  = :h_frpr_name);

            IF ret_val = 9
            THEN
                ret_val = CALLPROC msacm_fp_log_message (
                          h_text = 'Error adding enterprises to ' +
                                   :t_cqpv + ' for 4th period',
                          h_frpr_name = :h_frpr_name);
                RETURN 9;
            ENDIF;

            UPDATE :t_cqpv a
            FROM   contributor_period b
            SET    enterprise = b.enterprise
            WHERE  a.qperiod + 9 = b.period
            AND    a.enterprise IN ('','0')
            AND    a.contributor_reference = b.contributor_reference;

            ret_val = CALLPROC msacm_fp_check_inq_ing(
                      h_num_row_ck = 1,
                      h_rollback   = 'N',
                      h_commit     = 'Y',
                      h_frpr_name  = :h_frpr_name);

            IF ret_val = 9
            THEN
                ret_val = CALLPROC msacm_fp_log_message (
                          h_text = 'Error adding enterprises to ' +
                                   :t_cqpv + ' for 3rd period',
                          h_frpr_name = :h_frpr_name);
                RETURN 9;
            ENDIF;

            UPDATE :t_cqpv a
            FROM   contributor_period b
            SET    enterprise = b.enterprise
            WHERE  a.qperiod + 6 = b.period
            AND    a.enterprise IN ('','0')
            AND    a.contributor_reference = b.contributor_reference;

            ret_val = CALLPROC msacm_fp_check_inq_ing(
                      h_num_row_ck = 1,
                      h_rollback   = 'N',
                      h_commit     = 'Y',
                      h_frpr_name  = :h_frpr_name);

            IF ret_val = 9
            THEN
                ret_val = CALLPROC msacm_fp_log_message (
                          h_text = 'Error adding enterprises to ' +
                                   :t_cqpv + ' for 2nd period',
                          h_frpr_name = :h_frpr_name);
                RETURN 9;
            ENDIF;

            UPDATE :t_cqpv a
            FROM   contributor_period b
            SET    enterprise = b.enterprise
            WHERE  a.qperiod + 3 = b.period
            AND    a.enterprise IN ('','0')
            AND    a.contributor_reference = b.contributor_reference;

            ret_val = CALLPROC msacm_fp_check_inq_ing(
                      h_num_row_ck = 1,
                      h_rollback   = 'N',
                      h_commit     = 'Y',
                      h_frpr_name  = :h_frpr_name);

            IF ret_val = 9
            THEN
                ret_val = CALLPROC msacm_fp_log_message (
                          h_text = 'Error adding enterprises to ' +
                                   :t_cqpv + ' for 1st period',
                          h_frpr_name = :h_frpr_name);
                RETURN 9;
            ENDIF;

        ENDIF;

        /*--------------------------------------------------------------
         Add permissions
        --------------------------------------------------------------*/

        GRANT ALL ON :t_cqpv TO GROUP 'prodcom_users';
        GRANT ALL ON :t_cqpv TO GROUP 'prodcom_devusers';
        GRANT SELECT ON :t_cqpv TO GROUP 'prodcom_otherusers';

        ret_val = CALLPROC msacm_fp_check_inq_ing(
                  h_num_row_ck = 1,
                  h_rollback   = 'N',
                  h_commit     = 'Y',
                  h_frpr_name  = :h_frpr_name);

        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error adding permissions to ' + :t_cqpv,
                      h_frpr_name = :h_frpr_name);
            RETURN 9;
        ENDIF;

        /*--------------------------------------------------------------
         Delete previous UNIT VALUES
        --------------------------------------------------------------*/

        DELETE FROM unit_values
        WHERE       question_industry = :g_industry
        AND         period BETWEEN :start_period AND :end_period;

        ret_val = CALLPROC msacm_fp_check_inq_ing(
                  h_num_row_ck = 1,
                  h_rollback   = 'N',
                  h_commit     = 'Y',
                  h_frpr_name  = :h_frpr_name);

        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error deleting from unit_values',
                      h_frpr_name = :h_frpr_name);
            RETURN 9;
        ENDIF;

        /*--------------------------------------------------------------
         Update 02 UNIT VALUES
        --------------------------------------------------------------*/

        INSERT INTO unit_values
        SELECT      b.question,
                    b.qperiod AS period,
                    b.question_industry,
                    SUM(a.avalue) * 1000.0 / SUM(b.avalue) AS returned_uv
        FROM        :t_cqpv a,
                    :t_cqpv b
        WHERE       a.contributor_reference = b.contributor_reference
        AND         a.qperiod = b.qperiod
        AND         a.acell = 'V'
        AND         b.acell = 'V'
        AND         MOD(a.question,10) = 1
        AND         b.question = a.question + 1
        GROUP BY    b.question,
                    b.qperiod,
                    b.question_industry;

        ret_val = CALLPROC msacm_fp_check_inq_ing(
                  h_num_row_ck = 1,
                  h_rollback   = 'N',
                  h_commit     = 'Y',
                  h_frpr_name  = :h_frpr_name);

        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error inserting 02 unit_values',
                      h_frpr_name = :h_frpr_name);
            RETURN 9;
        ENDIF;

        /*--------------------------------------------------------------
         Update 04 UNIT VALUES
        --------------------------------------------------------------*/

        INSERT INTO unit_values
        SELECT      b.question,
                    b.qperiod AS period,
                    b.question_industry,
                    SUM(a.avalue) * 1000.0 / SUM(b.avalue) AS returned_uv
        FROM        :t_cqpv a,
                    :t_cqpv b
        WHERE       a.contributor_reference = b.contributor_reference
        AND         a.qperiod = b.qperiod
        AND         a.acell = 'V'
        AND         b.acell = 'V'
        AND         MOD(a.question,10) = 1
        AND         b.question = a.question + 3
        GROUP BY    b.question,
                    b.qperiod,
                    b.question_industry;

        ret_val = CALLPROC msacm_fp_check_inq_ing(
                  h_num_row_ck = 1,
                  h_rollback   = 'N',
                  h_commit     = 'Y',
                  h_frpr_name  = :h_frpr_name);

        IF ret_val = 9
        THEN
            ret_val = CALLPROC msacm_fp_log_message (
                      h_text = 'Error inserting 04 unit_values',
                      h_frpr_name = :h_frpr_name);
            RETURN 9;
        ENDIF;

        h_rows = h_rows - 1;

    ENDWHILE;

    /*------------------------------------------------------------------
     End of 2-4 Imputation fix:
     Reset cqpv : set UKLM acells back (they've just been imputed)
    ------------------------------------------------------------------*/

    UPDATE cqpv a
    FROM   :h_table1 b
    SET    avalue = b.avalue,
           acell = b.acell
    WHERE  a.contributor_reference = b.contributor_reference
    AND    a.period = b.period
    AND    a.question = b.question;

    ret_val = CALLPROC msacm_fp_check_inq_ing(
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error resetting cqpv from ' + :h_table1,
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    /*------------------------------------------------------------------
     Reset cqpv : set 9200 acells back
    ------------------------------------------------------------------*/

    UPDATE cqpv a
    FROM   :h_table2 b
    SET    avalue = b.avalue,
           acell = b.acell
    WHERE  a.contributor_reference = b.contributor_reference
    AND    a.period = b.period
    AND    a.quest_order = 10;

    ret_val = CALLPROC msacm_fp_check_inq_ing(
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error resetting cqpv from ' + :h_table2,
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    /*------------------------------------------------------------------
     Empty h_table1 (we test for rows at start of process 2)
    ------------------------------------------------------------------*/

    MODIFY :h_table1 TO TRUNCATED;

    ret_val = CALLPROC msacm_fp_check_inq_ing(
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error emptying ' + :h_table1,
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;

    ret_val = CALLPROC msacm_fp_drop_table ( h_table = :h_table2);
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    MODIFY :h_table3 TO TRUNCATED;

    ret_val = CALLPROC msacm_fp_check_inq_ing(
              h_num_row_ck = 1,
              h_commit = 'Y',
              h_rollback = 'N',
              h_frpr_name = :h_frpr_name);

    IF ret_val = 9
    THEN
        ret_val = CALLPROC msacm_fp_log_message (
                  h_text = 'Error emptying ' + :h_table3,
                  h_frpr_name = :h_frpr_name);
        RETURN 9;
    ENDIF;


    RETURN 0;
}
