PROCEDURE msadb_fp_form_table (

        form_table            = VARCHAR(25) NOT NULL,
        period                = INTEGER4 NOT NULL,
        contributor_reference = CHAR(11) NOT NULL,
        contributor_industry  = INTEGER4 NOT NULL,
        inquiry               = INTEGER1 NOT NULL) =

DECLARE h_retries_allowed     = INTEGER1 NOT NULL,
        h_retries             = INTEGER1 NOT NULL,
        h_retry_or_not        = CHAR(5) NOT NULL,
        ret_val               = INTEGER1 NOT NULL,
        h_annual_period       = INTEGER4 NOT NULL,
        h_max_table1          = CHAR(25) NOT NULL,
        h_max_table2          = CHAR(25) NOT NULL,
        h_frpr_name           = VARCHAR(24) NOT NULL,
        h_text2               = VARCHAR(60) NOT NULL,
        h_text3               = VARCHAR(60) NOT NULL,
        h_text4               = VARCHAR(60) NOT NULL,
        h_text5               = VARCHAR(60) NOT NULL,
        h_text6               = VARCHAR(60) NOT NULL,
        h_text7               = VARCHAR(60) NOT NULL,
        h_text8               = VARCHAR(60) NOT NULL,
        h_text9               = VARCHAR(60) NOT NULL,
        h_text10              = VARCHAR(60) NOT NULL,
        h_cncode1             = VARCHAR(60) NOT NULL,
        h_cncode2             = VARCHAR(60) NOT NULL,
        h_cncode3             = VARCHAR(60) NOT NULL,
        h_cncode4             = VARCHAR(60) NOT NULL,
        h_cncode5             = VARCHAR(60) NOT NULL,
        h_cncode6             = VARCHAR(60) NOT NULL,
        h_cncode7             = VARCHAR(60) NOT NULL,
        h_cncode8             = VARCHAR(60) NOT NULL,
        h_cncode9             = VARCHAR(60) NOT NULL,
        h_tid                 = INTEGER4 NOT NULL,
        h_question            = INTEGER4 NOT NULL,
        h_lines               = INTEGER4 NOT NULL

{
    h_frpr_name = 'msada_fp_form_table';
    h_retries_allowed = 3;
    h_max_table1 = 'form_max_questions1';
    h_max_table2 = 'form_max_questions2';

    IF inquiry = 14
    THEN
        h_annual_period = :period;
    ELSE
        h_annual_period = :period / 100 * 100;
    ENDIF;

    /*-s----------------------------------------------------------------
    Create form_table with questions
    ----------------------------------------------------------------e-*/

    MESSAGE 'Creating Form Table . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        CREATE TABLE :form_table
        AS SELECT    'Q'  AS  col_type,
                     :contributor_reference AS contributor_reference,
                     :contributor_industry AS contributor_industry,
                     INT4(a.quest_order) AS q_n_l_code,
                     a.question AS q_n_order,
                     0 AS q_desc_code,
                     INT1(0) AS q_count,
                     0  AS q_line,
                     0  AS need_count,
                     '                                                              ' AS text1,
                     '                                                              ' AS text2,
                     '                                                              ' AS text3,
                     '                                                              ' AS text4,
                     '                                                              ' AS text5,
                     '                                                              ' AS text6,
                     '                                                              ' AS text7,
                     '                                                              ' AS text8,
                     '                                                              ' AS text9,
                     '                                                              ' AS text10,
                     b.unit_1 AS unit1,
                     '                                                      ' AS cn_code1,
                     '                                                      ' AS cn_code2,
                     '                                                      ' AS cn_code3,
                     '                                                      ' AS cn_code4,
                     '                                                      ' AS cn_code5,
                     '                                                      ' AS cn_code6,
                     '                                                      ' AS cn_code7,
                     '                                                      ' AS cn_code8,
                     '                                                      ' AS cn_code9
        FROM         cqpv a,
                     question_library b
        WHERE        a.period = :period
        AND          b.period = :h_annual_period
        AND          a.contributor_reference = :contributor_reference
        AND          a.contributor_inquiry = :inquiry
        AND          a.question = b.question;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in creating ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No questions were found for this Contributor'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    /*-s----------------------------------------------------------------
    Amended November 2001 to delete all records containing 9100
    employment question as this has been deleted and will no longer be
    printed on forms and reprints
    ----------------------------------------------------------------e-*/
    MESSAGE 'Deleting 9100 from Form Table . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        DELETE FROM :form_table
        WHERE MOD(q_n_order,10000) = 9100;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System deleting 9100 from ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    /*-s----------------------------------------------------------------
    Update with the new question text in 60-character chunks
    ----------------------------------------------------------------e-*/

    ret_val = CALLPROC msadb_fp_create_question (
              form_table      = :form_table,
              h_annual_period = :h_annual_period);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    /*-s----------------------------------------------------------------
     Insert the note details for each contributor for the specified
     output category into the table
    ----------------------------------------------------------------e-*/

    MESSAGE 'Inserting Note . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        INSERT INTO :form_table (
                    q_n_l_code,
                    col_type,
                    contributor_reference,
                    contributor_industry,
                    q_n_order,
                    q_desc_code,
                    q_count,
                    q_line,
                    need_count,
                    text1,
                    text2,
                    text3,
                    text4,
                    text5,
                    text6,
                    text7,
                    text8,
                    text9,
                    text10,
                    unit1,
                    cn_code1,
                    cn_code2,
                    cn_code3,
                    cn_code4,
                    cn_code5,
                    cn_code6,
                    cn_code7,
                    cn_code8,
                    cn_code9)
        SELECT
        DISTINCT    b.note_code,
                    'N',
                    a.contributor_reference,
                    a.contributor_industry,
                    c.line_no,
                    0,
                    c.line_count,
                    0,
                    0,
                    c.text1,
                    c.text2,
                    c.text3,
                    c.text4,
                    c.text5,
                    c.text6,
                    c.text7,
                    c.text8,
                    c.text9,
                    c.text10,
                    '',
                    '',
                    '',
                    '',
                    '',
                    '',
                    '',
                    '',
                    '',
                    ''
        FROM        contributor_period a,
                    question_note_link b,
                    form_note_text c,
                    cqpv d
        WHERE       a.period = :period
        AND         a.period = d.period
        AND         b.period = :h_annual_period
        AND         c.period = b.period
        AND         a.contributor_reference = d.contributor_reference
        AND         a.contributor_reference = :contributor_reference
        AND         d.question = b.question
        AND         b.note_code = c.note_code;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in inserting notes into ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

/*  /*-s----------------------------------------------------------------
/*     P col_type - Local Units
/*  ----------------------------------------------------------------e-*/
/*
/*    MESSAGE 'Inserting LUs . . .';
/*
/*    h_retry_or_not      = 'RETRY';
/*    h_retries           = 0;
/*
/*    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
/*    DO
/*
/*        h_retries = :h_retries + 1;
/*
/*        INSERT INTO :form_table
/*        SELECT      'P'  AS  col_type,
/*                    a.contributor_reference AS contributor_reference,
/*                    a.contributor_industry AS contributor_industry,
/*                    INT4(b.lu_reference) AS q_n_l_code,
/*                    0  AS q_n_order,
/*                    0  AS q_desc_code,
/*                    0 AS q_count,
/*                    0 AS q_line,
/*                    0 AS need_count,
/*                    b.lu_name1 AS text1,
/*                    b.lu_name2 AS text2,
/*                    b.lu_name3 AS text3,
/*                    b.lu_addr1 AS text4,
/*                    b.lu_addr2 AS text5,
/*                    b.lu_addr3 AS text6,
/*                    b.lu_addr4 AS text7,
/*                    b.lu_addr5 AS text8,
/*                    b.lu_postcode AS text9,
/*                    '' AS text10,
/*                    '' AS text11,
/*                    '' AS text12,
/*                    '' AS unit1,
/*                    '' AS cn_code1,
/*                    '' AS cn_code2,
/*                    '' AS cn_code3,
/*                    '' AS cn_code4,
/*                    '' AS cn_code5,
/*                    '' AS cn_code6,
/*                    '' AS cn_code7,
/*                    '' AS cn_code8,
/*                    '' AS cn_code9
/*        FROM        contributor_period a,
/*                    contributor_luaddress b
/*        WHERE       a.period = :period
/*        AND         a.period = b.period
/*        AND         b.contributor_reference = a.contributor_reference
/*        AND         a.contributor_reference = :contributor_reference
/*        AND         a.structure = 'L';
/*
/*        ret_val = CALLPROC check_inq_ing (
/*                  h_num_row_ck      = 1,
/*                  h_commit          = 'Y',
/*                  h_rollback        = 'N',
/*                  h_retries         = :h_retries,
/*                  h_retries_allowed = :h_retries_allowed,
/*                  h_frpr_name       = :h_frpr_name);
/*
/*        IF ret_val <> 7
/*        THEN
/*            h_retry_or_not = '';
/*        ENDIF;
/*
/*    ENDWHILE;
/*
/*    IF ret_val = 7
/*    THEN
/*        RETURN 7;
/*
/*    ELSEIF ret_val = 9
/*    THEN
/*        MESSAGE 'System error inserting col_type P LUs into ' + :form_table
/*        WITH STYLE = POPUP;
/*        RETURN 9;
/*
/*    ENDIF; */

    /*-s----------------------------------------------------------------
     P col_type
    ----------------------------------------------------------------e-*/

    MESSAGE 'Inserting P9s . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        INSERT INTO :form_table
        SELECT      'P'  AS  col_type,
                    contributor_reference AS contributor_reference,
                    contributor_industry AS contributor_industry,
                    999999999 AS q_n_l_code,
                    0 AS q_n_order,
                    0  AS q_desc_code,
                    0 AS q_count,
                    0 AS q_line,
                    0 AS need_count,
                    '' AS text1,
                    '' AS text2,
                    '' AS text3,
                    '' AS text4,
                    '' AS text5,
                    '' AS text6,
                    '' AS text7,
                    '' AS text8,
                    '' AS text9,
                    '' AS text10,
                    '' AS unit1,
                    '' AS cn_code1,
                    '' AS cn_code2,
                    '' AS cn_code3,
                    '' AS cn_code4,
                    '' AS cn_code5,
                    '' AS cn_code6,
                    '' AS cn_code7,
                    '' AS cn_code8,
                    '' AS cn_code9
        FROM        contributor_period
        WHERE       period = :period
        AND         contributor_reference = :contributor_reference;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error inserting col_type P into ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    /*-s----------------------------------------------------------------
     N col_type
    ----------------------------------------------------------------e-*/

    MESSAGE 'Inserting N9s . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        INSERT INTO :form_table
        SELECT      'N'  AS  col_type,
                    contributor_reference AS contributor_reference,
                    contributor_industry AS contributor_industry,
                    999999999 AS q_n_l_code,
                    0 AS q_n_order,
                    0  AS q_desc_code,
                    0 AS q_count,
                    0 AS q_line,
                    0 AS need_count,
                    '' AS text1,
                    '' AS text2,
                    '' AS text3,
                    '' AS text4,
                    '' AS text5,
                    '' AS text6,
                    '' AS text7,
                    '' AS text8,
                    '' AS text9,
                    '' AS text10,
                    '' AS unit1,
                    '' AS cn_code1,
                    '' AS cn_code2,
                    '' AS cn_code3,
                    '' AS cn_code4,
                    '' AS cn_code5,
                    '' AS cn_code6,
                    '' AS cn_code7,
                    '' AS cn_code8,
                    '' AS cn_code9
        FROM        contributor_period
        WHERE       period = :period
        AND         contributor_reference =:contributor_reference;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error inserting col_type N into ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    /*-s----------------------------------------------------------------
     Update q_line for 'Q' col_type rows - this field is used in the report
     writer program to determine when and how to draw the lines on the
     form:

     0 = Don't draw a line,
     2 = Draw a line across the page

     (A line is drawn after the highest volume of every question)
    ----------------------------------------------------------------e-*/

    MESSAGE 'Calculating Print Order of Questions . . .';

    ret_val = CALLPROC msa_fp_drop_table (
	      h_table = :h_max_table1);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        CREATE TABLE :h_max_table1
        AS SELECT    q_n_order/10 AS base,
                     q_n_order AS question
        FROM         :form_table
        WHERE        col_type = 'Q'
        AND          q_n_l_code = 1;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error creating ' + :h_max_table1
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    ret_val = CALLPROC msa_fp_drop_table (
	      h_table = :h_max_table2);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        CREATE TABLE :h_max_table2
        AS SELECT    base,
                     MAX(question) AS question
        FROM         :h_max_table1
        GROUP BY     base;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in creating ' + :h_max_table2
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        UPDATE :form_table a
        FROM   :h_max_table2 b
        SET    q_line = 2
        WHERE  a.col_type = 'Q'
        AND    a.q_n_order = b.question
        AND    a.q_n_l_code = 1;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in updating qline on ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    /*-s----------------------------------------------------------------
     Update with CN Codes
    ----------------------------------------------------------------e-*/

    MESSAGE 'Updating with CN Codes . . ';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        UPDATE :form_table
        SET    cn_code1 = '',
               cn_code2 = '',
               cn_code3 = '',
               cn_code4 = '',
               cn_code5 = '',
               cn_code6 = '',
               cn_code7 = '',
               cn_code8 = '',
               cn_code9 = '';

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error blanking CN Codes on ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No CN Codes blanked on ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        UPDATE :form_table a
        FROM   prodcom_cncodes b
        SET    cn_code1 = IFNULL(b.cn_code1,''),
               cn_code2 = IFNULL(b.cn_code2,''),
               cn_code3 = IFNULL(b.cn_code3,''),
               cn_code4 = IFNULL(b.cn_code4,''),
               cn_code5 = IFNULL(b.cn_code5,''),
               cn_code6 = IFNULL(b.cn_code6,''),
               cn_code7 = IFNULL(b.cn_code7,''),
               cn_code8 = IFNULL(b.cn_code8,''),
               cn_code9 = IFNULL(b.cn_code9,'')
        WHERE  a.q_n_order = b.prodcom_code
        AND    b.period = :h_annual_period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error updating CNCodes on ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    /*------------------------------------------------------------------
     Rework the lines needed to print each question.

     Start by selecting all Value Questions
     (01 questions with quest_order of 1).
    ------------------------------------------------------------------*/

    MESSAGE 'Calculating Question Lines Required . . .';

    SELECT text2 AS h_text2,
           text3 AS h_text3,
           text4 AS h_text4,
           text5 AS h_text5,
           text6 AS h_text6,
           text7 AS h_text7,
           text8 AS h_text8,
           text9 AS h_text9,
           text10 AS h_text10,
           cn_code1 AS h_cncode1,
           cn_code2 AS h_cncode2,
           cn_code3 AS h_cncode3,
           cn_code4 AS h_cncode4,
           cn_code5 AS h_cncode5,
           cn_code6 AS h_cncode6,
           cn_code7 AS h_cncode7,
           cn_code8 AS h_cncode8,
           cn_code9 AS h_cncode9,
           tid AS h_tid
    FROM   :form_table
    WHERE  MOD(q_n_order,10) = 1
    AND    q_n_l_code = 1
    {
        /*--------------------------------------------------------------
        Initial Count of 6 =
        1 for the blank line before the first line of text, plus
        1 for the first line of text (there's always at least one line
        of text), plus
        1 for the blank line after the question text, plus
        3 for the 'Value of Sales' and the 2 blank lines following it.
        --------------------------------------------------------------*/

        h_lines=6;

        /*--------------------------------------------------------------
        Add 1 for each subsequent line of question text
        --------------------------------------------------------------*/

        IF h_text2 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_text3 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_text4 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_text5 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_text6 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_text7 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_text8 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_text9 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_text10 <> '' THEN h_lines = h_lines + 1; ENDIF;

        /*--------------------------------------------------------------
        If there is any CN Text, add 2:
        1 for the first line of CN Text, plus
        1 for the blank line following the CN Text lines.
        --------------------------------------------------------------*/

        IF h_cncode1 <> '' THEN h_lines = h_lines + 2; ENDIF;

        /*--------------------------------------------------------------
        Add 1 for each subsequent line of CN text
        --------------------------------------------------------------*/

        IF h_cncode2 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_cncode3 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_cncode4 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_cncode5 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_cncode6 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_cncode7 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_cncode8 <> '' THEN h_lines = h_lines + 1; ENDIF;
        IF h_cncode9 <> '' THEN h_lines = h_lines + 1; ENDIF;

        h_retry_or_not      = 'RETRY';
        h_retries           = 0;

        WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
        DO

            h_retries = :h_retries + 1;

            UPDATE :form_table
            SET    need_count = :h_lines
            WHERE  tid = :h_tid;

            ret_val = CALLPROC check_inq_ing (
                      h_num_row_ck      = 1,
                      h_commit          = 'Y',
                      h_rollback        = 'N',
                      h_retries         = :h_retries,
                      h_retries_allowed = :h_retries_allowed,
                      h_frpr_name       = :h_frpr_name);

            IF ret_val <> 7
            THEN
                h_retry_or_not = '';
            ENDIF;

        ENDWHILE;

        IF ret_val = 7
        THEN
            RETURN 7;

        ELSEIF ret_val = 9
        THEN
            MESSAGE 'System error updating need count on ' + :form_table
            WITH STYLE = POPUP;
            RETURN 9;

        ELSEIF ret_val = 1
        THEN
            MESSAGE 'No rows updated on need count on ' + :form_table
            WITH STYLE = POPUP;
            RETURN 9;
        ENDIF;
    };

    ret_val = CALLPROC check_inq_ing (
              h_num_row_ck      = 1,
              h_commit          = 'Y',
              h_rollback        = 'N',
              h_frpr_name       = :h_frpr_name);

    IF ret_val = 9
    THEN
        MESSAGE 'System error in select loop 1 for ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    /*------------------------------------------------------------------
     If any volumes exist, add 3 to the 01 question for each volume:
     (1 for the volume text, plus 1 for the blank line before, plus
      1 for the blank line after).
    ------------------------------------------------------------------*/

    SELECT q_n_order AS h_question
    FROM   :form_table
    WHERE  MOD(q_n_order,10) IN (2,4,5,6,8)
    {
        /*--------------------------------------------------------------
         Select each volume, and update its value.
        --------------------------------------------------------------*/

        h_retry_or_not      = 'RETRY';
        h_retries           = 0;

        WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
        DO

            h_retries = :h_retries + 1;

            UPDATE :form_table
            SET    need_count = need_count + 3
            WHERE  q_n_order = :h_question / 10 * 10 + 1;

            ret_val = CALLPROC check_inq_ing (
                      h_num_row_ck      = 1,
                      h_commit          = 'Y',
                      h_rollback        = 'N',
                      h_retries         = :h_retries,
                      h_retries_allowed = :h_retries_allowed,
                      h_frpr_name       = :h_frpr_name);

            IF ret_val <> 7
            THEN
                h_retry_or_not = '';
            ENDIF;

        ENDWHILE;

        IF ret_val = 7
        THEN
            RETURN 7;

        ELSEIF ret_val = 9
        THEN
            MESSAGE 'System error updating need_count 2 on ' + :form_table
            WITH STYLE = POPUP;
            RETURN 9;

        ELSEIF ret_val = 1
        THEN
            MESSAGE 'No rows updated on ' + :form_table
            WITH STYLE = POPUP;
            RETURN 9;
        ENDIF;

    };

    ret_val = CALLPROC check_inq_ing (
              h_num_row_ck      = 1,
              h_commit          = 'Y',
              h_rollback        = 'N',
              h_frpr_name       = :h_frpr_name);

    IF ret_val = 9
    THEN
        MESSAGE 'System error in select loop 2 for ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    /*-s----------------------------------------------------------------
    Because of the width limit in the final report writer, move the
    cncodes onto a separate line:

    At the moment an 01 question has:
        1 line of 11 question text columns plus 9 cn_code columns

    Replace this by :
        1 line of 11 question text columns
        1 line of 9 cn_code columns

    by reinserting a duplicate line where the question text has been
    replaced by the cn_code text
    ----------------------------------------------------------------e-*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        INSERT INTO :form_table (
                    col_type,
                    contributor_reference,
                    contributor_industry,
                    q_n_l_code,
                    q_n_order,
                    q_desc_code,
                    q_count,
                    q_line,
                    need_count,
                    text1,
                    text2,
                    text3,
                    text4,
                    text5,
                    text6,
                    text7,
                    text8,
                    text9,
                    text10,
                    unit1,
                    cn_code1,
                    cn_code2,
                    cn_code3,
                    cn_code4,
                    cn_code5,
                    cn_code6,
                    cn_code7,
                    cn_code8,
                    cn_code9)
        SELECT      col_type,
                    contributor_reference,
                    contributor_industry,
                    q_n_l_code,
                    q_n_order,
                    1,
                    q_count,
                    q_line,
                    0,
                    cn_code1,
                    cn_code2,
                    cn_code3,
                    cn_code4,
                    cn_code5,
                    cn_code6,
                    cn_code7,
                    cn_code8,
                    cn_code9,
                    '',
                    unit1,
                    cn_code1,
                    cn_code2,
                    cn_code3,
                    cn_code4,
                    cn_code5,
                    cn_code6,
                    cn_code7,
                    cn_code8,
                    cn_code9
        FROM        :form_table
        WHERE       col_type = 'Q'
        AND         q_n_l_code = 1
        AND         MOD(q_n_order,10) = 1;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error re-inserting cncodes into ' + :form_table
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    ret_val = CALLPROC msa_fp_drop_table ( h_table = :h_max_table1);
    ret_val = CALLPROC msa_fp_drop_table ( h_table = :h_max_table2);

    RETURN 0;

}
