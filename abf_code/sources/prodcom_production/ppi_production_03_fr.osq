INITIALIZE () =

DECLARE h_retries_allowed = INTEGER1      NOT NULL,
        h_retries         = INTEGER1      NOT NULL,
        h_retry_or_not    = CHAR(5)       NOT NULL,
        h_return          = INTEGER4      NOT NULL,
        h_prompt          = CHAR(1)       NOT NULL,
        h_who             = CHAR(3)       NOT NULL,
        h_fullname        = VARCHAR(40)   NOT NULL,
        h_dummy           = INTEGER4      NOT NULL,
        h_frpr_name       = VARCHAR(24)   NOT NULL,
        h_message         = VARCHAR(70)   NOT NULL,
        h_title           = VARCHAR(80)   NOT NULL,
        h_command         = VARCHAR(1000) NOT NULL,
        h_prev_period     = VARCHAR(6)    NOT NULL,
        h_alloc           = VARCHAR(5)    NOT NULL,
        h_prev_alloc      = VARCHAR(5)    NOT NULL,
        h_year            = VARCHAR(2)    NOT NULL,
        h_filename        = VARCHAR(60)   NOT NULL,

        lp_error_check          = PROCEDURE RETURNING INTEGER,
        lp_drop_table           = PROCEDURE RETURNING INTEGER

{

SELECT DBMSINFO('username') AS g_user_id;
SELECT DBMSINFO('database') AS g_database;

h_frpr_name = 'ppi_production_3_fr';
h_prev_period = VARCHAR( INT(:g_period) - 100 );
h_year = VARCHAR(INT(LEFT(VARCHAR(:g_period),4)-1996));
h_alloc = '12' +VARCHAR(:h_year) +'1';
h_prev_alloc = '12' +VARCHAR(INT(:h_year)-1) +'1';
msa_date = 'now';

h_title = 'PPI SAMPLE EXPORT PART THREE';
s_title = SHIFT(:h_title, (((80-LENGTH(h_title))/2)*1));

}

/*=======================================================================
   FRSKEY4: Go - Run task
======================================================================*/

'GO', KEY FRSKEY4 =
{

/*-------------------------------------------------------------------
 #1: Checking for ppi_steel_pop_{period}
-------------------------------------------------------------------*/

h_filename = 'ppi_steel_pop_'+VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #2: Checking for ppi_steel_addresses_{period}
-------------------------------------------------------------------*/

h_filename = 'ppi_steel_addresses_'+VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #3: Checking for ppi_steel_ent_sales_{period}
-------------------------------------------------------------------*/

h_filename = 'ppi_steel_ent_sales_'+VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #4: Checking for prodcom_pop_against_idbr_{period}
-------------------------------------------------------------------*/

h_filename = 'prodcom_pop_against_idbr_'+VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #5: Checking for ppi_map_{period}
-------------------------------------------------------------------*/

h_filename = 'ppi_map_'+VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #6: Checking for ppi_detr_extras_{period}
-------------------------------------------------------------------*/

h_filename = 'ppi_detr_extras_'+VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #7: Checking for ppi_alloc_{alloc}_{period}
-------------------------------------------------------------------*/

h_filename = 'ppi_alloc_' +VARCHAR(:h_alloc) +'_' +VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #8: Checking for SAS Universe file
-------------------------------------------------------------------*/

h_filename = 'pp' +VARCHAR(:g_period) +'u.csv';

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #9: Checking for contributor_product_pair_exclusions_{period}
-------------------------------------------------------------------*/

h_filename = 'contributor_product_pair_exclusions_' +VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #10: Checking for ppi_exclusions_{period}
-------------------------------------------------------------------*/

h_filename = 'contributor_exclusions_' +VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #11: Checking for ppi_sixdigits_{period}
-------------------------------------------------------------------*/

h_filename = 'ppi_sixdigits_' +VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #12: Checking for ppi_bndsinflate_{period}
-------------------------------------------------------------------*/

h_filename = 'ppi_bndsinflate_' +VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
 #13: Checking for ppi_bndsinflate_{period}
-------------------------------------------------------------------*/

h_filename = 'contributor_links_' +VARCHAR(:g_period);

MESSAGE 'Checking for ' +:h_filename + '. . .' ;

h_command = '$SCRIPTS/check_file_exists.script '
          + '/prodcom/live5/files/text/' + :h_filename ;

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ' +:h_filename + ' is not present in $TEXTFILES.' +X'0D'
        + '         Please ensure it is present then re-run this task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;
/*-------------------------------------------------------------------
   Runs application  
-------------------------------------------------------------------*/

MESSAGE 'Running application. . .' ;

h_command = '$IMAGES/ppi_sample_app '
          + '-numeric_overflow=ignore '
          + '-dprodlivedb -a '
          + VARCHAR(:g_period) + ' '
          + VARCHAR(:h_alloc) + ' '
          + '1 '
          + VARCHAR(:h_prev_period) + ' '
          + VARCHAR(:h_prev_alloc) + ' '
          + '1 12 '
          + VARCHAR(:g_period) + ' '
          + VARCHAR(:h_year) + '1 '
          + 'y';

h_return = CALLPROC callsys_cp(:h_command);

IF h_return  != 0
THEN
  MESSAGE 'WARNING: ppi_sample_app failed to run successfully.'  +X'0D'
        + '         Error code ' +VARCHAR(:h_return) +'. Please investigate ' 
        + 'and then re-run task.'
  WITH STYLE = POPUP;
  RETURN;
ENDIF;

/*-------------------------------------------------------------------
   Record completion in ppc_task_status.
-------------------------------------------------------------------*/

  INSERT INTO ppc_task_status
  VALUES (    :g_task_name,
              :g_period,
              :g_who,
              DATE('today'));

h_return = CALLPROC lp_error_check (p_num_row_ck  = 1);

IF h_return != 0
THEN
  MESSAGE 'ERROR: Failed to insert into ppc_task_status. Error code '
        + VARCHAR(:h_return) +'. Please complete this manually. Continuing...'
  WITH STYLE = POPUP;
ENDIF;


MESSAGE 'PROCESS COMPLETED SUCCESSFULLY.' WITH STYLE = POPUP;

RETURN;

}


/*=======================================================================
   FRSKEY12: (F12) ABORT - Return to main menu.
======================================================================*/

'ABORT', KEY FRSKEY12 = 
BEGIN
  RETURN;
END


/*********************** LOCAL PROCEDURES ***********************************/

/*===========================================================================
	      Local procedure for basic error checking.
============================================================================*/

PROCEDURE lp_error_check
	  (p_num_row_ck  = INTEGER4 NOT NULL WITH DEFAULT)=

DECLARE lp_return = INTEGER4 NOT NULL WITH DEFAULT


BEGIN

lp_return = CALLPROC check_inq_ing ( h_num_row_ck      = :p_num_row_ck,
 				    h_commit          = 'Y',
				    h_rollback        = 'N',
				    h_retries         = 1,
                                    h_retries_allowed = 1,
                                    h_frpr_name       = :h_frpr_name);
RETURN :lp_return;

END


/*===========================================================================
	      Local procedure for dropping a table if it exists.
============================================================================*/

PROCEDURE lp_drop_table(p_table_name = CHAR(24) NOT NULL) = 

  DECLARE lp_return = INTEGER4 NOT NULL WITH DEFAULT,
          lp_table  = CHAR(20) NOT NULL

BEGIN

  SELECT table_name as lp_table 
    FROM iitables
   WHERE table_name = :p_table_name
     AND table_owner = :g_user_id;

  lp_return = CALLPROC lp_error_check(p_num_row_ck  = 0);

  IF lp_return = 0
  THEN
    RETURN 0;
  ENDIF;

  IF lp_return > 1 
  THEN
    MESSAGE 'SYSTEM ERROR: Failed whilst selecting ' 
          +  VARCHAR(:p_table_name) + ' from iitables prior to droping, '
          + 'with error code ' + VARCHAR(:lp_return) + '. '
          + 'Process cannot continue so exiting.';
    RETURN 9;
  ENDIF;

  MODIFY :p_table_name to TRUNCATED;

  DROP TABLE :p_table_name;

  h_return = CALLPROC lp_error_check(p_num_row_ck  = 0);

  IF h_return != 0 
  THEN 
    MESSAGE 'SYSTEM ERROR: Unable to drop ' + VARCHAR(:p_table_name) + '. '
          + 'Process cannot continue so exiting.';
    RETURN 9; 
  ENDIF;

  RETURN 0;

END

