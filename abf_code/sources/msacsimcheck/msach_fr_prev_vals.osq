INITIALIZE (

        h_counter         = INTEGER4 NOT NULL) =

DECLARE h_retries_allowed = INTEGER1 NOT NULL,
        h_retries         = INTEGER1 NOT NULL,
        h_retry_or_not    = CHAR(5) NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        h_max_rows        = INTEGER4 NOT NULL,
        ret_val           = INTEGER1 NOT NULL,
        h_start_period    = INTEGER4 NOT NULL,
        h_end_period      = INTEGER4 NOT NULL,
        lp_load_table     = PROCEDURE RETURNING INTEGER

{    
    h_retries_allowed = 3;
    h_frpr_name = 'msach_fr_prev_vals';
    h_max_rows = CALLPROC ARRAYALLROWS(g_question_array);

    h_end_period = :g_period[1].period;
    h_start_period = :g_period[:g_periods].period;

    SET_FORMS FIELD '' (MODE(tf) = 'READ');

    ret_val = CALLPROC lp_load_table ();
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    RESUME FIELD tf;
}

'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'HELP',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');

}

'PreviousQuestion' =
{
    IF :h_counter = 1
    THEN
        MESSAGE 'No more Questions'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    h_counter = :h_counter - 1;

    ret_val = CALLPROC lp_load_table ();
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;
}

'NextQuestion' =
{
    IF :h_counter = :h_max_rows
    THEN
        MESSAGE 'No more Questions'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    h_counter = :h_counter + 1;

    ret_val = CALLPROC lp_load_table ();
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;
}

'End', KEY FRSKEY6 =
{
    RETURN 0;
}

/*----------------------------------------------------------------------
                  L O C A L   P R O C E D U R E
----------------------------------------------------------------------*/

PROCEDURE lp_load_table () =
{
    question = :g_question_array[:h_counter].question;
    quest_message = 'Question ' + VARCHAR(:h_counter) + 
		    ' of ' + VARCHAR(:h_max_rows);

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        tf = 

        SELECT   question,
                 total_value,
                 enterprise_count,
                 period
        FROM     question_period
        WHERE    question = :question
        AND      inquiry = :g_inquiry
        AND      period BETWEEN :h_start_period AND :h_end_period
        UNION
        SELECT   a.question,
                 a.total_value,
                 a.enterprise_count,
                 a.period
        FROM     question_period a,
                 question_history b
        WHERE    b.new_question = :question
        AND      b.old_question = a.question
        AND      b.rep_type = 1
        AND      inquiry = :g_inquiry
        AND      a.period BETWEEN :h_start_period AND :h_end_period
        ORDER BY period DESC;
              
        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in loading from question_period'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No rows loaded from question_period'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    RETURN 0;
}
