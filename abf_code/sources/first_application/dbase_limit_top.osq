/****************************************************************************
                         dbase_admin_top                            
                                                                    
  This menu provides 'Prodcomotherusers' group with their read only options.
 
  It replaces a hard coded menu that was contained in their .profile documents
  that allowed them to bypass database security.

  All users with the O1 access code will be directed here. (Others, read-only)

  Called by :    a111_absolute_top                                   
                                                                    
****************************************************************************/

INITIALIZE () =

DECLARE 
  h_retries_allowed = INTEGER1    NOT NULL,
  h_retries         = INTEGER1    NOT NULL,
  h_retry_or_not    = CHAR(5)     NOT NULL,
  h_frpr_name       = VARCHAR(24) NOT NULL,
  h_return          = INTEGER1    NOT NULL,

  lp_full_error_check = PROCEDURE RETURNING INTEGER NOT NULL WITH DEFAULT,

{

  SET_FORMS FRS (TIMEOUT = :gc_other_timeout);

  h_retries_allowed = 3;
  h_frpr_name = 'dbase_limit_top';
  msa_date = 'now';
     
  h_return = CALLPROC check_motd ();
  IF h_return != 0
  THEN
    /* Error message handled in external procedure */
    RETURN 9;
  ENDIF;

  RESUME FIELD choice;
}

/********************** FIELD ACTIVATIONS *****************************/

FIELD choice = 
{
    
  IF choice = 1 
  THEN
    CALL APPLICATION 
    (EXEC = '$IMAGES/take_on_receipt_app -numeric_overflow=ignore '
          + 'msab_fr_ex_menu2');

  ELSEIF choice = 2 
  THEN
    CALL APPLICATION 
    (EXEC = '$IMAGES/online_cont_sel_app -numeric_overflow=ignore '
          + 'msafd_fr_view');

  ELSEIF choice = 3
  THEN
    CALL APPLICATION 
    (EXEC = '$IMAGES/msacsimcheck -numeric_overflow=ignore '
          + 'msach_fr_menu');

  ELSEIF choice = 4 
  THEN
    CALL APPLICATION 
    (EXEC = '$IMAGES/quest_note_appl -numeric_overflow=ignore '
          + 'msaee_fr_in_quest_info');

  ELSEIF choice = 5 
  THEN
    CALL APPLICATION 
    (EXEC = '$IMAGES/quest_note_appl -numeric_overflow=ignore '
          + 'msaee_fr_quest_text_menu');

  ELSEIF choice = 0 
  THEN

    DELETE FROM   inter_image_params
    WHERE         user_id = :g_user_id;
    
    h_return = CALLPROC lp_full_error_check (p_num_row_ck = 1);
    
    IF h_return = 9
    THEN
      RETURN 9;
    ELSEIF h_return = 1
    THEN
      MESSAGE 'ERROR: Failed to delete from Inter Image Parameters. '
            + 'Error code 1. Please contact IM immediately. '
            + 'This session will now terminate.'
      WITH STYLE = POPUP;
      RETURN 9;
    ENDIF;

  RETURN 0;

  ELSE

    msa_date = 'now';

    RESUME FIELD choice;

  ENDIF; 

  /*-------------------------------------------------------------------
      Deals with returns from submenus and other images etc.
  ------------------------------------------------------------------*/
    
  h_return = CALLPROC msa_fp_update_iip (h_exit = 'N');

  IF h_return > 1
  THEN
    RETURN h_return;
  ENDIF;

  msa_date = 'now';

  SET_FORMS FRS (TIMEOUT = :gc_other_timeout);

  h_return = CALLPROC check_motd ();
  IF h_return != 0
  THEN
    /* Error message handled in external procedure */
    RETURN 9;
  ENDIF;

  RESUME FIELD choice;
    
}
    
/**************************** TIMEOUT PROCESS ***************************/

/*----------------------------------------------------------------------
   Timeout Errors   
----------------------------------------------------------------------*/

ON TIMEOUT =
{

  h_retry_or_not      = 'RETRY';
  h_retries           = 0;

  WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
  DO

    h_retries = :h_retries + 1;

    DELETE FROM   inter_image_params
    WHERE         user_id = :g_user_id;

    h_return = CALLPROC lp_full_error_check (p_num_row_ck = 1);

    IF h_return != 7
    THEN
      h_retry_or_not = '';
    ENDIF;

  ENDWHILE;

  IF h_return > 1
  THEN
    MESSAGE 'ERROR: Failed to delete from inter-image patrameters '
          + 'during time-out process. '
          + 'Error code ' +VARCHAR(:h_return) +'. '
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
  ENDIF;

  h_retry_or_not      = 'RETRY';
  h_retries           = 0;

  WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
  DO

    h_retries = :h_retries + 1;

    INSERT INTO dba_timeouts
              ( event_time,
                user_id,
                event_type,
                frpr_name)
    VALUES    ( 'now',
                :g_user_id,
                'FINAL',
                :h_frpr_name);

    h_return = CALLPROC lp_full_error_check (p_num_row_ck = 1);

    IF h_return != 7
    THEN
      h_retry_or_not = '';
    ENDIF;

  ENDWHILE;

  IF h_return > 1
  THEN
    MESSAGE 'ERROR: Failed to record time based system exit in log. '
          + 'Error code ' +VARCHAR(:h_return) +'. '
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
  ENDIF;

  EXIT;
}

/*=======================================================================
    Local procedure to fully check sql for errors during online programs.
    Committed, no rollback.
=======================================================================*/

PROCEDURE lp_full_error_check (p_num_row_ck = INTEGER4 NOT NULL WITH DEFAULT) =

DECLARE   lp_return   = INTEGER4  NOT NULL WITH DEFAULT,

{

  lp_return = CALLPROC check_inq_ing 
            ( h_num_row_ck      = :p_num_row_ck,
              h_commit          = 'Y',
              h_rollback        = 'N',
              h_retries         = :h_retries,
              h_retries_allowed = :h_retries_allowed,
              h_frpr_name       = :h_frpr_name);

  RETURN :lp_return;

}

