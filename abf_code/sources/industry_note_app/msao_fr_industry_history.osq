/*----------------------------------------------------------------------
msao_fr_industry_history
----------------------------------------------------------------------*/

INITIALIZE ( h_industry         = INTEGER4 NOT NULL,  
             industry_title     = CHAR(60) NOT NULL) =

    DECLARE  h_reply            = CHAR(1)  NOT NULL,
             h_frpr_name        = VARCHAR(25) NOT NULL,
             h_retries_allowed  = INTEGER1 NOT NULL,
             h_retries          = INTEGER1 NOT NULL,
             h_retry_or_not     = CHAR(5)  NOT NULL,
             h_rows             = INTEGER4 NOT NULL,
             ret_val            = INTEGER1 NOT NULL,
             lp_setup_screen    = PROCEDURE RETURNING INTEGER

{
    h_frpr_name = 'msao_fr_industry_history';
    h_retries_allowed = 3;
    SET_FORMS FIELD '' (MODE(tf) = 'READ');   



    ret_val = CALLPROC lp_setup_screen;

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;
}

'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'Help',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');
}

'New', KEY FRSKEY4 =
{
    IF :g_user_id NOT LIKE 'prod%' AND :g_user_id NOT LIKE 'cbu%'
    THEN
        MESSAGE 'Sorry, but this option is for PRODCOM Staff only'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    ret_val = CALLFRAME msao_fr_new_details(
              h_industry       = :h_industry,
              industry_title   = :industry_title);

    IF ret_val <> 0
    THEN
        MESSAGE 'Error in creating new details'
        WITH STYLE = POPUP;
        RETURN ret_val;
    ENDIF;

    ret_val = CALLPROC lp_setup_screen;

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;
}

'View', KEY FRSKEY5 =
{
    INQUIRE_FORMS TABLE '' (h_rows = DATAROWS(tf));

    IF :h_rows = 0
    THEN
        MESSAGE 'Nothing to view'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    ret_val = CALLFRAME msao_fr_view_details(
              h_industry       = :h_industry,
              industry_title   = :industry_title,
              h_tid            = :tf.industry_tid);

    IF ret_val <> 0
    THEN
        MESSAGE 'Error in viewing details'
        WITH STYLE = POPUP;
        RETURN ret_val;
    ENDIF;
}

'Update', KEY FRSKEY6 =
{
    IF :g_user_id NOT LIKE 'prod%' AND :g_user_id NOT LIKE 'cbu%'
    THEN
        MESSAGE 'Sorry, but this option is for PRODCOM Staff only'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    INQUIRE_FORMS TABLE '' (h_rows = DATAROWS(tf));

    IF :h_rows = 0
    THEN
        MESSAGE 'Nothing to update'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    ret_val = CALLFRAME msao_fr_update_details(
              h_industry       = :h_industry,
              industry_title   = :industry_title,
              h_tid            = :tf.industry_tid);

    IF ret_val <> 0
    THEN
        MESSAGE 'Error in updating details'
        WITH STYLE = POPUP;
        RETURN ret_val;
    ENDIF;

    ret_val = CALLPROC lp_setup_screen;

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;
}

'Delete', KEY FRSKEY7 =
{
    IF :g_user_id NOT LIKE 'prod%' AND :g_user_id NOT LIKE 'cbu%'
    THEN
        MESSAGE 'Sorry, but this option is for PRODCOM Staff only'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    INQUIRE_FORMS TABLE '' (h_rows = DATAROWS(tf));

    IF :h_rows = 0
    THEN
        MESSAGE 'Nothing to delete'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    h_reply = '';
    WHILE LOWERCASE(h_reply) <> 'n' AND LOWERCASE(h_reply) <> 'y'
    DO
        h_reply = PROMPT 'Do you really want to delete these ' +
                         'details ? Type Y/N and press <return>'
        WITH STYLE = POPUP;
    ENDWHILE;

    IF LOWERCASE(h_reply) = 'n'
    THEN
        RESUME FIELD tf;
    ENDIF;

    /*------------------------------------------------------------------
     delete from industry_note_pad
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        DELETE FROM industry_note_pad
        WHERE       industry_tid = :tf.industry_tid
        AND         industry = :h_industry;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_frpr_name       = :h_frpr_name,
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_rollback        = 'N');

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error deleting from industry_note_pad'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'Unable to delete this contact from industry_note_pad'
        WITH STYLE = POPUP;
        RETURN 1;
    ENDIF;

    /*------------------------------------------------------------------
     delete from extra information table
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        DELETE FROM industry_extra_info
        WHERE       industry_tid = :tf.industry_tid
        AND         industry = :h_industry;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_frpr_name       = :h_frpr_name,
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_rollback        = 'N');

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in deleting extra details'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    ret_val = CALLPROC lp_setup_screen;

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;
}

'End', KEY FRSKEY14  =
{
    RETURN 0;
}

/*----------------------------------------------------------------------
                  L O C A L   P R O C E D U R E
----------------------------------------------------------------------*/

PROCEDURE lp_setup_screen () =
{

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO
        h_retries = :h_retries + 1;

        tf =

        SELECT   inform_date,
                 IFNULL(inform_source,' ') AS inform_source,
                 IFNULL(inform_message,' ') AS inform_message,
                 industry_tid
        FROM     industry_note_pad
        WHERE    industry = :h_industry
        ORDER BY inform_date DESC,
                 industry_tid DESC;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_frpr_name       = :h_frpr_name,
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_rollback        = 'N');

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
       MESSAGE 'Error loading industry history onto screen'
       WITH STYLE = POPUP;
       RETURN 9;
    ENDIF;

    RETURN 0;
}
