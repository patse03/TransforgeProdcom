/*----------------------------------------------------------------------
 Batch version (no popups) of dropping a table - if it exists

 Calls batch_check_inq_ing and inserts into error_log
----------------------------------------------------------------------*/

PROCEDURE batch_fp_drop_table (

        h_table = VARCHAR(40) NOT NULL) =

DECLARE h_check_table     = VARCHAR(40) NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        h_user_id         = VARCHAR(24) NOT NULL,
        ret_val           = INTEGER1 NOT NULL
{
    h_frpr_name = 'batch_fp_drop_table';

    SELECT DBMSINFO('username') AS h_user_id;

    SELECT table_name AS h_check_table
    FROM   iitables
    WHERE  table_name = :h_table
    AND    table_owner = :h_user_id;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'System Error accessing iitables',
                    :h_frpr_name,
                    0,
                    :h_user_id);
        COMMIT;
        RETURN 9;

    ELSEIF ret_val = 0
    THEN

        DROP :h_table;

        ret_val = CALLPROC batch_check_inq_ing (
                  h_num_row_ck = 1,
                  h_commit     = 'Y',
                  h_rollback   = 'N',
                  h_frpr_name  = :h_frpr_name);

        IF ret_val = 9
        THEN
            INSERT INTO error_log
            VALUES (    'now',
                        'System Error dropping ' + :h_table,
                        :h_frpr_name,
                        0,
                        :h_user_id);
            COMMIT;
            RETURN 9;

        ENDIF;

    ENDIF;

    RETURN 0;
}
