/*----------------------------------------------------------------------
msaj_fr_view_details
----------------------------------------------------------------------*/

INITIALIZE ( p_contributor_reference = CHAR(11) NOT NULL,
             h_tid              = INTEGER4 NOT NULL ) =

DECLARE      h_contrib_text     = CHAR(76) NOT NULL,
             h_line_no          = INTEGER2 NOT NULL,
             h_frpr_name        = VARCHAR(25) NOT NULL,
             h_retries_allowed  = INTEGER1 NOT NULL,
             h_retries          = INTEGER1 NOT NULL,
             h_max_rows         = INTEGER4 NOT NULL,
             h_counter          = INTEGER4 NOT NULL,
             h_return            = INTEGER1 NOT NULL,
             h_retry_or_not     = CHAR(5)  NOT NULL,

             lp_load_contact     = PROCEDURE RETURNING INTEGER,
             lp_full_error_check = PROCEDURE RETURNING INTEGER,

{
  h_frpr_name = 'msaj_fr_view_details';
  h_retries_allowed = 3;

  contributor_reference = :p_contributor_reference;

  h_max_rows = ARRAYALLROWS(g_contact_array);

  h_counter = 0;

  UNLOADTABLE g_contact_array
  BEGIN
    h_counter = h_counter + 1;

    IF g_contact_array.contrib_tid = h_tid
    THEN
      ENDLOOP;
    ENDIF;

  END;

  h_return = CALLPROC lp_load_contact ();

  IF h_return != 0
  THEN
    RETURN h_return;
  ENDIF;

}

'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'Help',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');
}

'PreviousContact', KEY FRSKEY4 =
{

  IF h_counter = 1
  THEN
    MESSAGE 'NOTE: You have reached the beginning of the contact notes.'
    WITH STYLE = POPUP;
    RESUME;
  ENDIF;

  h_counter = h_counter - 1;

  h_return = CALLPROC lp_load_contact ();

  IF h_return != 0
  THEN
    RETURN h_return;
  ENDIF;

}

'NextContact', KEY FRSKEY5 =
{
  IF h_counter = h_max_rows
  THEN
    MESSAGE 'NOTE: You have reached the latest contact note.'
    WITH STYLE = POPUP;
    RESUME;
  ENDIF;

  h_counter = h_counter + 1;

  h_return = CALLPROC lp_load_contact ();

  IF h_return != 0
  THEN
    RETURN h_return;
  ENDIF;

}

'End', KEY FRSKEY14  =
{
    RETURN 0;
}

/*----------------------------------------------------------------------
 TIMEOUT activation
----------------------------------------------------------------------*/

ON TIMEOUT =
{
    IF :g_user_id NOT LIKE 'pr%'
    THEN
        EXIT;
    ENDIF;
}

/*********************** LOCAL PROCEDURES **************************/

/*----------------------------------------------------------------------
     Local Procedure to load contact details. 
----------------------------------------------------------------------*/

PROCEDURE lp_load_contact () =

DECLARE   lp_return   = INTEGER4  NOT NULL WITH DEFAULT,

{
  CLEAR FIELD contact_date, contact_message, count_message,
              line1, line2, line3, line4, line5, line6, line7,
              line8, line9, line10, line11, line12, line13, line14,
              line15, line16, line17, line18;

  count_message = 'Contact ' + VARCHAR(h_counter) + ' of ' +
                  VARCHAR(h_max_rows) +'.';

  h_tid = :g_contact_array[h_counter].contrib_tid;

  MESSAGE 'Loading Contact . . .';

  h_retry_or_not      = 'RETRY';
  h_retries           = 0;

  WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
  DO

    h_retries = :h_retries + 1;

    SELECT IFNULL(contact_date,' ') AS contact_date,
           IFNULL(contact_message,' ') AS contact_message,
           period
    FROM   contrib_communication2
    WHERE  contrib_tid = :h_tid
      AND  contributor_reference = :p_contributor_reference;

    lp_return = CALLPROC lp_full_error_check (p_num_row_ck = 1);

    IF lp_return != 7
    THEN
      h_retry_or_not = '';
    ENDIF;

  ENDWHILE;

  IF lp_return = 7
  THEN
    RETURN 7;

  ELSEIF lp_return != 0
  THEN
    MESSAGE 'ERROR: Failed to load details from contrib_communication2. '
          + 'Error code ' +VARCHAR(:lp_return) +'. ' 
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
    RETURN :lp_return;
  ENDIF;

  /*------------------------------------------------------------------
     Get rest of details from extra table
  ------------------------------------------------------------------*/

  h_retry_or_not      = 'RETRY';
  h_retries           = 0;

  WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
  DO

    h_retries = :h_retries + 1;

    SELECT line_no AS h_line_no,
           contrib_text AS h_contrib_text
    FROM   contrib_extra_info2
    WHERE  contrib_tid = :h_tid
      AND  contributor_reference = :p_contributor_reference
    BEGIN

      IF :h_line_no = 1
      THEN
        line1 := :h_contrib_text;
      ELSEIF :h_line_no = 2
      THEN
        line2 := :h_contrib_text;
      ELSEIF :h_line_no = 3
      THEN
        line3 := :h_contrib_text;
      ELSEIF :h_line_no = 4
      THEN
        line4 := :h_contrib_text;
      ELSEIF :h_line_no = 5
      THEN
        line5 := :h_contrib_text;
      ELSEIF :h_line_no = 6
      THEN
        line6 := :h_contrib_text;
      ELSEIF :h_line_no = 7
      THEN
        line7 := :h_contrib_text;
      ELSEIF :h_line_no = 8
      THEN
        line8 := :h_contrib_text;
      ELSEIF :h_line_no = 9
      THEN
        line9 := :h_contrib_text;
      ELSEIF :h_line_no = 10
      THEN
        line10 := :h_contrib_text;
      ELSEIF :h_line_no = 11
      THEN
        line11 := :h_contrib_text;
      ELSEIF :h_line_no = 12
      THEN
        line12 := :h_contrib_text;
      ELSEIF :h_line_no = 13
      THEN
        line13 := :h_contrib_text;
      ELSEIF :h_line_no = 14
      THEN
        line14 := :h_contrib_text;
      ELSEIF :h_line_no = 15
      THEN
        line15 := :h_contrib_text;
      ELSEIF :h_line_no = 16
      THEN
        line16 := :h_contrib_text;
      ELSEIF :h_line_no = 17
      THEN
        line17 := :h_contrib_text;
      ELSEIF :h_line_no = 18
      THEN
        line18 := :h_contrib_text;
      ENDIF;

    END;

    lp_return = CALLPROC lp_full_error_check (p_num_row_ck = 1);

    IF lp_return != 7
    THEN
      h_retry_or_not = '';
    ENDIF;

  ENDWHILE;

  IF lp_return = 7
  THEN
    RETURN 7;

  ELSEIF lp_return = 1
  THEN
       line2 = '                **  SYSTEM MESSAGE: This note is blank.  **'; 

  ELSEIF lp_return > 1
  THEN
    MESSAGE 'ERROR: Failed to load data from contrib_extra_info2. '
          + 'Error code ' +VARCHAR(:lp_return) +'. ' 
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
    RETURN :lp_return;
  ENDIF;

  RETURN 0;
}


/*=======================================================================
    Local procedure to fully check sql for errors during online programs.
    Committed, no rollback.
=======================================================================*/

PROCEDURE lp_full_error_check (p_num_row_ck = INTEGER4 NOT NULL WITH DEFAULT) =

DECLARE   lp_return   = INTEGER4  NOT NULL WITH DEFAULT,

{

  lp_return = CALLPROC check_inq_ing (
                  h_num_row_ck = :p_num_row_ck,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

  RETURN :lp_return;

}

