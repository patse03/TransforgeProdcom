/*----------------------------------------------------------------------
msaj_fr_new_details
----------------------------------------------------------------------*/

INITIALIZE ( contributor_name  = CHAR(35) NOT NULL,
             phone_contact     = CHAR(30) NOT NULL,
             inquiry           = INTEGER1 NOT NULL,
             p_contributor_reference  = CHAR(11) NOT NULL) =

DECLARE      h_tid             = INTEGER4 NOT NULL,
             h_frpr_name       = VARCHAR(25) NOT NULL,
             h_retries_allowed = INTEGER1 NOT NULL,
             h_retries         = INTEGER1 NOT NULL,
             h_return           = INTEGER1 NOT NULL,
             period            = INTEGER4 NOT NULL,
             h_retry_or_not    = CHAR(5)  NOT NULL,

             lp_full_error_check = PROCEDURE RETURNING INTEGER NOT NULL,

{
    h_frpr_name = 'msaj_fr_new_details';
    h_retries_allowed = 3;
    h_tid = 0;

  /*----------------------------------------------------------------------
       Access check. (Error messages handled by procedure.)
  ----------------------------------------------------------------------*/
  
  h_return = CALLPROC check_access_frames (p_frpr_name = :h_frpr_name);

  IF h_return = 1 
  THEN
    RETURN 0;
  ELSEIF h_return > 1
  THEN
    RETURN 9;
  ENDIF;


  /*------------------------------------------------------------------
    Work out period that's being chased up by taking 1 year 
    from today (01/01/1996 -> 1995)
  ------------------------------------------------------------------*/

  period = date_part('year',date('today') - '1 year')*100;
    
}

FIELD contact_method =
{

  IF contact_method != 'F' AND contact_method != 'E'
  AND contact_method != 'X' AND contact_method != 'T'
  AND contact_method != 'L' AND contact_method != 'I'
  THEN
    MESSAGE 'WARNING: Contact method must be F, E, X, T, L or I.'
    WITH STYLE = POPUP;
    RESUME FIELD contact_method;
  ELSE
    RESUME FIELD contact_inorout;
  ENDIF;

}

FIELD contact_inorout =
{

  IF contact_inorout != 'I' AND contact_inorout != 'O'
  THEN
    MESSAGE 'Incoming or Outgoing must be I or O.'
    WITH STYLE = POPUP;
    RESUME FIELD contact_inorout;
  ELSE
    RESUME FIELD contact_reason;
  ENDIF;

}

FIELD contact_reason =
{
  IF contact_reason != 'C' AND contact_reason != 'R'
  AND contact_reason != 'D' AND contact_reason != 'A'
  AND contact_reason != 'E' AND contact_reason != 'M'
  AND contact_reason != 'V'
  THEN
    MESSAGE 'Contact reason must be C, R, D, A, E, V or M'
    WITH STYLE = POPUP;
    RESUME FIELD contact_reason;
  ENDIF;

  h_retry_or_not      = 'RETRY';
  h_retries           = 0;

  WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
  DO

    h_retries = :h_retries + 1;

    SELECT  IFNULL((MAX(contrib_tid) + 1),1) AS h_tid
    FROM    contrib_communication2
    WHERE   contributor_reference = :p_contributor_reference;

    h_return = CALLPROC lp_full_error_check (p_num_row_ck = 1);

    IF h_return != 7
    THEN
      h_retry_or_not = '';
    ENDIF;

  ENDWHILE;

  IF h_return = 7
  THEN
    RETURN 7;

  ELSEIF h_return != 0
  THEN
    MESSAGE 'ERROR: Failed to access the most recent contact details. '
          + 'Error code ' +VARCHAR(:h_return) +'. '
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
    RETURN :h_return;

  ENDIF;

  h_retry_or_not      = 'RETRY';
  h_retries           = 0;

  WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
  DO

    h_retries = :h_retries + 1;

    INSERT INTO contrib_communication2 (
                contributor_reference,
                contrib_tid,
                period,
                contact_reason,
                contact_method,
                contact_inorout,
                contact_date,
                contact_code,
                contact_message,
                user_id)
    VALUES (    :p_contributor_reference,
                :h_tid,
                :period,
                :contact_reason,
                :contact_method,
                :contact_inorout,
                'now',
                '*',
                ' ',
                :g_user_id);

    h_return = CALLPROC lp_full_error_check (p_num_row_ck = 1);

    IF h_return != 7
    THEN
      h_retry_or_not = '';
      ENDIF;

  ENDWHILE;

  IF h_return = 7
  THEN
    RETURN 7;

  ELSEIF h_return != 0
  THEN
    MESSAGE 'ERROR: Failed to insert new contact details into '
          + 'contrib_communication2. Error code ' +VARCHAR(:h_return) +'. '
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
    RETURN :h_return;
  ENDIF;

  h_return = CALLFRAME msaj_fr_update_details 
           ( inquiry          = 14,
             p_contributor_reference = :p_contributor_reference,
             phone_contact    = :phone_contact,
             contributor_name = :contributor_name,
             h_tid            = :h_tid);

  RETURN h_return;

}

'End', KEY FRSKEY14  =
{
    RETURN 0;
}

/*************************** LOCAL PROCEDURES ******************************/


/*=======================================================================
    Local procedure to fully check sql for errors during online programs.
    Committed, no rollback.
=======================================================================*/

PROCEDURE lp_full_error_check (p_num_row_ck = INTEGER4 NOT NULL WITH DEFAULT) =

DECLARE   lp_return   = INTEGER4  NOT NULL WITH DEFAULT,

{

  lp_return = CALLPROC check_inq_ing 
            ( h_num_row_ck = :p_num_row_ck,
              h_commit          = 'Y',
              h_rollback        = 'N',
              h_retries         = :h_retries,
              h_retries_allowed = :h_retries_allowed,
              h_frpr_name       = :h_frpr_name);

  RETURN :lp_return;

}

