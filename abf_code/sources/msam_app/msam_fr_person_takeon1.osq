INITIALIZE () =

DECLARE h_retries_allowed = INTEGER1 NOT NULL,
        h_retries         = INTEGER1 NOT NULL,
        h_retry_or_not    = CHAR(5) NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        h_table           = VARCHAR(24) NOT NULL,
        ret_val           = INTEGER1 NOT NULL,
        h_user_id         = VARCHAR(24) NOT NULL,
        h_hold_user_id    = VARCHAR(24) NOT NULL,
        h_weekno          = INTEGER1 NOT NULL,
        h_cleared         = INTEGER4 NOT NULL,
        h_pw_cleared      = INTEGER4 NOT NULL

{
    h_table = 'temp_person_subclass';
    h_frpr_name = 'msam_fr_person_takeon1';
    h_retries_allowed = 3;
    msa_date = 'now';

    SET_FORMS FIELD '' (DISPLAYONLY(inquiry) = 0,
                        REVERSE(inquiry) = 0,
                        UNDERLINE(inquiry) = 1,
                        DISPLAYONLY(period) = 0,
                        REVERSE(period) = 0,
                        UNDERLINE(period) = 1,
                        DISPLAYONLY(weekno) = 0,
                        REVERSE(weekno) = 0,
                        UNDERLINE(weekno) = 1,
                        DISPLAYONLY(industry) = 0,
                        REVERSE(industry) = 0,
                        UNDERLINE(industry) = 1);
}

FIELD inquiry =
{
    IF inquiry <> 14 AND inquiry <> 15
    THEN
        MESSAGE 'Inquiry must be 14 or 15'
        WITH STYLE = POPUP;
        RESUME FIELD inquiry;
    ENDIF;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT MAX(period) AS period
        FROM   inquiry_period
        WHERE  inquiry = :inquiry;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing inquiry_period'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No rows found on inquiry_period'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    SET_FORMS FIELD '' (DISPLAYONLY(inquiry) = 1,
                        REVERSE(inquiry) = 1,
                        UNDERLINE(inquiry) = 0);

    RESUME FIELD period;
}

FIELD period =
{
    MESSAGE 'Checking Period . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT week_no AS weekno
        FROM   inquiry_period
        WHERE  period = :period
        AND    inquiry = :inquiry;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing inquiry_period'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'This Period does not exist for this Inquiry'
        WITH STYLE = POPUP;
        RESUME FIELD period;
    ENDIF;

    SET_FORMS FIELD '' (DISPLAYONLY(period) = 1,
                        REVERSE(period) = 1,
                        UNDERLINE(period) = 0);

    h_weekno = :weekno;
    RESUME FIELD weekno;
}

FIELD weekno =
{
    IF weekno < 1 OR weekno > :h_weekno
    THEN
        MESSAGE 'Valid Weeks are in the range 1 to ' + VARCHAR(:h_weekno)
        WITH STYLE = POPUP;
        RESUME FIELD weekno;
    ENDIF;

    SET_FORMS FIELD '' (DISPLAYONLY(weekno) = 1,
                        REVERSE(weekno) = 1,
                        UNDERLINE(weekno) = 0);

    RESUME FIELD industry;
}

FIELD industry =
{
    MESSAGE 'Checking Industry . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT industry
        FROM   industry_period
        WHERE  industry = :industry
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing industry_period'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'This Industry does not exist for this Inquiry'
        WITH STYLE = POPUP;
        RESUME FIELD industry;
    ENDIF;

    SET_FORMS FIELD '' (DISPLAYONLY(industry) = 1,
                        REVERSE(industry) = 1,
                        UNDERLINE(industry) = 0);
    REDISPLAY;

    /*------------------------------------------------------------------
     Create table to hold personal clearance details
    ------------------------------------------------------------------*/

    ret_val = CALLPROC msa_fp_drop_table ( h_table = :h_table);
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        CREATE TABLE :h_table (
                     user_name  CHAR(24) NOT NULL,
                     cleared    INTEGER4 NOT NULL,
                     pw_cleared INTEGER4 NOT NULL);

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in creating ' + :h_table
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    /*------------------------------------------------------------------
     Create table to hold personal clearance details
    ------------------------------------------------------------------*/

    MESSAGE 'Selecting Data . . .';

    h_user_id = '';
    h_weekno = 0;
    h_hold_user_id = '9999';

    SELECT   user_id AS h_user_id,
             corr_week_no AS h_weekno
    FROM     contributor_period
    WHERE    corr_week_no BETWEEN 1 AND :weekno
    AND      period = :period
    AND      contributor_industry = :industry
    ORDER BY h_user_id
    {
        IF h_user_id = ''
        THEN
            h_user_id = 'UNKNOWN';
        ENDIF;

        IF h_hold_user_id <> h_user_id
        THEN
            IF h_hold_user_id <> '9999'
            THEN

                MESSAGE 'Selecting Data for ' +
                        VARCHAR(:h_user_id) + ' . . .';

                h_retry_or_not      = 'RETRY';
                h_retries           = 0;

                WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
                DO

                    h_retries = :h_retries + 1;

                    INSERT INTO :h_table (
                                user_name,
                                cleared,
                                pw_cleared)
                    VALUES (    :h_hold_user_id,
                                :h_cleared,
                                :h_pw_cleared);

                    ret_val = CALLPROC check_inq_ing (
                              h_num_row_ck      = 1,
                              h_commit          = 'Y',
                              h_rollback        = 'N',
                              h_retries         = :h_retries,
                              h_retries_allowed = :h_retries_allowed,
                              h_frpr_name       = :h_frpr_name);

                    IF ret_val <> 7
                    THEN
                        h_retry_or_not = '';
                    ENDIF;

                ENDWHILE;

                IF ret_val = 7
                THEN
                    RETURN 7;

                ELSEIF ret_val = 9
                THEN
                    MESSAGE 'System error in inserting into ' + :h_table
                    WITH STYLE = POPUP;
                    RETURN 9;

                ELSEIF ret_val = 1
                THEN
                    MESSAGE 'No rows inserted into ' + :h_table
                    WITH STYLE = POPUP;
                    RETURN 9;
                ENDIF;
            ENDIF;

            h_cleared = 0;
            h_pw_cleared = 0;
            h_hold_user_id = h_user_id;

        ENDIF;

        h_cleared = h_cleared + 1;

        IF h_weekno <= :weekno - 1
        THEN
            h_pw_cleared = h_pw_cleared + 1;
        ENDIF;
    };

    /*------------------------------------------------------------------
     Final insert
    ------------------------------------------------------------------*/

    IF h_hold_user_id <> '9999'
    THEN
        h_retry_or_not      = 'RETRY';
        h_retries           = 0;
    
        WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
        DO
    
            h_retries = :h_retries + 1;
    
            INSERT INTO :h_table (
                        user_name,
                        cleared,
                        pw_cleared)
            VALUES (    :h_hold_user_id,
                        :h_cleared,
                        :h_pw_cleared);
    
            ret_val = CALLPROC check_inq_ing (
                      h_num_row_ck      = 1,
                      h_commit          = 'Y',
                      h_rollback        = 'N',
                      h_retries         = :h_retries,
                      h_retries_allowed = :h_retries_allowed,
                      h_frpr_name       = :h_frpr_name);
    
            IF ret_val <> 7
            THEN
                h_retry_or_not = '';
            ENDIF;
    
        ENDWHILE;
    
        IF ret_val = 7
        THEN
            RETURN 7;
    
        ELSEIF ret_val = 9
        THEN
            MESSAGE 'System error inserting into ' + :h_table
            WITH STYLE = POPUP;
            RETURN 9;
    
        ELSEIF ret_val = 1
        THEN
            MESSAGE 'No Contributors have been cleared for ' +
                    VARCHAR(:period) + ' up to Week ' + VARCHAR(weekno)
            WITH STYLE = POPUP;
            RESUME;
        ENDIF;
    ENDIF;

    /*------------------------------------------------------------------
     Put names on the table
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        UPDATE :h_table a
        FROM   passwords b
        SET    user_name = b.user_name
        WHERE  a.user_name = b.user_id;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in updating from passwords'
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    /*------------------------------------------------------------------
     Display the results
    ------------------------------------------------------------------*/

    ret_val = CALLFRAME msam_fr_person_takeon2 (
              h_table = :h_table);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    CLEAR FIELD ALL;
    msa_date = 'now';
    SET_FORMS FIELD '' (DISPLAYONLY(inquiry) = 0,
                        REVERSE(inquiry) = 0,
                        UNDERLINE(inquiry) = 1,
                        DISPLAYONLY(period) = 0,
                        REVERSE(period) = 0,
                        UNDERLINE(period) = 1,
                        DISPLAYONLY(weekno) = 0,
                        REVERSE(weekno) = 0,
                        UNDERLINE(weekno) = 1,
                        DISPLAYONLY(industry) = 0,
                        REVERSE(industry) = 0,
                        UNDERLINE(industry) = 1);
    RESUME FIELD inquiry;
}

'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'HELP',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');

}

'Clear' =
{
    CLEAR FIELD ALL;
    msa_date = 'now';
    SET_FORMS FIELD '' (DISPLAYONLY(inquiry) = 0,
                        REVERSE(inquiry) = 0,
                        UNDERLINE(inquiry) = 1,
                        DISPLAYONLY(period) = 0,
                        REVERSE(period) = 0,
                        UNDERLINE(period) = 1,
                        DISPLAYONLY(weekno) = 0,
                        REVERSE(weekno) = 0,
                        UNDERLINE(weekno) = 1,
                        DISPLAYONLY(industry) = 0,
                        REVERSE(industry) = 0,
                        UNDERLINE(industry) = 1);
    RESUME FIELD inquiry;

}

'End', KEY FRSKEY6 =
{
    MESSAGE 'Exiting Screen . . .';
    ret_val = CALLPROC msa_fp_drop_table ( h_table = :h_table);
    RETURN 0;
}
