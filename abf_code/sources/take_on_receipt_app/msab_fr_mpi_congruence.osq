/*-s---------------------------------------------------------------------------
    This program loads the MPI congruence screen and is called by
       msab_fr_load_codes.
---------------------------------------------------------------------------e-*/
INITIALIZE () =

DECLARE h_retries_allowed = INTEGER1 NOT NULL,
        h_retries         = INTEGER1 NOT NULL,
        h_retry_or_not    = CHAR(5) NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        h_table1          = VARCHAR(20) NOT NULL,
        h_add_name1       = VARCHAR(35) NOT NULL,
        h_industry        = INTEGER4 NOT NULL,
        h_emp             = INTEGER4 NOT NULL,
        ret_val           = INTEGER1 NOT NULL

{
    h_retries_allowed = 3;
    h_frpr_name = 'msab_fr_mpi_congruence';
    h_table1 = 'mpi_cong_temp';
    msa_date = 'now';

    SET_FORMS FIELD '' (MODE(tf) = 'READ');

    SELECT DBMSINFO('database') AS g_database;

    MESSAGE 'Selecting Contributor name . . .';


   /*-----------------------------------------------------------
     get add_name1
    -----------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT add_name1
        FROM   contributor
        WHERE  contributor_reference = :contributor_reference;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing contributor'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'Contributor was not found on the contributor table'
        WITH STYLE = POPUP;
        RESUME FIELD contributor_reference;
    ENDIF;


   /*-----------------------------------------------------------
     select reg_emp
    -----------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT register_emp 
        FROM   contributor_period
        WHERE  contributor_reference = :contributor_reference
	AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing contributor_period'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'Contributor was not found on contributor_period'
        WITH STYLE = POPUP;
        RESUME FIELD contributor_reference;
    ENDIF;


   /*-----------------------------------------------------------
     select ProdCom total turnover
    -----------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT avalue AS prodcom_turnover
        FROM   cqpv
        WHERE  contributor_reference = :contributor_reference
	AND    period = :period
	AND    mod(question,10000) = 9200;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing cqpv'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'Contributor was not found on cqpv'
        WITH STYLE = POPUP;
        RESUME FIELD contributor_reference;
    ENDIF;


   /*-----------------------------------------------------------
     select from mpi_congruence
    -----------------------------------------------------------*/

    ret_val = CALLPROC msa_fp_drop_table (h_table = :h_table1);
    IF ret_val <> 0
    THEN
	RETURN ret_val;
    ENDIF;


    MESSAGE 'Selecting from mpi_congruence . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        CREATE TABLE :h_table1
        AS SELECT    period,
	    	     mpi_period,
		     mpi_industry,
		     contributor_reference,
		     mpi_sel_emp,
		     mpi_month_turnover,
		     mpi_total_turnover,
		     mpi_adjusted_month,
		     suggested_total_tno,
		     mpi_cell
        FROM         mpi_congruence 
        WHERE        contributor_reference = :contributor_reference
	AND          period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing mpi_congruence'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'Contributor not found on mpi_congruence'
        WITH STYLE = POPUP;
        RETURN 0;
    ENDIF;


   /*-----------------------------------------------------------
     select total turnover
    -----------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT DISTINCT mpi_total_turnover 
        FROM   :h_table1
        WHERE  contributor_reference = :contributor_reference
	AND    period = :period
	AND    mpi_cell = 'V';

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing ' + :h_table1
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'Total Turnover not found on ' + :h_table1
        WITH STYLE = POPUP;
        RESUME FIELD contributor_reference;
    ENDIF;


   /*-----------------------------------------------------------
     select suggested turnover which includes imputed turnover
    -----------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT DISTINCT suggested_total_tno 
        FROM   :h_table1
        WHERE  contributor_reference = :contributor_reference
	AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error accessing ' + :h_table1
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'Suggested Total Turnover not found on ' + :h_table1
        WITH STYLE = POPUP;
        RESUME FIELD contributor_reference;
    ENDIF;


    /*------------------------------------------------------------------
    Load Screen
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        tf =

        SELECT   period,
	 	 mpi_period,
		 mpi_industry,
		 mpi_sel_emp,
		 mpi_month_turnover,
		 mpi_adjusted_month,
		 mpi_cell
        FROM     :h_table1
        ORDER BY period,mpi_period DESC;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in loading from ' + :h_table1
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No rows loaded from ' + :h_table1
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    RESUME FIELD tf;
}


'Print' =
{
    MESSAGE 'Preparing Report . . .';
	msa_date = 'now';

    ret_val = CALLPROC msa_cp_callsys (
		  'report ' +
		  :g_database +
		  ' ''(h_table = "' + :h_table1 + '"' +
		  ',user_name = "' + :g_user_name + '"' +
		  ',period = ' + VARCHAR(:period) +
		  ',h_add_name1 = "' + :add_name1 + '"' +
		  ',h_industry = "' + VARCHAR(:contributor_industry) + '"' +
		  ',h_emp = "' + VARCHAR(:register_emp) + '"' +
		  ',h_mpi_total_turnover = "' + VARCHAR(:mpi_total_turnover) + '"' +
		  ',h_suggested_total_tno = "' + VARCHAR(:suggested_total_tno) + '"' +
		  ',h_prodcom_turnover = "' + VARCHAR(:prodcom_turnover) + '"' +
		  ',contributor_reference = "' + :contributor_reference + '"' +
		  ')'' -i$REPORTS/msab_rw_mpi_congruence.rw' +
		  ' > report.output 2> report.output');


    IF ret_val <> 0
    THEN
	MESSAGE 'Error producing report'
	WITH STYLE = POPUP;
    ELSE
        ret_val = CALLPROC msa_cp_callsys (
	                  'lp -o12p -d' + :g_printer +
	                  ' msab_mpi_congruence_print' +
	                  ' > rep.out 2> rep.out');

        IF ret_val <> 0
	THEN
	    MESSAGE 'Error sending report to printer ' +
		    :g_printer
	    WITH STYLE = POPUP;
        ELSE
	    MESSAGE 'Report sent to printer ' +
		    :g_printer + ' OK'
	    WITH STYLE = POPUP;
        ENDIF;
    ENDIF;
}


'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'HELP',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');
}


'End', KEY FRSKEY6 =
{
    MESSAGE 'Exiting MPI Congruence Screen . . .';
    ret_val = CALLPROC msa_fp_drop_table (h_table = :h_table1);
    RETURN 0;
}
