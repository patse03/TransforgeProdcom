/*-s--------------------------------------------------------------------
  This frame deletes uncoded entries, replacing them with the
  required question.
--------------------------------------------------------------------e-*/

INITIALIZE (

        contributor_inquiry      = INTEGER1 NOT NULL,
        store_ques               = INTEGER4 NOT NULL,
        contributor_reference    = CHAR(11) NOT NULL,
        h_dummy                  = CHAR(11) NOT NULL,
        h_idbr                   = CHAR(11) NOT NULL,
        period                   = INTEGER4 NOT NULL,
        avalue1                  = INTEGER4 NOT NULL,
        evalue1                  = INTEGER4 NOT NULL,
        prev_period              = INTEGER4 NOT NULL,
        contributor_industry     = INTEGER4 NOT NULL,
        currency                 = CHAR(1) NOT NULL,
        h_questions_changed      = CHAR(1) NOT NULL,
        temp_cqpv                = VARCHAR(20) NOT NULL,
        temp_del_aos             = VARCHAR(20) NOT NULL) =

DECLARE h_retries_allowed        = INTEGER1 NOT NULL,
        h_retries                = INTEGER1 NOT NULL,
        h_retry_or_not           = CHAR(5) NOT NULL,
        h_frpr_name              = VARCHAR(24) NOT NULL,
        ret_val                  = INTEGER1 NOT NULL,
        h_annual_period          = INTEGER4 NOT NULL,

        store_ques2              = INTEGER4 NOT NULL,
        question2_exists         = CHAR(1)  NOT NULL,
        question4_exists         = CHAR(1)  NOT NULL,
        question5_exists         = CHAR(1)  NOT NULL,
        question6_exists         = CHAR(1)  NOT NULL,
        question8_exists         = CHAR(1)  NOT NULL,
        volume_question          = INTEGER4 NOT NULL,
        question_industry        = INTEGER4 NOT NULL,
        h_ques_check             = INTEGER4 NOT NULL,
        h_db_inquiry             = INTEGER1 NOT NULL,
        unit_value               = FLOAT4 NOT NULL,
        h_testval                = FLOAT4 NOT NULL,
        reply                    = CHAR(1) NOT NULL,
        h_volume_found           = CHAR(1) NOT NULL,
        h_quest_order            = INTEGER1 NOT NULL,
        acellques                = INTEGER4 NOT NULL,
        store_01                 = INTEGER4 NOT NULL,
        store_val                = INTEGER4 NOT NULL,
        h_cell                   = CHAR(2)  NOT NULL,
        h_type                   = INTEGER1 NOT NULL,
        h_current_field          = CHAR(20) NOT NULL,
        h_ques_entered           = CHAR(1) NOT NULL,
        ret_num                  = INTEGER4 NOT NULL,
        h_lag                    = INTEGER4 NOT NULL,
        prompt1                  = CHAR(1) NOT NULL
{
    h_ques_entered = 'n';
    SET_FORMS FIELD  ''  (DISPLAYONLY(question)      = 1,
    DISPLAYONLY(question1)     = 0,
    DISPLAYONLY(question2)     = 1,
    DISPLAYONLY(question4)     = 1,
    DISPLAYONLY(question5)     = 1,
    DISPLAYONLY(question6)     = 1,
    DISPLAYONLY(question8)     = 1,
    INVISIBLE(question2)       = 1,
    INVISIBLE(question4)       = 1,
    INVISIBLE(question5)       = 1,
    INVISIBLE(question6)       = 1,
    INVISIBLE(question8)       = 1,
    INVISIBLE(value1)          = 1,
    INVISIBLE(value2)          = 1,
    INVISIBLE(value4)          = 1,
    INVISIBLE(value5)          = 1,
    INVISIBLE(value6)          = 1,
    INVISIBLE(value8)          = 1,
    UNDERLINE(value1)          = 0,
    UNDERLINE(value2)          = 0,
    UNDERLINE(value4)          = 0,
    UNDERLINE(value5)          = 0,
    UNDERLINE(value6)          = 0,
    UNDERLINE(value8)          = 0,
    INVISIBLE(message1)        = 0,
    INVISIBLE(message2)        = 0,
    INVISIBLE(brief_text)      = 1,
    UNDERLINE(question1) = 1);

    h_annual_period = :period / 100 * 100;

    message1 = 'Please type in the question to';
    message2 = 'replace the uncoded entry';

    IF currency = 'E'
    THEN
        value1 = :evalue1;
    ELSE
        value1 = :avalue1;
    ENDIF;

    h_frpr_name = 'msab_fr_up_aos';
    h_retries_allowed = 3;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT avalue AS value2
        FROM   :temp_cqpv
        WHERE  question = :question + 1;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing ' + :temp_cqpv
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        h_volume_found = 'n';

    ELSE
        h_volume_found = 'y';

    ENDIF;

}

FIELD question1 =
{
    IF ASCII(:question1) NOT LIKE '%1'
    THEN
        MESSAGE 'This is not a value question'
        WITH STYLE = POPUP;
        RESUME FIELD question1;
    ENDIF;

    /*-s----------------------------------------------------------------
    check if question already on form
    ----------------------------------------------------------------e-*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT question AS h_ques_check
        FROM   :temp_cqpv
        WHERE  question = :question1;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 0,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing ' + :temp_cqpv
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'Question already exists on form'
        WITH STYLE = POPUP;
        RESUME FIELD question1;
    ENDIF;

    ret_val = CALLPROC msab_fp_get_quesind (
              h_question     = question1,
              h_inquiry      = contributor_inquiry,
              h_lag          = BYREF(h_lag),
              h_db_inquiry   = BYREF(h_db_inquiry),
              h_brief_text   = BYREF(brief_text),
              h_period       = period,
              h_ques_ind     = BYREF(question_industry),
              h_quest_order  = BYREF(h_quest_order));

    IF ret_val = 9
    THEN
        RETURN 9;
    ELSEIF ret_val = 1
    THEN
        IF h_lag = 0
        THEN
            MESSAGE 'This Question does not exist'
            WITH STYLE = POPUP;
        ELSE
            MESSAGE 'This Question has a lag of ' + VARCHAR(:h_lag) +
                    ' and cannot be added to the form.'
            WITH STYLE = POPUP;
        ENDIF;

        RESUME FIELD question1;

    ENDIF;

    IF h_quest_order = 12
    THEN
        MESSAGE 'CSDB Questions cannot be added'
        WITH STYLE = POPUP;
        RESUME FIELD question1;
    ENDIF;

    IF h_quest_order > 7 AND question_industry <> contributor_industry
    THEN
        MESSAGE 'Standard headings must belong to the same industry' +
                ' as the contributor'
        WITH STYLE = POPUP;
        RESUME FIELD question1;
    ENDIF;

    SET_FORMS FIELD '' (INVISIBLE(brief_text)  = 0);
    REDISPLAY;

    ret_num = CALLPROC msab_fp_ck_val_vol(
              h_question       = question1,
              period           = period,
              question2_exists = BYREF(question2_exists),
              question4_exists = BYREF(question4_exists),
              question5_exists = BYREF(question5_exists),
              question6_exists = BYREF(question6_exists),
              question8_exists = BYREF(question8_exists));

    SET_FORMS FIELD '' (
    DISPLAYONLY(question1) = 1,
    INVISIBLE(value1)      = 0,
    DISPLAYONLY(value1)    = 0,
    UNDERLINE(value1)      = 1);

    IF question2_exists = 'y'
    THEN
        question2 = :question1 + 1;
        SET_FORMS FIELD ''       (DISPLAYONLY(value2)  = 0,
        INVISIBLE(question2) = 0,
        INVISIBLE(value2)    = 0,
        UNDERLINE(value2)    = 1);
    ENDIF;
    IF question4_exists = 'y'
    THEN
        question4 = :question1 + 3;
        SET_FORMS FIELD ''       (DISPLAYONLY(value4)  = 0,
        INVISIBLE(question4) = 0,
        INVISIBLE(value4)    = 0,
        UNDERLINE(value4)    = 1);
    ENDIF;
/******************
        IF question4_exists = 'y'
        THEN
            question4 = :question1 + 3;
            SET_FORMS FIELD ''       (DISPLAYONLY(value4)  = 0,
            INVISIBLE(question4) = 0,
            INVISIBLE(value4)    = 0,
            UNDERLINE(value4)    = 1);
        ENDIF;
    ENDIF;
********************/

    IF question5_exists = 'y'
    THEN
        question5 = :question1 + 4;
        SET_FORMS FIELD ''       (DISPLAYONLY(value5)  = 0,
        INVISIBLE(question5) = 0,
        INVISIBLE(value5)    = 0,
        UNDERLINE(value5)    = 1);
    ENDIF;
    IF question6_exists = 'y'
    THEN
        question6 = :question1 + 5;
        SET_FORMS FIELD ''       (DISPLAYONLY(value6)  = 0,
        INVISIBLE(question6) = 0,
        INVISIBLE(value6)    = 0,
        UNDERLINE(value6)    = 1);
     ENDIF;
/*****************
        IF question6_exists = 'y'
        THEN
            question6 = :question1 + 5;
            SET_FORMS FIELD ''       (DISPLAYONLY(value6)  = 0,
            INVISIBLE(question6) = 0,
            INVISIBLE(value6)    = 0,
            UNDERLINE(value6)    = 1);
        ENDIF;
    ENDIF;
************************/
    IF question8_exists = 'y'
    THEN
        question8 = :question1 + 7;
        SET_FORMS FIELD ''       (DISPLAYONLY(value8)  = 0,
        INVISIBLE(question8) = 0,
        INVISIBLE(value8)    = 0,
        UNDERLINE(value8)    = 1);
    ENDIF;

    IF question2_exists = 'n'
    THEN
        message1 = 'Question has no volume. Please';
        message2 = 'check value and press F11 to update';
    ELSE
        message1 = 'Please enter value (& volume/s) and';
        message2 = 'press F11 to update';
    ENDIF;

    REDISPLAY;

    h_ques_entered = 'y';
    SET_FORMS FIELD '' (UNDERLINE(question1) = 0);
    RESUME FIELD value1;

}

'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'HELP',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');

}

'Update', KEY FRSKEY11 =
{
    IF h_ques_entered = 'n'
    THEN
        MESSAGE 'Please enter a question'
        WITH STYLE = POPUP;
        RESUME FIELD question1;
    ENDIF;

    IF value1 = 0
    THEN
        MESSAGE 'Please enter a Value'
        WITH STYLE = POPUP;
        RESUME FIELD value1;
    ENDIF;

    /*------------------------------------------------------------------
    Insert the uncoded entry (& its volume) into :temp_del_aos
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        INSERT INTO :temp_del_aos
        VALUES (    :question,
		    :value1);

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error inserting value into ' + :temp_del_aos
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No value inserted into ' + :temp_del_aos
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    IF h_volume_found = 'y'
    THEN

        h_retry_or_not      = 'RETRY';
        h_retries           = 0;

        WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
        DO

            h_retries = :h_retries + 1;

            INSERT INTO :temp_del_aos
            VALUES (    :question + 1,
			:value2);

            ret_val = CALLPROC check_inq_ing (
                      h_num_row_ck      = 1,
                      h_commit          = 'Y',
                      h_rollback        = 'N',
                      h_retries         = :h_retries,
                      h_retries_allowed = :h_retries_allowed,
                      h_frpr_name       = :h_frpr_name);

            IF ret_val <> 7
            THEN
                h_retry_or_not = '';
            ENDIF;

        ENDWHILE;

        IF ret_val = 7
        THEN
            RETURN 7;

        ELSEIF ret_val = 9
        THEN
            MESSAGE 'System error inserting volume in ' + :temp_del_aos
            WITH STYLE = POPUP;
            RETURN 9;

        ELSEIF ret_val = 1
        THEN
            MESSAGE 'No volume inserted into ' + :temp_del_aos
            WITH STYLE = POPUP;
            RETURN 9;
        ENDIF;
    ENDIF;

    /*------------------------------------------------------------------
    Delete the uncoded entry (& its volume) from :temp_cqpv
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        DELETE FROM :temp_cqpv
        WHERE       question IN (:question, :question + 1);

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in deleting from ' + :temp_cqpv
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No uncoded entry deleted from ' + :temp_cqpv
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    ret_val  = CALLPROC msab_fp_ins_ext (
               currency             = :currency,
               temp_cqpv            = temp_cqpv,
               h_quest_order        = h_quest_order,
               h_question           = question1,
               h_cell               = 'V',
               h_value              = value1,
               h_cell_type          = '',
               h_aconstruction_type = 0,
               h_confirmation_code  = '',
	       h_inquiry            = :h_db_inquiry,
               h_question_industry  = question_industry);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    IF question2_exists = 'y'
    THEN
        IF value2 = 0
        THEN
            h_cell = 'Z';
        ELSE
            h_cell = 'V';
        ENDIF;

        ret_val  = CALLPROC msab_fp_ins_ext(
                   currency             = :currency,
                   temp_cqpv            = temp_cqpv,
                   h_quest_order        = h_quest_order,
                   h_question           = question2,
                   h_cell               = h_cell,
                   h_value              = value2,
                   h_cell_type          = '',
                   h_aconstruction_type = 0,
                   h_confirmation_code  = '',
	           h_inquiry            = :h_db_inquiry,
                   h_question_industry  = question_industry);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF question4_exists = 'y'
    THEN
        IF value4 = 0
        THEN
            h_cell = 'Z';
        ELSE
            h_cell = 'V';
        ENDIF;
        ret_val  = CALLPROC msab_fp_ins_ext(
                   currency             = :currency,
                   temp_cqpv            = temp_cqpv,
                   h_quest_order        = h_quest_order,
                   h_question           = question4,
                   h_cell               = h_cell,
                   h_value              = value4,
                   h_cell_type          = '',
                   h_aconstruction_type = 0,
                   h_confirmation_code  = '',
	           h_inquiry            = :h_db_inquiry,
                   h_question_industry  = question_industry);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF question5_exists = 'y'
    THEN
        IF value5 = 0
        THEN
            h_cell = 'Z';
        ELSE
            h_cell = 'V';
        ENDIF;
        ret_val  = CALLPROC msab_fp_ins_ext(
                   currency             = :currency,
                   temp_cqpv            = temp_cqpv,
                   h_quest_order        = h_quest_order,
                   h_question           = question5,
                   h_cell               = h_cell,
                   h_value              = value5,
                   h_cell_type          = '',
                   h_aconstruction_type = 0,
                   h_confirmation_code  = '',
	           h_inquiry            = :h_db_inquiry,
                   h_question_industry  = question_industry);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF question6_exists = 'y'
    THEN
        IF value6 = 0
        THEN
            h_cell = 'Z';
        ELSE
            h_cell = 'V';
        ENDIF;
        ret_val  = CALLPROC msab_fp_ins_ext(
                   currency             = :currency,
                   temp_cqpv            = temp_cqpv,
                   h_quest_order        = h_quest_order,
                   h_question           = question6,
                   h_cell               = h_cell,
                   h_value              = value6,
                   h_cell_type          = '',
                   h_aconstruction_type = 0,
                   h_confirmation_code  = '',
	           h_inquiry            = :h_db_inquiry,
                   h_question_industry  = question_industry);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF question8_exists = 'y'
    THEN
        IF value8 = 0
        THEN
            h_cell = 'Z';
        ELSE
            h_cell = 'V';
        ENDIF;
        ret_val  = CALLPROC msab_fp_ins_ext(
                   currency             = :currency,
                   temp_cqpv            = temp_cqpv,
                   h_quest_order        = h_quest_order,
                   h_question           = question8,
                   h_cell               = h_cell,
                   h_value              = value8,
                   h_cell_type          = '',
                   h_aconstruction_type = 0,
                   h_confirmation_code  = '',
	           h_inquiry            = :h_db_inquiry,
                   h_question_industry  = question_industry);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    SET_FORMS FIELD '' (DISPLAYONLY(question2)  = 1,
    DISPLAYONLY(question4)  = 1,
    DISPLAYONLY(question5)  = 1,
    DISPLAYONLY(question6)  = 1,
    DISPLAYONLY(question8)  = 1,
    DISPLAYONLY(value2)     = 1,
    DISPLAYONLY(value4)     = 1,
    DISPLAYONLY(value5)     = 1,
    DISPLAYONLY(value6)     = 1,
    DISPLAYONLY(value8)     = 1,
    DISPLAYONLY(question1)  = 0,
    UNDERLINE(value1)       = 0,
    UNDERLINE(value2)       = 0,
    UNDERLINE(value4)       = 0,
    UNDERLINE(value5)       = 0,
    UNDERLINE(value6)       = 0,
    UNDERLINE(value8)       = 0,
    INVISIBLE(question2)    = 1,
    INVISIBLE(question4)    = 1,
    INVISIBLE(question5)    = 1,
    INVISIBLE(question6)    = 1,
    INVISIBLE(question8)    = 1,
    INVISIBLE(value1)       = 1,
    INVISIBLE(value2)       = 1,
    INVISIBLE(value4)       = 1,
    INVISIBLE(value5)       = 1,
    INVISIBLE(value6)       = 1,
    INVISIBLE(value8)       = 1,
    INVISIBLE(brief_text)   = 1);

    CLEAR FIELD ALL;

    h_ques_entered = 'n';
    h_questions_changed = 'y';
    RETURN 0;

}

'End', KEY FRSKEY14  =
{

    IF :h_ques_entered = 'n'
    THEN
        RETURN 0;
    ELSE
        reply = '';
        WHILE reply <> 'y' AND reply <> 'n'
        DO
            reply = PROMPT 'Do you really wish to exit without' +
                           ' updating this code? Type Y/N and' +
                           ' press <return>'
            WITH STYLE = POPUP;
            reply = LOWERCASE(reply);
        ENDWHILE;
        IF reply = 'y'
        THEN
            h_ques_entered = 'n';
            RETURN 0;
        ELSE
            RESUME FIELD question1;
        ENDIF;
    ENDIF;

}
