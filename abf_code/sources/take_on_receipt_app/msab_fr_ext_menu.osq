/*-s--------------------------------------------------------------------
 msab_fr_ext_menu - add extra questions
--------------------------------------------------------------------e-*/
INITIALIZE (

        contributor_inquiry      = INTEGER1 NOT NULL,
        contributor_reference    = CHAR(11) NOT NULL,
        h_dummy                  = CHAR(11) NOT NULL,
        h_idbr                   = CHAR(11) NOT NULL,
        prev_period              = INTEGER4 NOT NULL,
        period                   = INTEGER4 NOT NULL,
        contributor_industry     = INTEGER4 NOT NULL,
        currency                 = CHAR(1) NOT NULL,
        h_questions_changed      = CHAR(1) NOT NULL,
        temp_cqpv                = VARCHAR(20) NOT NULL,
        temp_del_aos             = VARCHAR(20) NOT NULL) =

DECLARE h_retries_allowed        = INTEGER1 NOT NULL,
        h_retries                = INTEGER1 NOT NULL,
        h_retry_or_not           = CHAR(5) NOT NULL,
        h_frpr_name              = VARCHAR(24) NOT NULL,
        ret_val                  = INTEGER1 NOT NULL,
        h_counter                = INTEGER4 NOT NULL,

        question                 = INTEGER4 NOT NULL,
        h_question               = INTEGER4 NOT NULL,
        h_avalue                 = INTEGER4 NOT NULL,
        h_evalue                 = INTEGER4 NOT NULL,
        h_count_dummies          = INTEGER4 NOT NULL
{
    h_retries_allowed = 3;
    h_frpr_name = 'msab_fr_ext_menu';

    SET_FORMS FIELD '' (MODE(tf) = 'READ');

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        tf =

        SELECT choices
        FROM   take_on_ext_menu;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing take_on_ext_menu'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No rows held on take_on_ext_menu'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

}

'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'HELP',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');

}

'Select', KEY FRSKEY11 =
{
    /*-s----------------------------------------------------------------
     Written In Entries
    ----------------------------------------------------------------e-*/

    IF UPPERCASE(:tf.choices) = 'WRITTEN IN ENTRIES'
    THEN
        ret_val = CALLFRAME msab_fr_extra_codes2 (
                  contributor_inquiry   = :contributor_inquiry,
                  contributor_reference = :contributor_reference,
                  h_dummy               = :h_dummy,
                  h_idbr                = :h_idbr,
                  prev_period           = :prev_period,
                  period                = :period,
                  contributor_industry  = :contributor_industry,
                  currency              = :currency,
                  h_questions_changed   = BYREF(h_questions_changed),
                  temp_cqpv             = temp_cqpv);

        IF ret_val > 1
        THEN
            RETURN ret_val;

        ELSEIF ret_val = 1
        THEN
            RESUME FIELD tf;
        ENDIF;

        RETURN 0;

    /*-s----------------------------------------------------------------
     Uncoded Entries
    ----------------------------------------------------------------e-*/

    ELSEIF UPPERCASE(:tf.choices) = 'UNCODED ENTRIES'
    THEN
        ret_val = CALLFRAME msab_fr_aos_codes (
                  contributor_inquiry  = :contributor_inquiry,
                  store_ques           = :question,
                  period               = :period,
                  contributor_industry = :contributor_industry,
                  currency              = :currency,
                  h_questions_changed  = BYREF(h_questions_changed),
                  temp_cqpv            = :temp_cqpv,
                  temp_del_aos         = :temp_del_aos);

        IF ret_val > 1
        THEN
            RETURN ret_val;

        ELSEIF ret_val = 1
        THEN
            RESUME FIELD tf;
        ENDIF;

        RETURN 0;

    /*-s----------------------------------------------------------------
     Update Uncoded Entries - if there are some
    ----------------------------------------------------------------e-*/

    ELSEIF UPPERCASE(:tf.choices) = 'UPDATE UNCODED ENTRIES'
    THEN

        h_retry_or_not      = 'RETRY';
        h_retries           = 0;

        WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
        DO

            h_retries = :h_retries + 1;

            SELECT COUNT(question) AS h_count_dummies
            FROM   :temp_cqpv
            WHERE  MOD(question,10000) IN (
                   9701,9711,9721,9731,9741,
                   9751,9761,9771,9781,9791)
	    AND    quest_order <> 1;

            ret_val = CALLPROC check_inq_ing (
                      h_num_row_ck      = 1,
                      h_commit          = 'Y',
                      h_rollback        = 'N',
                      h_retries         = :h_retries,
                      h_retries_allowed = :h_retries_allowed,
                      h_frpr_name       = :h_frpr_name);

            IF ret_val <> 7
            THEN
                h_retry_or_not = '';
            ENDIF;

        ENDWHILE;

        IF ret_val = 7
        THEN
            RETURN 7;

        ELSEIF ret_val = 9
        THEN
            MESSAGE 'System error in accessing ' + :temp_cqpv
            WITH STYLE = POPUP;
            RETURN 9;

        ENDIF;

        IF h_count_dummies = 0
        THEN
            MESSAGE 'There are no uncoded entries to update'
            WITH STYLE = POPUP;
        ELSE

            h_counter = 0;

            h_retry_or_not      = 'RETRY';
            h_retries           = 0;

            WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
            DO

                h_retries = :h_retries + 1;

                SELECT question AS h_question,
                       avalue AS h_avalue,
                       evalue AS h_evalue
                FROM   :temp_cqpv
                WHERE  MOD(question,10000) IN (
                       9701,9711,9721,9731,9741,
                       9751,9761,9771,9781,9791)
	        AND    quest_order <> 1

                {
                    h_counter = :h_counter + 1;

                    ret_val = CALLFRAME msab_fr_up_aos (
                              contributor_inquiry   = contributor_inquiry,
                              store_ques            = :question,
                              question              = :h_question,
                              contributor_reference = contributor_reference,
                              h_dummy               = :h_dummy,
                              h_idbr                = :h_idbr,
                              h_counter             = :h_counter,
                              avalue1               = :h_avalue,
                              evalue1               = :h_evalue,
                              period                = period,
                              prev_period           = prev_period,
                              contributor_industry  = contributor_industry,
                              currency              = currency,
                              h_questions_changed   = BYREF(h_questions_changed),
                              temp_cqpv             = temp_cqpv,
                              temp_del_aos          = temp_del_aos);

                    IF ret_val > 1
                    THEN
                        RETURN ret_val;

                    ELSEIF ret_val = 1
                    THEN
                        RESUME FIELD tf;
                    ENDIF;

                };

                ret_val = CALLPROC check_inq_ing (
                          h_num_row_ck      = 1,
                          h_commit          = 'Y',
                          h_rollback        = 'N',
                          h_retries         = :h_retries,
                          h_retries_allowed = :h_retries_allowed,
                          h_frpr_name       = :h_frpr_name);
        
                IF ret_val <> 7
                THEN
                    h_retry_or_not = '';
                ENDIF;
        
            ENDWHILE;
        
            IF ret_val = 7
            THEN
                RETURN 7;
        
            ELSEIF ret_val = 9
            THEN
                MESSAGE 'System error in accessing ' + :temp_cqpv
                WITH STYLE = POPUP;
                RETURN 9;
        
            ENDIF;

        ENDIF;

        RETURN 0;

    /*-s----------------------------------------------------------------
     Delete Uncoded Entries
    ----------------------------------------------------------------e-*/

    ELSEIF UPPERCASE(:tf.choices) = 'DELETE UNCODED ENTRIES'
    THEN
        ret_val = CALLFRAME msab_fr_del_uncoded (
                  h_questions_changed = BYREF(h_questions_changed),
                  temp_cqpv           = :temp_cqpv,
                  temp_del_aos        = :temp_del_aos);

        IF ret_val > 1
        THEN
            RETURN ret_val;

        ELSEIF ret_val = 1
        THEN
            RESUME FIELD tf;
        ENDIF;
        
        RETURN 0;

    ENDIF;

}

'End', KEY FRSKEY14  =
{
    RETURN 0;
}
