/*****************************************************************************
*****************************************************************************/
PROCEDURE export_allocation_info () =

DECLARE
	h_return    = INTEGER1      NOT NULL,
        h_period    = CHAR(6)       NOT NULL,
        h_count     = INTEGER4      NOT NULL,
	h_filename  = VARCHAR(60)   NOT NULL,
	h_tablename = VARCHAR(60)   NOT NULL

BEGIN

h_period = PROMPT 'Period to export? ' WITH STYLE = POPUP;

/*-------------------------------------------------------------------------
                        EXPORT FNA 
-------------------------------------------------------------------------*/

h_filename  = '/admin/scratch/allocation_export_'+ :h_period + '.csv';
h_tablename = 'tt_allocation_info_'+ :h_period;
h_count = 0;

MESSAGE'Checking...';

SELECT COUNT(contributor_reference) AS h_count
FROM   cqpv
WHERE  period = :h_period;
commit;

IF h_count = 0
THEN
  MESSAGE 'ERROR: This period is not present on cqpv.'
  WITH STYLE = POPUP;
  EXIT;
ENDIF;

MESSAGE 'EXPORTING: Counts of forms and questions by SIC for period ' 
      + VARCHAR(:h_period) + ' to file '
      + VARCHAR(:h_filename) +' .'
WITH STYLE = POPUP;

MESSAGE 'Selecting...';

CREATE TABLE :h_tablename
AS
SELECT contributor_industry,
       COUNT( DISTINCT contributor_reference ) AS tot_ref,
       COUNT( question ) as tot_qst,
       '       ' as user_id  
FROM cqpv 
WHERE period = :h_period
GROUP BY contributor_industry; 

commit;

MODIFY :h_tablename TO btree ON contributor_industry;
commit;

UPDATE :h_tablename a
FROM industry_staff b
SET user_id = b.user_id
WHERE a.contributor_industry = b.industry
  AND b.print_order = 1;

commit; 

MESSAGE 'Exporting...';

COPY TABLE :h_tablename ( contributor_industry = c0comma,
                          tot_ref               = c0comma,
                          tot_qst               = c0comma,
                          user_id               = c0nl)
INTO :h_filename;
commit;

MESSAGE 'Truncating and dropping...';

MODIFY :h_tablename TO TRUNCATED;
commit;

DROP TABLE :h_tablename;
commit;

/*-------------------------------------------------------------------------
                        NOTIFY SUCCESS AND END
-------------------------------------------------------------------------*/

MESSAGE 'Extracts completed successfully and temp tables removed.'
WITH STYLE = POPUP;

EXIT;

END

