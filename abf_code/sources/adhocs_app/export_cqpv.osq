/*****************************************************************************
  Quick utility to export a set period of data from cqpv to file
  DF - May 2011
*****************************************************************************/
PROCEDURE export_cqpv () =

DECLARE
	h_return    = INTEGER1      NOT NULL,
        h_period    = CHAR(6)       NOT NULL,
        h_count     = INTEGER4      NOT NULL,
	h_filename  = VARCHAR(38)   NOT NULL,
	h_tablename = VARCHAR(22)   NOT NULL

BEGIN

h_period = PROMPT 'Period to export? ' WITH STYLE = POPUP;

MESSAGE'Checking...';

SELECT COUNT(contributor_reference) AS h_count
FROM   cqpv
WHERE  period = :h_period;
commit;

IF h_count = 0
THEN
  MESSAGE 'ERROR: No records found to export.'
  WITH STYLE = POPUP;
  EXIT;
ENDIF;

h_filename  = '/admin/scratch/cqpv_export_'+ :h_period + '.csv';
h_tablename = 'tt_cqpv_export_'+ :h_period;


MESSAGE 'EXPORTING: ' 
      + VARCHAR(:h_count) + ' records for ' 
      + VARCHAR(:h_period) + ' to '
      + VARCHAR(:h_filename) +' .'
WITH STYLE = POPUP;

MESSAGE 'Selecting...';

CREATE TABLE :h_tablename
AS
SELECT *
FROM cqpv
WHERE period = :h_period;
commit;

MESSAGE 'Exporting...';

COPY TABLE :h_tablename ( contributor_reference = c0comma,
                          quest_order           = c0comma,
                          question              = c0comma,
                          period                = c0comma,
                          contributor_inquiry   = c0comma,
                          contributor_industry  = c0comma,
                          question_industry     = c0comma,
                          acell                 = c0comma,
                          avalue                = c0comma,
                          acell_type            = c0comma,
                          aconstruction_type    = c0comma,
                          evalue                = c0comma,
                          fcell                 = c0comma,
                          fvalue                = c0comma,
                          fcell_type            = c0comma,
                          fconstruction_type    = c0comma,
                          confirmation_code     = c0comma,
                          confirmation_date     = c0comma,
                          atypical              = c0nl)
INTO :h_filename;
commit;

MESSAGE 'Truncating and dropping...';

MODIFY :h_tablename TO TRUNCATED;
commit;

DROP TABLE :h_tablename;
commit;

MESSAGE 'Extract completed successfully and temp tables removed.'
WITH STYLE = POPUP;

EXIT;

END
