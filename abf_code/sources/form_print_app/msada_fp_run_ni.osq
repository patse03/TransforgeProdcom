/*-s--------------------------------------------------------------------
All forms together for Northern Ireland
except for special category forms (O Q V W X Y Z)
--------------------------------------------------------------------e-*/

PROCEDURE msada_fp_run_ni () =

DECLARE ret_val       = INTEGER4 NOT NULL,
        h_frpr_name   = VARCHAR(24) NOT NULL,
        print_name    = VARCHAR(24) NOT NULL,
        report_name   = VARCHAR(24) NOT NULL,
        first_table   = VARCHAR(24) NOT NULL,
        form_table    = VARCHAR(24) NOT NULL,

{
    h_frpr_name = 'msada_fp_run_ni';
    report_name = 'msada_rw_form.rw';
     
    /*-s----------------------------------------------------------------
    See how many NI contributors there are
    ----------------------------------------------------------------e-*/

    ret_val = CALLPROC batch_fp_drop_table (h_table = 'form_control_ni');
    IF ret_val <> 0 
    THEN
        RETURN ret_val;
    ENDIF;

    IF :g_form_type = 'F'
    THEN
        CREATE TABLE form_control_ni
        AS SELECT    COUNT(*) AS count_ref,
                     INT4(0) AS contributor_industry
        FROM         contributor_period
        WHERE        period = :g_period 
        AND          output_category IN ('F','G','J','M','N','P','H','K','V')
	AND          region = 'YY'
    ELSE
        CREATE TABLE form_control_ni
        AS SELECT    COUNT(a.contributor_reference) AS count_ref,
                     INT4(0) AS contributor_industry
        FROM         contributor_period a,
                     idbr_sec_reminders b
        WHERE        a.period = :g_period 
        AND          a.output_category IN ('F','G','J','M','N','P','H','K','V')
        AND          a.period = b.period
        AND          a.contributor_reference = b.contributor_reference
	AND          region = 'YY'
    ENDIF;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error counting from contributor_period',
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*-s----------------------------------------------------------------
     Delete existing rows from the print table
    ----------------------------------------------------------------e-*/

    DELETE FROM :g_print_table
    WHERE       output_category = :g_output_category;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error deleting from ' + :g_print_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*-s------------------------------------------------------------
    Create the temporary barcode table
    ------------------------------------------------------------e-*/

    MESSAGE 'NI Barcodes . . .';

    ret_val = CALLPROC msada_fp_calc_barcode ();

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    /*-s------------------------------------------------------------
    Create the first table
    ------------------------------------------------------------e-*/

    MESSAGE 'NI First Table . . .';

    ret_val = CALLPROC msada_fp_first_table ();

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    /*-s------------------------------------------------------------
    Create the form table
    ------------------------------------------------------------e-*/

    MESSAGE 'NI Form Table . . .';

    ret_val = CALLPROC msada_fp_form_table ();
  
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    /*-s------------------------------------------------------------
    Declarations for report writer
    ------------------------------------------------------------e-*/
/******* TAKEN OUT FOR SPC TO TAKE OVER FORMS PRINTING *********
    MESSAGE 'NI Report Writer . . .';

    print_name = 'form_' +
                 VARCHAR(:g_period) + '_' +
                 :g_output_category;

    first_table = 'first_' +
                  VARCHAR(:g_period) + '_' +
                  :g_output_category;

    form_table  = 'form_' +
                  VARCHAR(:g_period) + '_' +
                  :g_output_category;

    ret_val = CALLPROC msa_cp_callsys (
            'report ' +
             :g_database + ' ' +
             '''(period = ' + VARCHAR(:g_period) +
             ', first_out = "' + :first_table +
             '", form_out = "' + :form_table +
             '", country = "NI"' +
             ', inquiry = ' + VARCHAR(:g_inquiry) +
             ', h_count = 0' +
             ', form_type = "' + :g_form_type +
             '")''' +
             ' -f$FORMS/' + :print_name +
             ' -i$REPORTS/' + :report_name +
             '>> $FORMS/report.output');

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error calling ' + :report_name +
                    ' for Category ' + :g_output_category,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    INSERT INTO :g_print_table
    VALUES (    :g_output_category,
                :print_name,
                1);

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error inserting into ' + :g_print_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;
**********/
    RETURN 0;
}
