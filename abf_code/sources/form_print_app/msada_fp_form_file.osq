/*---------------------------------------------------------------------
Used to create the output file required by SPC for forms printing

The first_table information is the question data for the form. 

This procedure is called by msada_fp_start when the dummy output
category 'CF' is supplied as one of the initial command parameters.
---------------------------------------------------------------------*/

PROCEDURE msada_fp_form_file ( ) =


DECLARE	ret_val                 = INTEGER4 NOT NULL,
	h_table                 = VARCHAR(25) NOT NULL,
 	h_run_period            = CHAR(6) NOT NULL,
 	h_outfile               = VARCHAR(48) NOT NULL,
	h_frpr_name             = VARCHAR(25) NOT NULL

{
    h_frpr_name = 'msada_fp_form_file';
    h_table = 'finalsel_questions';
    h_run_period = VARCHAR(:g_period + 12);

    IF :g_form_type = 'F'
    THEN 
        h_outfile = '/prodcom/live5/files/forms/finalselquestions014_';
    ELSE  
        h_outfile = '/prodcom/live5/files/forms/rem2detsquestions014_';
    ENDIF;

    ret_val = CALLPROC batch_fp_drop_table(h_table = :h_table);
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    CREATE TABLE finalsel_questions as
    SELECT
	:h_run_period as period,
        char(a.col_type) as col_type,
        a.contributor_reference,
        char(a.contributor_industry) as contributor_industry,
        a.q_n_l_code,
        char(a.q_n_order) as q_n_order,
        a.q_desc_code,
        a.q_count,
        a.q_line,
        a.need_count,
        a.text1,
        a.text2,
        a.text3,
        a.text4,
        a.text5,
        a.text6,
        a.text7,
        a.text8,
        a.text9,
        a.text10,
        a.unit1,
        a.cn_code1,
        a.cn_code2,
        a.cn_code3,
        a.cn_code4,
        a.cn_code5,
        a.cn_code6,
        a.cn_code7,
        a.cn_code8,
        a.cn_code9,
        b.phone_contact,
        b.phone_area_code,
        b.phone,
        b.phone_extension,
        b.fax_area_code,
        b.fax,
        b.email

    FROM  form_table a,
          contributor b
    WHERE a.contributor_reference = b.contributor_reference;
    
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating ' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  

/*-------------------------------------------------------------------
Update the finalsel_questions table to hold 5 digit sic where there
are 4 digit sic held on prodcom.
-------------------------------------------------------------------*/
    
    UPDATE  :h_table
    SET     contributor_industry = '0' + contributor_industry
    WHERE   length(contributor_industry) = 4;
    COMMIT;
    

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error adjusting 4 digit sic on ' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  

/*-------------------------------------------------------------------
Update the finalsel_questions table to hold 8 digit questions where
there are 4 digit sic held on prodcom.
-------------------------------------------------------------------*/

    UPDATE  :h_table
    SET     q_n_order = '0' + q_n_order
    WHERE   length(q_n_order) = 8;
    COMMIT;
    

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error adjusting 8 digit question on ' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  

    COPY  :h_table (
	period =c0$,
        col_type = c0$,
        contributor_reference = c0$,
        contributor_industry = c0$,
        q_n_l_code = c0$,
        q_n_order = c0$,
        q_desc_code = c0$,
        q_count = c0$,
        q_line = c0$,
        need_count = c0$,
        text1 = c0$,
        text2 = c0$,
        text3 = c0$,
        text4 = c0$,
        text5 = c0$,
        text6 = c0$,
        text7 = c0$,
        text8 = c0$,
        text9 = c0$,
        text10 = c0$,
        unit1 = c0$,
        cn_code1 = c0$,
        cn_code2 = c0$,
        cn_code3 = c0$,
        cn_code4 = c0$,
        cn_code5 = c0$,
        cn_code6 = c0$,
        cn_code7 = c0$,
        cn_code8 = c0$,
        cn_code9 = c0$,
        phone_contact = c0$,
        phone_area_code = c0$,
        phone = c0$,
        phone_extension = c0$,
        fax_area_code = c0$,
        fax = c0$,
        email = c0nl)

    INTO :h_outfile + :h_run_period;    
    COMMIT;


    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating form data file ',
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  

}
