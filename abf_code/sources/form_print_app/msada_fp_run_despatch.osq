PROCEDURE msada_fp_run_despatch () =

DECLARE ret_val            = INTEGER4 NOT NULL,
        report_name        = VARCHAR(35) NOT NULL,
        industry           = INTEGER4 NOT NULL,
        h_frpr_name        = VARCHAR(24) NOT NULL,
        print_name         = VARCHAR(35) NOT NULL

{
    h_frpr_name = 'msada_fp_run_despatch';
    g_analysts_table = 'despatch_data_analysts';

    /*------------------------------------------------------------------
    Create table to hold the data analysts
    ------------------------------------------------------------------*/

    ret_val = CALLPROC batch_fp_drop_table (
	      h_table = :g_analysts_table);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    ret_val = CALLPROC batch_fp_get_analysts (
              h_contributor_industry = 'ALL',
              h_table                = :g_analysts_table);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    /*-s----------------------------------------------------------------
    Produce separate Despatch List for each Industry
    Commented out Nov 1998 as paper despatch lists no longer needed
    by DCU only NI needed
    ----------------------------------------------------------------e-*/

    SELECT industry
    FROM   industry
    WHERE  inquiry = :g_inquiry
    {
	MESSAGE 'Processing Industry ' + VARCHAR(:industry) + ' . . .';

        /*-s------------------------------------------------------------
        report_name = 'msada_rw_desp_list.rw';

        print_name = 'despatch_' + VARCHAR(:g_period) +
                     '_' + VARCHAR(:industry);

        ret_val = CALLPROC msa_cp_callsys (
                  'report ' +
                  :g_database + ' ' +
                  '''(period = ' + VARCHAR(:g_period) +
                  ', data_analysts = "' + :g_analysts_table + '"' +
                  ', industry = ' + VARCHAR(:industry) +
                  ')''' +
                  ' -f$PRINTOUT/' + :print_name +
                  ' -i$REPORTS/' + :report_name +
                  '>> $FORMS/report.output');

        IF ret_val <> 0
        THEN
            INSERT INTO error_log
            VALUES(     'now',
                        'Error calling ' + :report_name + ' for' +
                        ' Industry ' + VARCHAR(:industry),
                        :h_frpr_name,
                        :ret_val,
                        :g_user_id);
            COMMIT;
            RETURN ret_val;
        ENDIF;
    ----------------------------------------------------------------e-*/

        /*-s------------------------------------------------------------
        Produce a NI despatch list for the industry
        ------------------------------------------------------------e-*/

        report_name = 'msada_rw_desp_listni.rw';

        print_name = 'despatch_' + VARCHAR(:g_period) +
                     '_' + VARCHAR(:industry) + '_ni';

        ret_val = CALLPROC msa_cp_callsys (
                  'report ' +
                  :g_database + ' ' +
                  '''(period = ' + VARCHAR(:g_period) +
                  ', data_analysts = "' + :g_analysts_table + '"' +
                  ', industry = ' + VARCHAR(:industry) +
                  ')'''  +
                  ' -f$PRINTOUT/' + :print_name +
                  ' -i$REPORTS/' + :report_name +
                  '>> $FORMS/report.output');

        IF ret_val <> 0
        THEN
            INSERT INTO error_log
            VALUES(     'now',
                        'Error calling ' + :report_name +
                        ' for Industry ' + VARCHAR(:industry),
                        :h_frpr_name,
                        :ret_val,
                        :g_user_id);
            COMMIT;
            RETURN ret_val;
        ENDIF;
    };

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error selecting from industry',
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    RETURN 0;
}
