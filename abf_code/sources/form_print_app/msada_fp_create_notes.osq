/*----------------------------------------------------------------------
This creates the notes for back page of form
----------------------------------------------------------------------*/

PROCEDURE msada_fp_create_notes (

        h_table                = VARCHAR(24) NOT NULL) =

DECLARE h_frpr_name            = VARCHAR(24) NOT NULL,
        ret_val                = INTEGER1 NOT NULL,
        h_text                 = VARCHAR(62) NOT NULL,
        h_temp_table           = VARCHAR(24) NOT NULL,
        h_note_code            = INTEGER2 NOT NULL,
        h_text1                = VARCHAR(62) NOT NULL,
        h_text2                = VARCHAR(62) NOT NULL,
        h_text3                = VARCHAR(62) NOT NULL,
        h_text4                = VARCHAR(62) NOT NULL,
        h_text5                = VARCHAR(62) NOT NULL,
        h_text6                = VARCHAR(62) NOT NULL,
        h_text7                = VARCHAR(62) NOT NULL,
        h_text8                = VARCHAR(62) NOT NULL,
        h_text9                = VARCHAR(62) NOT NULL,
        h_text10               = VARCHAR(62) NOT NULL,
        h_text11               = VARCHAR(62) NOT NULL,
        h_text12               = VARCHAR(62) NOT NULL,
        h_counter              = INTEGER1 NOT NULL,
        h_param_list           = CHAR(10) NOT NULL,
        h_varchar_variable     = CHAR(10) NOT NULL,
        h_param1               = VARCHAR(10) NOT NULL,
        h_integer_variable     = INTEGER1 NOT NULL,
        line_count             = INTEGER2 NOT NULL

{
    h_frpr_name = 'msada_fp_create_notes';
    MESSAGE 'Creating Notes . . .';

    /*------------------------------------------------------------------
    See if this is the EntryPoint into the application
    Parameters = AnnualPeriod
    ------------------------------------------------------------------*/

    h_param_list = CALLPROC CommandLineParameters ();

    h_varchar_variable = SQUEEZE(h_param_list);
    h_integer_variable = LOCATE(h_varchar_variable, ' ');
    h_param1           = LEFT(h_varchar_variable, h_integer_variable-1);

    IF g_annual_period = 0
    THEN
        SELECT MAX(period) AS g_annual_period
        FROM   inquiry_period
        WHERE  inquiry = 14;

        ret_val = CALLPROC batch_check_inq_ing (
                  h_num_row_ck = 1,
                  h_commit     = 'Y',
                  h_rollback   = 'N',
                  h_frpr_name  = :h_frpr_name);

        IF ret_val = 9
        THEN
            INSERT INTO error_log
            VALUES(     'now',
                        'System Error on Inquiry_period',
                        :h_frpr_name,
                        :ret_val,
                        :g_user_id);
            COMMIT;
            RETURN ret_val;
        ENDIF;

	IF INT4(h_param1) <> :g_annual_period + 100
	AND INT4(h_param1) <> :g_annual_period
	AND INT4(h_param1) <> :g_annual_period - 100
	AND INT4(h_param1) <> :g_annual_period - 200
        THEN
            INSERT INTO error_log
            VALUES(     'now',
                        :h_param1 + ' is not a valid Annual period ',
                        :h_frpr_name,
                        :ret_val,
                        :g_user_id);
            COMMIT;
            RETURN 9;
        ENDIF;
	g_annual_period = INT4(:h_param1);
    ENDIF;

    IF :h_table = ''
    THEN
        h_table = 'form_note_text';
    ENDIF;

    h_temp_table = 'temp_form_note_text';

    ret_val = CALLPROC batch_fp_drop_table (
              h_table = :h_temp_table);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    CREATE TABLE :h_temp_table
    AS SELECT    DISTINCT(note_code),
                 :g_annual_period AS period,
		 INT1(1) as line_no,
		 INT2(0) as line_count,
                 '                                                              ' AS text1,
                 '                                                              ' AS text2,
                 '                                                              ' AS text3,
                 '                                                              ' AS text4,
                 '                                                              ' AS text5,
                 '                                                              ' AS text6,
                 '                                                              ' AS text7,
                 '                                                              ' AS text8,
                 '                                                              ' AS text9,
                 '                                                              ' AS text10,
                 '                                                              ' AS text11,
                 '                                                              ' AS text12
    FROM         note_text_line
    WHERE        period = :g_annual_period;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error creating ' + :h_temp_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*------------------------------------------------------------------
     Modify
    ------------------------------------------------------------------*/

    MODIFY :h_temp_table TO BTREE
    UNIQUE ON note_code;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error modifying ' + :h_temp_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*------------------------------------------------------------------
     Update with text
    ------------------------------------------------------------------*/

    SELECT note_code AS h_note_code
    FROM   :h_temp_table
    {
        line_count = 1;
        h_counter = 1;
        h_text1 = '';
        h_text2 = '';
        h_text3 = '';
        h_text4 = '';
        h_text5 = '';
        h_text6 = '';
        h_text7 = '';
        h_text8 = '';
        h_text9 = '';
        h_text10 = '';
        h_text11 = '';
        h_text12 = '';

        SELECT note_text as h_text
        FROM   note_text_line
	WHERE  note_code = :h_note_code
        AND    period = :g_annual_period
        {
            IF :h_counter = 1
            THEN
                h_text1 = :h_text;
            ELSEIF :h_counter = 2
            THEN
                h_text2 = :h_text;
            ELSEIF :h_counter = 3
            THEN
                h_text3 = :h_text;
            ELSEIF :h_counter = 4
            THEN
                h_text4 = :h_text;
            ELSEIF :h_counter = 5
            THEN
                h_text5 = :h_text;
            ELSEIF :h_counter = 6
            THEN
                h_text6 = :h_text;
            ELSEIF :h_counter = 7
            THEN
                h_text7 = :h_text;
            ELSEIF :h_counter = 8
            THEN
                h_text8 = :h_text;
            ELSEIF :h_counter = 9
            THEN
                h_text9 = :h_text;
            ELSEIF :h_counter = 10
            THEN
                h_text10 = :h_text;
            ELSEIF :h_counter = 11
            THEN
                h_text11 = :h_text;
            ELSEIF :h_counter = 12
            THEN
                h_text12 = :h_text;
            ENDIF;

            line_count = :h_counter;
            h_counter = :h_counter + 1;

        };

        UPDATE :h_temp_table
        SET    line_count = :line_count,
	       text1 = :h_text1,
               text2 = :h_text2,
               text3 = :h_text3,
               text4 = :h_text4,
               text5 = :h_text5,
               text6 = :h_text6,
               text7 = :h_text7,
               text8 = :h_text8,
               text9 = :h_text9,
               text10 = :h_text10,
               text11 = :h_text11,
               text12 = :h_text12
        WHERE  note_code = :h_note_code;

    };

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error in select loop updating ' + :h_temp_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*------------------------------------------------------------------
      Delete from and add to form_note_text
    ------------------------------------------------------------------*/

    DELETE FROM :h_table
    WHERE       period = :g_annual_period;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error deleting from ' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    INSERT INTO :h_table
    SELECT      *
    FROM        :h_temp_table;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES(     'now',
                    'Error inserting into ' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    ret_val = CALLPROC batch_fp_drop_table (
              h_table = :h_temp_table);

    RETURN 0;
}
