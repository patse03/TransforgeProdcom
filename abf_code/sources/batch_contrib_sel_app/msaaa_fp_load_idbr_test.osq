/*-S--------------------------------------------------------------------
Procedure msaaa_fp_load_idbr_test

This procedure is used to test the finalsel load.
It then updates the table
with the data supplied on conventional flat files by Registers.
--------------------------------------------------------------------e-*/

PROCEDURE msaaa_fp_load_idbr_test () =

DECLARE ret_val       = INTEGER4 NOT NULL,
        h_table       = VARCHAR(24) NOT NULL,
	h_period      = INTEGER4 NOT NULL,
        h_idbr_file   = VARCHAR(100) NOT NULL,
        h_frpr_name   = VARCHAR(24) NOT NULL

{
    h_frpr_name = 'msaaa_fp_load_idbr_data';
    h_period = :g_period/100;

    IF :g_inquiry = 14
    THEN
        h_idbr_file = :g_path_name1 + '/finalsel0'+
                       VARCHAR(:g_inquiry) + '_' + VARCHAR(:h_period) + '12';
    ELSE
        h_idbr_file = :g_path_name1 + '/finalsel0' +
                       VARCHAR(:g_inquiry) + '_' + VARCHAR(:g_period);
    ENDIF;

    /*-s----------------------------------------------------------------
     Create the selection table and copy IDBR data into it
    ----------------------------------------------------------------e-*/

    MESSAGE 'Loading ' + VARCHAR(:g_reg_table) + ' . . .';

    ret_val = CALLPROC batch_fp_drop_table(h_table = :g_reg_table);
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    CREATE TABLE :g_reg_table (
                 ruref          CHAR (11) NOT NULL,
                 checkletter    CHAR (1) NOT NULL,
                 frosic92       CHAR (5) NOT NULL,
                 rusic92        CHAR (5) NOT NULL,
                 froempees      INTEGER4 NOT NULL,
                 employees      INTEGER4 NOT NULL,
                 froempment     INTEGER4 NOT NULL,
                 employment     INTEGER4 NOT NULL,
                 frotover       INTEGER4 NOT NULL,
                 turnover       INTEGER4 NOT NULL,
                 entref         CHAR (10) NOT NULL,
                 wowentref      CHAR (10) NOT NULL,
                 vatref         VARCHAR(10) NOT NULL,
                 checkdigit     CHAR (2) NOT NULL,
                 payeref        VARCHAR(13) NOT NULL,
                 crn            VARCHAR(8) NOT NULL,
                 live_lu        INTEGER2 NOT NULL,
                 live_vat       INTEGER2 NOT NULL,
                 live_paye      INTEGER2 NOT NULL,
                 legalstatus    CHAR (1) NOT NULL,
                 entrepmkr      CHAR (1) NOT NULL,
                 region         CHAR (2) NOT NULL,
                 birthdate      DATE NOT NULL,
                 entname1       CHAR (35) NOT NULL,
                 entname2       CHAR (35) NOT NULL,
                 entname3       CHAR (35) NOT NULL,
                 runame1        CHAR (35) NOT NULL,
                 runame2        CHAR (35) NOT NULL,
                 runame3        CHAR (35) NOT NULL,
                 ruaddr1        CHAR (30) NOT NULL,
                 ruaddr2        CHAR (30) NOT NULL,
                 ruaddr3        CHAR (30) NOT NULL,
                 ruaddr4        CHAR (30) NOT NULL,
                 ruaddr5        CHAR (30) NOT NULL,
                 rupostcode     VARCHAR(8) NOT NULL,
                 tradstyle1     CHAR (35) NOT NULL,
                 tradstyle2     CHAR (35) NOT NULL,
                 tradstyle3     CHAR (35) NOT NULL,
                 contact        CHAR (30) NOT NULL,
                 telephone      CHAR (20) NOT NULL,
                 fax            CHAR (20) NOT NULL,
                 seltype        CHAR (1) NOT NULL,
                 inclexcl       CHAR (1) NOT NULL,
                 cell_no        INTEGER2 NOT NULL,
                 formtype       CHAR (4) NOT NULL,
                 cso_tel        CHAR (7) NOT NULL,
		 currency       CHAR (1) NOT NULL);

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Unable to create ' + :g_reg_table,
                    :h_frpr_name,
                    9,
                    :g_user_id);
        COMMIT;
        RETURN 9;
    ENDIF;

    COPY TABLE :g_reg_table (
        ruref           =   c0colon,
        checkletter     =   c0colon,
        frosic92        =   c0colon,
        rusic92         =   c0colon,
        froempees       =   c0colon,
        employees       =   c0colon,
        froempment      =   c0colon,
        employment      =   c0colon,
        frotover        =   c0colon,
        turnover        =   c0colon,
        entref          =   c0colon,
        wowentref       =   c0colon,
        vatref          =   c0colon,
        checkdigit      =   c0colon,
        payeref         =   c0colon,
        crn             =   c0colon,
        live_lu         =   c0colon,
        live_vat        =   c0colon,
        live_paye       =   c0colon,
        legalstatus     =   c0colon,
        entrepmkr       =   c0colon,
        region          =   c0colon,
        birthdate       =   c0colon,
        entname1        =   c0colon,
        entname2        =   c0colon,
        entname3        =   c0colon,
        runame1         =   c0colon,
        runame2         =   c0colon,
        runame3         =   c0colon,
        ruaddr1         =   c0colon,
        ruaddr2         =   c0colon,
        ruaddr3         =   c0colon,
        ruaddr4         =   c0colon,
        ruaddr5         =   c0colon,
        rupostcode      =   c0colon,
        tradstyle1      =   c0colon,
        tradstyle2      =   c0colon,
        tradstyle3      =   c0colon,
        contact         =   c0colon,
        telephone       =   c0colon,
        fax             =   c0colon,
        seltype         =   c0colon,
        inclexcl        =   c0colon,
        cell_no         =   c0colon,
        formtype        =   c0colon,
        cso_tel         =   c0colon,
        currency        =   c0nl)

    FROM :h_idbr_file;

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Unable to copy from registers file',
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN 9;
    ENDIF;

    /*-s----------------------------------------------------------------
     Insert register selection file into finalsel_period table
    ----------------------------------------------------------------e-*/

    INSERT INTO  finalsel_period (
                 ruref,
		 period,
		 inquiry,
                 checkletter,
                 frosic92,
                 rusic92,
                 froempees,
                 employees,
                 froempment,
                 employment,
                 frotover,
                 turnover,
                 entref,
                 wowentref,
                 vatref,
                 checkdigit,
                 payeref,
                 crn,
                 live_lu,
                 live_vat,
                 live_paye,
                 legalstatus,
                 entrepmkr,
                 region,
                 birthdate,
                 entname1,
                 entname2,
                 entname3,
                 runame1,
                 runame2,
                 runame3,
                 ruaddr1,
                 ruaddr2,
                 ruaddr3,
                 ruaddr4,
                 ruaddr5,
                 rupostcode,
                 tradstyle1,
                 tradstyle2,
                 tradstyle3,
                 contact,
                 telephone,
                 fax,
                 seltype,
                 inclexcl,
                 cell_no,
                 formtype,
                 cso_tel,
                 currency)
    SELECT       ruref,
                 :g_period,
                 :g_inquiry,
                 checkletter,
                 frosic92,
                 rusic92,
                 froempees,
                 employees,
                 froempment,
                 employment,
                 frotover,
                 turnover,
                 entref,
                 wowentref,
                 vatref,
                 checkdigit,
                 payeref,
                 crn,
                 live_lu,
                 live_vat,
                 live_paye,
                 legalstatus,
                 entrepmkr,
                 region,
                 birthdate,
                 entname1,
                 entname2,
                 entname3,
                 runame1,
                 runame2,
                 runame3,
                 ruaddr1,
                 ruaddr2,
                 ruaddr3,
                 ruaddr4,
                 ruaddr5,
                 rupostcode,
                 tradstyle1,
                 tradstyle2,
                 tradstyle3,
                 contact,
                 telephone,
                 fax,
                 seltype,
                 inclexcl,
                 cell_no,
                 formtype,
                 cso_tel,
                 currency
    FROM         :g_reg_table;
                 
    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error inserting into finalsel_period',
                    :h_frpr_name,
                    9,
                    :g_user_id);
        COMMIT;
        RETURN 9;
    ENDIF;


    RETURN 0;
}
