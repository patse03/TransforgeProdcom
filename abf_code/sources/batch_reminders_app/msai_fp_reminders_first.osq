/*-----------------------------------------------------------------------
Used to create the output file required by SPC for forms printing

The first_table information is the contributor data for the front page

This procedure is called by msada_fp_start when the dummy output
category 'CF' is supplied as one of the initial command parameters.
---------------------------------------------------------------------*/

PROCEDURE msai_fp_reminders_first(
i_analyst_table	= 	VARCHAR(50) NOT NULL, 
i_country	= 	VARCHAR(50) NOT NULL 
)=

DECLARE	ret_val                 = INTEGER4 NOT NULL,
	h_table                 = VARCHAR(25) NOT NULL,
 	h_run_period            = CHAR(6) NOT NULL,
 	h_outfile               = VARCHAR(45) NOT NULL,
	h_first_reminders	= VARCHAR(45) NOT NULL,
	h_frpr_name             = VARCHAR(25) NOT NULL

{
    h_frpr_name = 'msai_fp_reminders_first';
    h_table = 'first_table_spc';
    h_run_period = VARCHAR(:g_period + 12);
    h_outfile = '/prodcom/live5/files/forms/rem1dets014_';
    h_first_reminders = '/prodcom/live5/files/forms/firstrem014_';

DELETE FROM :h_table;
commit;

INSERT INTO :h_table
  SELECT   a.contributor_reference,
           a.period,
           b.name1 AS ao_name1,
           b.ext1 AS ao_ext1,
           c.addressee      AS designator,
           c.add_name1      AS addrline1,
           c.add_name2      AS addrline2,
           c.add_name3      AS addrline3,
           c.add_tradstyle1 AS addrline4,
           c.add_tradstyle2 AS addrline5,
           c.add_tradstyle3 AS addrline6,
           c.add_line1      AS addrline7,
           c.add_line2      AS addrline8,
           c.add_line3      AS addrline9,
           c.add_line4      AS addrline10,
           c.add_line5      AS addrline11,
           c.add_postcode   AS addrline12,
           d.inquiry,
           d.contributor_industry,
           d.output_category,
	   d.legal_status
  FROM     idbr_reminders a,
           :i_analyst_table b,
           contributor c,
           contributor_period d,
	   passwords e
  WHERE    a.contributor_reference = c.contributor_reference
  AND      a.contributor_reference = b.contributor_reference
  AND      c.contributor_reference = d.contributor_reference
  AND      d.contributor_industry = b.industry
  AND      a.period = b.period
  AND      a.period = d.period
  AND      a.country = :i_country
  AND      d.output_category <> 'Q'
  AND      UPPERCASE(b.name1) = e.user_name ;
/*
  ORDER BY d.output_category,
           d.contributor_industry,
           a.contributor_reference;
*/
commit;

/*-----------------------------------------------------------------    
Insert into first_table_spc from first_table and contributor
------------------------------------------------------------------*/

    INSERT INTO :h_table(
        ruref,
        checkletter,
        frosic92,
        rusic92,
        frosic2007,
        rusic2007,
        froempees,
        employees,
        froempment,
        employment,
        frofteempt,
        fteempt,
        frotover,
        turnover,
        entref,
        wowentref,
        vatref,
        payeref,
        crn,
        live_lu,
        live_vat,
        live_paye,
        legalstatus,
        entrepmkr,
        region,
        birthdate,
        entname1,
        entname2,
        entname3,
        runame1,
        runame2,
        runame3,
        ruaddr1,
        ruaddr2,
        ruaddr3,
        ruaddr4,
        ruaddr5,
        rupostcode,
        tradstyle1,
        tradstyle2,
        tradstyle3,
        contact,
        telephone,
        fax,
        seltype,
        inclexcl,
        cell_no,
        formtype,
        cso_tel,
        currency,
        iswelsh,
        isnew,
        notde,
        osm)
        select distinct   /* distinct added 16 Nov 2009 by MJE */
        a.contributor_reference,
        check_letter,
        '',
        '',
        '',
        char(industry),
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        '',
        '',
        '',
        '',
        '',
        0,
        0,
        0,
        char(legal_status),
        '',
        region,
        '',
        '',
        '',
        '',
        addrline1,
        addrline2,
        addrline3,
        addrline7,
        addrline8,
        addrline9,
        addrline10,
        addrline11,
        addrline12,
        add_tradstyle1,
        add_tradstyle2,
        add_tradstyle3,
        designator,
        '',
        '',
        '',
        '',
        0,
        '0001',
        '45' + ao_ext1,
        currency,
        '0',
        'N',
        '0',
        'N'
    FROM  first_table a , contributor b
    WHERE a.contributor_reference=b.contributor_reference;
    
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error inserting into ' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  

/*--------------------------------------------------------------------
Update first_table_spc with markers for new, osm, welsh etc..
Also make the sic up to 5 digits where it only has 4
---------------------------------------------------------------------*/

    UPDATE  :h_table
    SET     rusic2007 = '0' + rusic2007
    WHERE   length(rusic2007) < 5;
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error updating sic to 5 digits on' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  
    
    UPDATE  :h_table
    SET     inclexcl = 'F'
    WHERE   ruref in(
            select contributor_reference from first_table
            where output_category = 'Y');
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error marking enforcement Rus on' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  
    

    UPDATE  :h_table
    SET     inclexcl = 'T'
    WHERE   ruref in (
            select contributor_reference from first_table
            where output_category = 'X');
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error marking desk despatch RUs on' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  
    
    
    UPDATE  :h_table
    SET     formtype = '0002'
    WHERE   region = 'YY';
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error marking Irish RUs on' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  
    
    UPDATE  :h_table
    SET     iswelsh = 'P'
    WHERE   ruref in(
            SELECT contributor_reference from welsh_contributor
            WHERE  period = :g_period);
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error marking Welsh post code RUs on' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  
    
    
    UPDATE  :h_table
    SET     iswelsh = 'W'
    WHERE   ruref in(
            SELECT contributor_reference from welsh_forms
            WHERE  period = :g_period);
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error marking Welsh translations on' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  
    
    
    UPDATE  :h_table
    SET     isnew = 'Y'
    WHERE   ruref in(
            SELECT contributor_reference from first_table
            WHERE  output_category in('C','G','W')); 
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error marking Welsh translations on' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  
    
    
    UPDATE  :h_table
    SET     osm = 'Y'
    WHERE   ruref in(
            select contributor_reference from first_table
            where output_category in('O','W')); 
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error marking osmotherly RUs on' + :h_table,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  
/*------------------------------------------------------------------
Create the output file for the firs_table information    
------------------------------------------------------------------*/
    
    COPY TABLE  :h_table(
        ruref       =  c(0)':',
        checkletter =  c(0)':',
        frosic92    =  c(0)':',
        rusic92     =  c(0)':',
        frosic2007  =  c(0)':',
        rusic2007   =  c(0)':',
        froempees   =  c(0)':',
        employees   =  c(0)':',
        froempment  =  c(0)':',
        employment  =  c(0)':',
        frofteempt  =  c(0)':',
        fteempt     =  c(0)':',
        frotover    =  c(0)':',
        turnover    =  c(0)':',
        entref      =  c(0)':',
        wowentref   =  c(0)':',
        vatref      =  c(0)':',
        payeref     =  c(0)':',
        crn         =  c(0)':',
        live_lu     =  c(0)':',
        live_vat    =  c(0)':',
        live_paye   =  c(0)':',
        legalstatus =  c(0)':',
        entrepmkr   =  c(0)':',
        region      =  c(0)':',
        birthdate   =  c(0)':',
        entname1    =  c(0)':',
        entname2    =  c(0)':',
        entname3    =  c(0)':',
        runame1     =  c(0)':',
        runame2     =  c(0)':',
        runame3     =  c(0)':',
        ruaddr1     =  c(0)':',
        ruaddr2     =  c(0)':',
        ruaddr3     =  c(0)':',
        ruaddr4     =  c(0)':',
        ruaddr5     =  c(0)':',
        rupostcode  =  c(0)':',
        tradstyle1  =  c(0)':',
        tradstyle2  =  c(0)':',
        tradstyle3  =  c(0)':',
        contact     =  c(0)':',
        telephone   =  c(0)':',
        fax         =  c(0)':',
        seltype     =  c(0)':',
        inclexcl    =  c(0)':',
        cell_no     =  c(0)':',
        formtype    =  c(0)':',
        cso_tel     =  c(0)':',
        currency    =  c(0)':',
        iswelsh     =  c(0)':',
        isnew       =  c(0)':',
        notde       =  c(0)':',
        osm         =  c0nl)
    
    INTO :h_outfile + :h_run_period;   
    
    COMMIT;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error writing ' + :h_table + ' to file',
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;  
/*}*/

COPY TABLE first_reminders_file()
INTO :h_first_reminders + :h_run_period;



RETURN 0;
}
/*----------->
.FORMAT    contributor_reference   (c11),
           addrline1               (c35),
           addrline2               (c35),
           addrline3               (c35),
           addrline4               (c35),
           addrline5               (c35),
           addrline6               (c35),
           addrline7               (c30),
           addrline8               (c30),
           addrline9               (c30),
           addrline10              (c30),
           addrline11              (c30),
           addrline12              (c30),
           designator              (c30),
           contributor_industry    (f5)
>-----------*/

