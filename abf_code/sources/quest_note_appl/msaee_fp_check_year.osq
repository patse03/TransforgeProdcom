/*----------------------------------------------------------------------
QL: Checks an annual period to see whether it exists.
QL works in advance of inquiry_period, so valid periods would include
   the maximum period pluis one.

Returns 1 if not a valid annual period (0 otherwise)
----------------------------------------------------------------------*/

PROCEDURE msaee_fp_check_year (

        period            = INTEGER4 NOT NULL) =

DECLARE h_retries_allowed = INTEGER1 NOT NULL,
        h_retries         = INTEGER1 NOT NULL,
        h_retry_or_not    = CHAR(5) NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        h_max_period      = INTEGER4 NOT NULL,
        h_min_period      = INTEGER4 NOT NULL,
        ret_val           = INTEGER1 NOT NULL

{
    h_retries_allowed = 3;
    h_frpr_name = 'msaee_fp_check_year';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT MAX(period) AS h_max_period,
               MIN(period) AS h_min_period
        FROM   inquiry_period
        WHERE  inquiry = 14;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing inquiry_period'
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    IF :period < :h_min_period 
    OR :period > :h_max_period + 100
    OR MOD(:period,100) <> 0
    THEN
        RETURN 1;
    ENDIF;

    RETURN 0;
} 
