/*-s--------------------------------------------------------------------
msaee_fr_update_cns: add / delete or update-text
--------------------------------------------------------------------e-*/

INITIALIZE () =

DECLARE h_retries_allowed = INTEGER1 NOT NULL,
        h_retries         = INTEGER1 NOT NULL,
        h_retry_or_not    = CHAR(5) NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        h_display         = INTEGER1 NOT NULL,
        ret_val           = INTEGER1 NOT NULL,
        h_field_name      = VARCHAR(24) NOT NULL,
        h_table           = VARCHAR(24) NOT NULL,
	h_yesno		  = CHAR(1) NOT NULL,
	h_prefix	  = VARCHAR(15) NOT NULL,
        lp_setup_table    = PROCEDURE RETURNING INTEGER

{
    h_table = 'temp_amend_cns';
    msa_date = 'now';
    h_retries_allowed = 3;
    h_prefix = 'CN -';	
    no_codes = 0;
    h_frpr_name = 'msaee_fr_update_cns';
    SET_FORMS FIELD '' (MODE(tf) = 'READ',
                        REVERSE(period) = 0,
                        UNDERLINE(period) = 1,
                        DISPLAYONLY(period) = 0,
                        REVERSE(prodcom_code) = 0,
                        UNDERLINE(prodcom_code) = 1,
                        DISPLAYONLY(prodcom_code) = 0);
}

FIELD period =
{
    MESSAGE 'Checking Period . . .';

    ret_val = CALLPROC msaee_fp_check_year (period = :period);
    IF ret_val = 9
    THEN
        RETURN ret_val;
    ELSEIF ret_val = 1
    THEN
        MESSAGE 'This is not a valid annual Period'
        WITH STYLE = POPUP;
        RESUME FIELD period;
    ENDIF;

    SET_FORMS FIELD '' (REVERSE(period) = 1,
                        UNDERLINE(period) = 0,
                        DISPLAYONLY(period) = 1);

    RESUME FIELD prodcom_code;
}

FIELD prodcom_code =
{
    MESSAGE 'Checking Question . . .';

    /*------------------------------------------------------------------
     Look for Question (and Period)
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT question AS prodcom_code
        FROM   question_library
        WHERE  question = :prodcom_code
        AND    quest_order = 1
        AND    MOD(question,10) = 1
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing question_library'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'This is not a valid Value Question for this Period'
        WITH STYLE = POPUP;
        RESUME FIELD prodcom_code;
    ENDIF;

    SET_FORMS FIELD '' (MODE(tf) = 'FILL',
                        REVERSE(prodcom_code) = 1,
                        UNDERLINE(prodcom_code) = 0,
                        DISPLAYONLY(prodcom_code) = 1);

    ret_val = CALLPROC lp_setup_table ();

    RESUME FIELD tf;

}

'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'HELP',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');

}

'Clear' =
{
    CLEAR FIELD ALL;
    msa_date = 'now';
    SET_FORMS FIELD '' (MODE(tf) = 'READ',
                        REVERSE(period) = 0,
                        UNDERLINE(period) = 1,
                        DISPLAYONLY(period) = 0,
                        REVERSE(prodcom_code) = 0,
                        UNDERLINE(prodcom_code) = 1,
                        DISPLAYONLY(prodcom_code) = 0);
    no_codes = 0;
    RESUME FIELD period;
}

'Save' =
{

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(period));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the Period' WITH STYLE = POPUP;
        RESUME FIELD period;
    ENDIF;

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(prodcom_code));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the PCC' WITH STYLE = POPUP;
        RESUME FIELD prodcom_code;
    ENDIF;

    MESSAGE 'Saving CN Codes . . .';

    /*------------------------------------------------------------------
     Delete all existing links from prodcom_lookup
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        DELETE FROM prodcom_lookup
        WHERE       prodcom_code = :prodcom_code
        AND         period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error deleting from prodcom_lookup'
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    /*------------------------------------------------------------------
     Insert the screen table's rows onto a temporary table
    ------------------------------------------------------------------*/

    ret_val = CALLPROC msa_fp_drop_table ( h_table = :h_table);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        CREATE TABLE :h_table (cn_codes CHAR(8) NOT NULL);

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in creating ' + :h_table
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    UNLOADTABLE tf
    {
        IF tf.cn_codes LIKE '/[0-9/]' escape '/'
        OR tf.cn_codes LIKE '/[0-9/]/[0-9/]' escape '/'
        OR tf.cn_codes LIKE '/[0-9/]/[0-9/]/[0-9/]' escape '/'
        OR tf.cn_codes LIKE '/[0-9/]/[0-9/]/[0-9/]/[0-9/]' escape '/'
        OR tf.cn_codes LIKE '/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]' escape '/'
        OR tf.cn_codes LIKE '/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]' escape '/'
        OR tf.cn_codes LIKE '/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]' escape '/'
        OR tf.cn_codes LIKE '/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]/[0-9/]' escape '/'
        THEN
            h_retry_or_not      = 'RETRY';
            h_retries           = 0;
    
            WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
            DO
    
                h_retries = :h_retries + 1;
    
                INSERT INTO :h_table (
                            cn_codes)
                VALUES (    SQUEEZE(:tf.cn_codes));
    
                ret_val = CALLPROC check_inq_ing (
                          h_num_row_ck      = 1,
                          h_commit          = 'Y',
                          h_rollback        = 'N',
                          h_retries         = :h_retries,
                          h_retries_allowed = :h_retries_allowed,
                          h_frpr_name       = :h_frpr_name);
    
                IF ret_val <> 7
                THEN
                    h_retry_or_not = '';
                ENDIF;
    
            ENDWHILE;
    
            IF ret_val = 7
            THEN
                RETURN 7;
    
            ELSEIF ret_val = 9
            THEN
                MESSAGE 'System error inserting into ' + :h_table
                WITH STYLE = POPUP;
                RETURN 9;
    
            ELSEIF ret_val = 1
            THEN
                MESSAGE 'No rows inserted into ' + :h_table
                WITH STYLE = POPUP;
                RETURN 9;
            ENDIF;
        ENDIF;
    };

    /*------------------------------------------------------------------
     Insert from the temporary table the DISTINCT valid cn_codes
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        INSERT INTO prodcom_lookup (
                    prodcom_code,
                    cn_codes,
                    period)
        SELECT      DISTINCT(:prodcom_code),
                    cn_codes,
                    :period
        FROM        :h_table;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error inserting into prodcom_lookup'
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    ret_val = CALLPROC msaee_fp_update_cn_text (
              prodcom_code = :prodcom_code,
              period       = :period);

    ret_val = CALLPROC lp_setup_table ();
    msa_date = 'now';

    /*----------------------------------------------------------
    get reason for change and update question_changes table
    -----------------------------------------------------------*/

    h_yesno = '';

    ret_val = CALLPROC msaee_fp_insert_q_changes (
	      question		= :prodcom_code,
	      period		= :period,
	      h_yesno		= :h_yesno,		
	      h_prefix		= :h_prefix);

    IF ret_val <> 0
    THEN
	RETURN ret_val;
    ENDIF;

    IF ret_val = 9
    THEN 
        RETURN 9;
    ENDIF;

    CLEAR FIELD ALL;
    msa_date = 'now';
    SET_FORMS FIELD '' (MODE(tf) = 'READ',
                        REVERSE(period) = 0,
                        UNDERLINE(period) = 1,
                        DISPLAYONLY(period) = 0,
                        REVERSE(prodcom_code) = 0,
                        UNDERLINE(prodcom_code) = 1,
                        DISPLAYONLY(prodcom_code) = 0);
    no_codes = 0;
    RESUME FIELD period; 

}

'ViewCNText', KEY FRSKEY4 =
{
    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(period));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the Period' WITH STYLE = POPUP;
        RESUME FIELD period;
    ENDIF;

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(prodcom_code));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the PCC' WITH STYLE = POPUP;
        RESUME FIELD prodcom_code;
    ENDIF;

    IF :no_codes = 0
    THEN
        MESSAGE 'There are no CN Codes to View'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    ret_val = CALLFRAME msaee_fr_view_cn_text (
              period       = :period,
              prodcom_code = :prodcom_code);

    msa_date = 'now';

}

'End', KEY FRSKEY6 =
{
    RETURN 0;
}

/*----------------------------------------------------------------------
                 L O C A L   P R O C E D U R E S   1
----------------------------------------------------------------------*/

PROCEDURE lp_setup_table () =
{

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        tf =

        SELECT cn_codes
        FROM   prodcom_lookup
        WHERE  period = :period
        AND    prodcom_code = :prodcom_code;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row         = BYREF(:no_codes),
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing prodcom_lookup'
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    RETURN 0;
}
