PROCEDURE msaee_fp_update_cn_text (

        prodcom_code      = INTEGER4 NOT NULL,
        period            = INTEGER4 NOT NULL) =

DECLARE h_retries_allowed = INTEGER1 NOT NULL,
        h_retries         = INTEGER1 NOT NULL,
        h_retry_or_not    = CHAR(5) NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        h_code            = VARCHAR(8) NOT NULL,
        cn_code1          = VARCHAR(60) NOT NULL,
        cn_code2          = VARCHAR(60) NOT NULL,
        cn_code3          = VARCHAR(60) NOT NULL,
        cn_code4          = VARCHAR(60) NOT NULL,
        cn_code5          = VARCHAR(60) NOT NULL,
        cn_code6          = VARCHAR(60) NOT NULL,
        cn_code7          = VARCHAR(60) NOT NULL,
        cn_code8          = VARCHAR(60) NOT NULL,
        cn_code9          = VARCHAR(60) NOT NULL,
        need_count        = INTEGER1 NOT NULL,
        ret_val           = INTEGER1 NOT NULL,
        h_question        = INTEGER4 NOT NULL,
        h_count           = INTEGER1 NOT NULL,
        h_counter         = INTEGER1 NOT NULL
{
    h_frpr_name = 'msaee_fp_update_cn_text';
    h_retries_allowed = 3;

    MESSAGE 'Updating CN Text . . .';

    /*------------------------------------------------------------------
     Check Details exist on prodcom_cncodes
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT period AS period
        FROM   prodcom_cncodes
        WHERE  prodcom_code = :prodcom_code
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in loading from prodcom_cncodes'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        /*--------------------------------------------------------------
         Insert the blank record if none existed.
        --------------------------------------------------------------*/

        h_retry_or_not      = 'RETRY';
        h_retries           = 0;
    
        WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
        DO
    
            h_retries = :h_retries + 1;
    
            INSERT INTO prodcom_cncodes (
                        prodcom_code,
                        period,
                        need_count,
                        cn_code1,
                        cn_code2,
                        cn_code3,
                        cn_code4,
                        cn_code5,
                        cn_code6,
                        cn_code7,
                        cn_code8,
                        cn_code9)
            VALUES (    :prodcom_code,
                        :period,
                        0,
                        '',
                        '',
                        '',
                        '',
                        '',
                        '',
                        '',
                        '',
                        '');

            ret_val = CALLPROC check_inq_ing (
                      h_num_row_ck      = 1,
                      h_commit          = 'Y',
                      h_rollback        = 'N',
                      h_retries         = :h_retries,
                      h_retries_allowed = :h_retries_allowed,
                      h_frpr_name       = :h_frpr_name);

            IF ret_val <> 7
            THEN
                h_retry_or_not = '';
            ENDIF;
    
        ENDWHILE;
    
        IF ret_val = 7
        THEN
            RETURN 7;
    
        ELSEIF ret_val = 9
        THEN
            MESSAGE 'System error in accessing prodcom_cncodes'
            WITH STYLE = POPUP;
            RETURN 9;

        ELSEIF ret_val = 1
        THEN
            MESSAGE 'Unable to insert blank details into prodcom_cncodes'
            WITH STYLE = POPUP;
            RETURN 9;
        ENDIF;
    ENDIF;

    /*------------------------------------------------------------------
     Convert Lookup to include changes to the CN Code lists
    ------------------------------------------------------------------*/

    h_count = 1;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT   cn_codes AS h_code
        FROM     prodcom_lookup
        WHERE    prodcom_code = :prodcom_code
        AND      period = :period
        ORDER BY h_code
        {
            IF h_count = 1  
            THEN
                cn_code1 = :h_code;
                h_count = 2;
    
            ELSEIF (h_count > 1  AND h_count < 6) 
            THEN
                cn_code1 = CONCAT(cn_code1, (CONCAT(' + ',:h_code)));
                h_count = h_count + 1;
    
            ELSEIF h_count = 6 
            THEN
                cn_code2 = :h_code;
                h_count = 7;
    
            ELSEIF (h_count > 5 AND h_count < 11) 
            THEN
                cn_code2 = CONCAT(cn_code2, (CONCAT(' + ',:h_code)));
                h_count = h_count + 1;
    
            ELSEIF h_count = 11 
            THEN
                cn_code3 = :h_code;
                h_count = 12;
    
            ELSEIF (h_count > 10 AND h_count < 16) 
            THEN
                cn_code3 = CONCAT(cn_code3, (CONCAT(' + ',:h_code)));
                h_count = h_count + 1;
    
            ELSEIF h_count = 16 
            THEN
                cn_code4 = :h_code;
                h_count = 17;
    
            ELSEIF (h_count > 15 AND h_count < 21) 
            THEN
                cn_code4 = CONCAT(cn_code4, (CONCAT(' + ',:h_code)));
                h_count = h_count + 1;
    
            ELSEIF h_count = 21 
            THEN
                cn_code5 = :h_code;
                h_count = 22;
    
            ELSEIF (h_count > 20 AND h_count < 26) 
            THEN
                cn_code5 = CONCAT(cn_code5, (CONCAT(' + ',:h_code)));
                h_count = h_count + 1;
    
            ELSEIF h_count = 26 
            THEN
                cn_code6 = :h_code;
                h_count = 27;
    
            ELSEIF (h_count > 25 AND h_count < 31) 
            THEN
                cn_code6 = CONCAT(cn_code6, (CONCAT(' + ',:h_code)));
                h_count = h_count + 1;
    
            ELSEIF h_count = 31 
            THEN
                cn_code7 = :h_code;
                h_count = 32;
    
            ELSEIF (h_count > 30 AND h_count < 36) 
            THEN
                cn_code7 = CONCAT(cn_code7, (CONCAT(' + ',:h_code)));
                h_count = h_count + 1;
    
            ELSEIF h_count = 36 
            THEN
                cn_code8 = :h_code;
                h_count = 37;
    
            ELSEIF (h_count > 35 AND h_count < 41) 
            THEN
                cn_code8 = CONCAT(cn_code8, (CONCAT(' + ',:h_code)));
                h_count = h_count + 1;
    
            ELSEIF h_count = 41 
            THEN
                cn_code9 = :h_code;
                h_count = 42;
    
            ELSEIF (h_count > 40 AND h_count < 46) 
            THEN
                cn_code9 = CONCAT(cn_code9, (CONCAT(' + ',:h_code)));
                h_count = h_count + 1;
            ENDIF;
        };

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing prodcom_lookup'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        /*--------------------------------------------------------------
        No rows on prodcom_lookup - so the last CN Code must have just
        been deleted. Remove the entry from prodcom_cncodes.
        --------------------------------------------------------------*/
        
        h_retry_or_not      = 'RETRY';
        h_retries           = 0;
    
        WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
        DO
    
            h_retries = :h_retries + 1;
    
            DELETE FROM prodcom_cncodes
            WHERE       prodcom_code = :prodcom_code
            AND         period = :period;
    
            ret_val = CALLPROC check_inq_ing (
                      h_num_row_ck      = 1,
                      h_commit          = 'Y',
                      h_rollback        = 'N',
                      h_retries         = :h_retries,
                      h_retries_allowed = :h_retries_allowed,
                      h_frpr_name       = :h_frpr_name);
    
            IF ret_val <> 7
            THEN
                h_retry_or_not = '';
            ENDIF;
    
        ENDWHILE;
    
        IF ret_val = 7
        THEN
            RETURN 7;
    
        ELSEIF ret_val = 9
        THEN
            MESSAGE 'System error in deleting from prodcom_cncodes'
            WITH STYLE = POPUP;
            RETURN 9;
    
        ELSEIF ret_val = 1
        THEN
            MESSAGE 'No rows deleted from prodcom_cncodes'
            WITH STYLE = POPUP;
            RETURN 9;
        ENDIF;
    
	RETURN 0;

    ENDIF;

    /*------------------------------------------------------------------
     Put bracket at end of last line
    ------------------------------------------------------------------*/

    h_count = h_count - 1;

    IF (h_count > 0 AND h_count < 6) 
    THEN
        cn_code1 = CONCAT(cn_code1,ASCII(')'));
        h_counter = 1;
    ELSEIF (h_count > 5 AND h_count < 11) 
    THEN
        cn_code2 = CONCAT(cn_code2,ASCII(')'));
        h_counter = 2;
    ELSEIF (h_count > 10 AND h_count < 16) 
    THEN
        cn_code3 = CONCAT(cn_code3,ASCII(')'));
        h_counter = 3;
    ELSEIF (h_count > 15 AND h_count < 21) 
    THEN
        cn_code4 = CONCAT(cn_code4,ASCII(')'));
        h_counter = 4;
    ELSEIF (h_count > 20 AND h_count < 26) 
    THEN
        cn_code5 = CONCAT(cn_code5,ASCII(')'));
        h_counter = 5;
    ELSEIF (h_count > 25 AND h_count < 31) 
    THEN
        cn_code6 = CONCAT(cn_code6,ASCII(')'));
        h_counter = 6;
    ELSEIF (h_count > 30 AND h_count < 36) 
    THEN
        cn_code7 = CONCAT(cn_code7,ASCII(')'));
        h_counter = 7;
    ELSEIF (h_count > 35 AND h_count < 41) 
    THEN
        cn_code8 = CONCAT(cn_code8,ASCII(')'));
        h_counter = 8;
    ELSEIF (h_count > 40 AND h_count < 46) 
    THEN
        cn_code9 = CONCAT(cn_code9,ASCII(')'));
        h_counter = 9;
    ENDIF;

    /*------------------------------------------------------------------
     need_counts should be:

         number of lines the CNs take (h_counter) +
         the line_count from the 01 question on question_library +
         3 for every volume on the question_library +
         5
    ------------------------------------------------------------------*/

    need_count = :h_counter;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT question AS h_question,
               line_count AS h_count
        FROM   question_library
        WHERE  period = :period
        AND    question IN (:prodcom_code, 
               :prodcom_code + 1, :prodcom_code + 3, :prodcom_code + 4,
               :prodcom_code + 5, :prodcom_code + 7, :prodcom_code + 8)
        {               
            IF :h_question = :prodcom_code
            THEN
                need_count = :need_count + :h_count;
            ELSE
                need_count = :need_count + 3;
            ENDIF;
        };

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error selecting from question_library'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No Questions found on question_library'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    need_count = :need_count + 5;

    /*------------------------------------------------------------------
     Update with re-formatted CN Codes
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        UPDATE prodcom_cncodes
        SET    need_count = :need_count,
               cn_code1   = :cn_code1,
               cn_code2   = :cn_code2,
               cn_code3   = :cn_code3,
               cn_code4   = :cn_code4,
               cn_code5   = :cn_code5,
               cn_code6   = :cn_code6,
               cn_code7   = :cn_code7,
               cn_code8   = :cn_code8,
               cn_code9   = :cn_code9
        WHERE  prodcom_code = :prodcom_code
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error updating prodcom_cncodes'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No rows updated on prodcom_cncodes'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    RETURN 0;
}
