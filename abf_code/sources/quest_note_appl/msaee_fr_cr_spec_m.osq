
/*-s--------------------------------------------------------------------
Start of a Question Creation
--------------------------------------------------------------------e-*/

INITIALIZE () =

DECLARE h_retries_allowed   = INTEGER1 NOT NULL,
        h_retries           = INTEGER1 NOT NULL,
        h_retry_or_not      = CHAR(5) NOT NULL,
        h_frpr_name         = VARCHAR(24) NOT NULL,
        ret_val             = INTEGER1 NOT NULL,
        h_display           = INTEGER1 NOT NULL,
        latest_period       = INTEGER4 NOT NULL,
        h_question          = INTEGER4 NOT NULL,
        h_quest_order       = INTEGER1 NOT NULL,
        h_yesno             = CHAR(1) NOT NULL,
        h_quantity_required = INTEGER1 NOT NULL,
        h_owner_order       = INTEGER1 NOT NULL,
	h_check_industry    = INTEGER4 NOT NULL,
	h_count_industry    = INTEGER4 NOT NULL,
        unit_1              = CHAR(20) NOT NULL,
        unit_2              = CHAR(20) NOT NULL,
	h_prefix            = VARCHAR(15) NOT NULL
{
    h_retries_allowed = 3;
    h_frpr_name = 'msaee_fr_cr_spec_m';
    msa_date = 'now';
    h_prefix = 'New question - ';

    /*------------------------------------------------------------------
     Get latest period 
     don't allow creation for periods before
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT MAX(period) AS latest_period
        FROM   inquiry_period
        WHERE  inquiry = 14;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing inquiry_period'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No rows found on inquiry_period'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    question2 = 'N';
    question4 = 'N';
    question5 = 'N';
    question6 = 'N';
    question8 = 'N';

    rep_quest = 'N';
    uk_only   = 'Y';

    SET_FORMS FIELD '' (REVERSE(inquiry)= 0,
                        DISPLAYONLY(inquiry)= 0,
                        UNDERLINE(inquiry)= 1,
                        REVERSE(question_industry)= 0,
                        DISPLAYONLY(question_industry)= 0,
                        UNDERLINE(question_industry)= 1,
                        REVERSE(question)= 0,
                        DISPLAYONLY(question)= 0,
                        UNDERLINE(question)= 1,
                        REVERSE(brief_text)= 0,
                        DISPLAYONLY(brief_text)= 0,
                        UNDERLINE(brief_text)= 1,
                        REVERSE(period)= 0,
                        DISPLAYONLY(period)= 0,
                        UNDERLINE(period)= 1,
                        REVERSE(uk_only)= 1,
                        DISPLAYONLY(uk_only)= 1,
                        UNDERLINE(uk_only)= 0,
                        INVISIBLE(owner_question)= 1,
                        REVERSE(owner_question)= 0,
                        DISPLAYONLY(owner_question)= 0,
                        UNDERLINE(owner_question)= 1,
                        REVERSE(rep_quest)= 1,
                        DISPLAYONLY(rep_quest)= 1,
                        UNDERLINE(rep_quest)= 0); 
}

FIELD period =
{

    IF :period <> :latest_period AND :period <> :latest_period + 100
    THEN
        MESSAGE 'The only periods that Questions may be created for' +
                ' are ' + VARCHAR(:latest_period) + ' and ' +
                VARCHAR(:latest_period + 100)
                WITH STYLE = POPUP;
                RESUME FIELD period;
    ENDIF;

    SET_FORMS FIELD '' (REVERSE(period)= 1,
                        DISPLAYONLY(period)= 1,
                        UNDERLINE(period)= 0);

    RESUME FIELD inquiry;

}
FIELD inquiry =
{
    IF inquiry <> 14 AND inquiry <> 15
    THEN
        MESSAGE 'Inquiry must be 14 or 15'
        WITH STYLE = POPUP;
        RESUME FIELD inquiry;
    ENDIF;

    SET_FORMS FIELD '' (REVERSE(inquiry)= 1,
                        DISPLAYONLY(inquiry)= 1,
                        UNDERLINE(inquiry)= 0);

    RESUME FIELD question_industry;

}

FIELD question_industry =
{
    MESSAGE 'Checking Industry . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT industry AS question_industry
        FROM   industry
        WHERE  industry = :question_industry
        AND    inquiry = :inquiry;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing industry'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'This Industry does not exist for this Inquiry'
        WITH STYLE = POPUP;
        RESUME FIELD question_industry;
    ENDIF;

    SET_FORMS FIELD '' (REVERSE(question_industry)= 1,
                        DISPLAYONLY(question_industry)= 1,
                        UNDERLINE(question_industry)= 0);

    RESUME FIELD question;

}

FIELD question =
{
    IF ASCII(:question) NOT LIKE '%1'
    THEN
        MESSAGE 'Question is not a value 01 code'
        WITH STYLE = POPUP;
        RESUME FIELD question;
    ENDIF;

    IF question < ((question_industry / 10) * 100000)
    OR question > ((question_industry / 10) * 100000) + 99999
    THEN
        MESSAGE 'Question is not in the correct format'
        WITH STYLE = POPUP;
        RESUME FIELD question;

    ENDIF;

    MESSAGE 'Checking Question . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT question
        FROM   question_library
        WHERE  question = :question
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing question_library'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 0
    THEN
        MESSAGE 'This Question already exists for this Period'
        WITH STYLE = POPUP;
        RESUME FIELD question;
    ENDIF;

/* Following code added by MJE 11/06/2007 */
    h_check_industry = question / 10000;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT COUNT(industry) AS h_count_industry
        FROM   industry
        WHERE  industry = :h_check_industry
        AND    inquiry = :inquiry;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing industry'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    IF h_count_industry = 0 THEN
        h_quest_order = 1;
    ELSE
/* End of MJE inserted code except for endif; */

    IF ASCII(:question) LIKE '%9100'
    THEN
/*        h_quest_order = 0;*/
        MESSAGE 'This Question has been removed from the inquiry'
        WITH STYLE = POPUP;
        RESUME FIELD question;
    ELSEIF ASCII(:question) LIKE '%9200'
    THEN
        h_quest_order = 10;
    ELSEIF ASCII(:question) LIKE '%9801' OR
    ASCII(:question) LIKE '%9301' OR
    ASCII(:question) LIKE '%9401' OR
    ASCII(:question) LIKE '%9501' OR
    ASCII(:question) LIKE '%9601'
    THEN
        h_quest_order = 9;
    ELSE
        h_quest_order = 1;
    ENDIF;
    ENDIF;

    /*-s----------------------------------------------------------------
     Check if the question exists on question_history for this period
    ----------------------------------------------------------------e-*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT new_question AS question
        FROM   question_history
        WHERE  new_question = :question
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7 THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing question_history'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 0
    THEN
        MESSAGE 'This Question already exists on' +
                ' question_history as a New Question for this Period'
        WITH STYLE = POPUP;
        RESUME FIELD question;
    ENDIF;

    SET_FORMS FIELD '' (REVERSE(question)= 1,
                        DISPLAYONLY(question)= 1,
                        UNDERLINE(question)= 0);

    owner_question = :question;  

    RESUME FIELD brief_text;
}

FIELD brief_text =
{
    IF brief_text = ''
    THEN
        MESSAGE 'Please complete the Brief Text'
        WITH STYLE = POPUP;
        RESUME FIELD brief_text;
    ENDIF;

    SET_FORMS FIELD '' (REVERSE(brief_text)= 1,
                        DISPLAYONLY(brief_text)= 1,
                        UNDERLINE(brief_text)= 0);

    RESUME FIELD uk_only;

}

FIELD uk_only =
{
    /*------------------------------------------------------------------
    If UK Only = Y, then replaced_question is also Y
    ------------------------------------------------------------------*/
/*
    IF uk_only <> 'Y' AND uk_only <> 'N'
    THEN
        MESSAGE 'UK Only must be Y or N'
        WITH STYLE = POPUP;
        RESUME FIELD uk_only;
    ENDIF;

    IF uk_only = 'Y'
    THEN
*/
        IF RIGHT(LEFT(VARCHAR(question),6),2) <> '99'
        AND RIGHT(LEFT(VARCHAR(question),6),2) <> '88'
        THEN
            MESSAGE 'The Question is not in the correct format' +
                    ' for a multi question'
            WITH STYLE = POPUP;

            SET_FORMS FIELD '' (REVERSE(question)= 0,
                                DISPLAYONLY(question)= 0,
                                UNDERLINE(question)= 1);
            RESUME FIELD question;
        ENDIF;

        IF h_quest_order <> 1
        THEN
            MESSAGE 'You cannot create a multi for a standard heading'
            WITH STYLE = POPUP;
            RESUME FIELD question;
        ENDIF;

 /*   ENDIF; 

    SET_FORMS FIELD '' (REVERSE(uk_only)= 1,
                        DISPLAYONLY(uk_only)= 1,
                        UNDERLINE(uk_only)= 0);

    IF uk_only = 'Y'
    THEN
        rep_quest = 'Y';
        SET_FORMS FIELD '' (REVERSE(rep_quest)= 1,
                            DISPLAYONLY(rep_quest)= 1,
                            UNDERLINE(rep_quest)= 0);
        RESUME FIELD owner_question;
    ELSE
        SET_FORMS FIELD '' (INVISIBLE(owner_question)= 1);
        RESUME FIELD rep_quest;
    ENDIF;
*/
}
/**********************************************************
FIELD owner_question =
{
    -s----------------------------------------------------------------
     Check the existence of the owner question
    ----------------------------------------------------------------e-

    IF RIGHT(VARCHAR(question),1) <> RIGHT(VARCHAR(owner_question),1)
    THEN
        MESSAGE 'The Owner Question should end in the same digit' +
                ' as the Question being created'
        WITH STYLE = POPUP;
        RESUME FIELD owner_question;
    ENDIF;

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT quest_order AS h_owner_order
        FROM   question_library
        WHERE  question = :owner_question
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing question_library'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'The Owner Question does not exist for this Period'
        WITH STYLE = POPUP;
        RESUME FIELD owner_question;
    ENDIF;

    IF h_owner_order <> 1
    THEN
        MESSAGE 'You cannot create a UK Only Question if its' +
                ' Owner Question is a Standard Heading'
        WITH STYLE = POPUP;
        RESUME FIELD owner_question;
    ENDIF;

    SET_FORMS FIELD '' (REVERSE(owner_question)= 1,
                        DISPLAYONLY(owner_question)= 1,
                        UNDERLINE(owner_question)= 0);

}

FIELD rep_quest =
{
    IF rep_quest <> 'N' AND rep_quest <> 'Y'
    THEN
        MESSAGE 'Please type Y if this Question replaces an existing' +
                ' Question, or N if otherwise'
        WITH STYLE = POPUP;
        RESUME FIELD rep_quest;
    ENDIF;

    SET_FORMS FIELD '' (REVERSE(rep_quest)= 1,
                        DISPLAYONLY(rep_quest)= 1,
                        UNDERLINE(rep_quest)= 0);

}
*******************************************************/
'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'HELP',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');

}

'Go', KEY FRSKEY4 =
{
    /*-s----------------------------------------------------------------
     Check to see if data entry fields are display_only or not. If they
     are not, they have not been filled in
    ----------------------------------------------------------------e-*/

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(period));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the Period' WITH STYLE = POPUP;
        RESUME FIELD period;
    ENDIF;

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(inquiry));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the Inquiry' WITH STYLE = POPUP;
        RESUME FIELD inquiry;
    ENDIF;

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(question_industry));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the Industry' WITH STYLE = POPUP;
        RESUME FIELD question_industry;
    ENDIF;

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(question));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the Question' WITH STYLE = POPUP;
        RESUME FIELD question;
    ENDIF;

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(brief_text));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the Brief Text' WITH STYLE = POPUP;
        RESUME FIELD brief_text;
    ENDIF;
/*
    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(uk_only));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the UK Only field' WITH STYLE = POPUP;
        RESUME FIELD uk_only;
    ENDIF;

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(owner_question));
    IF :h_display = 0 AND uk_only = 'Y'
    THEN
        MESSAGE 'Please complete the Owner Question field' WITH STYLE = POPUP;
        RESUME FIELD owner_question;
    ENDIF;

    INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(rep_quest));
    IF :h_display = 0
    THEN
        MESSAGE 'Please complete the Replaces Question field' WITH STYLE = POPUP;
        RESUME FIELD rep_quest;
    ENDIF;
*/
    /*------------------------------------------------------------------
     Check Volumes
    ------------------------------------------------------------------*/

    IF :question2 <> 'Y' AND :question2 <> 'N'
    THEN
        MESSAGE 'Please type Y or N' WITH STYLE = POPUP;
        RESUME FIELD question2;
    ENDIF;

    IF :question4 <> 'Y' AND :question4 <> 'N'
    THEN
        MESSAGE 'Please type Y or N' WITH STYLE = POPUP;
        RESUME FIELD question4;
    ENDIF;

    IF :question5 <> 'Y' AND :question5 <> 'N'
    THEN
        MESSAGE 'Please type Y or N' WITH STYLE = POPUP;
        RESUME FIELD question5;
    ENDIF;

    IF :question6 <> 'Y' AND :question6 <> 'N'
    THEN
        MESSAGE 'Please type Y or N' WITH STYLE = POPUP;
        RESUME FIELD question6;
    ENDIF;

    IF :question8 <> 'Y' AND :question8 <> 'N'
    THEN
        MESSAGE 'Please type Y or N' WITH STYLE = POPUP;
        RESUME FIELD question8;
    ENDIF;

    IF question2 = 'N' AND question4 = 'N' AND question5 = 'N'
    AND question6 = 'N' AND question8 = 'N'
    THEN
        h_yesno = '';
        WHILE h_yesno <> 'y' AND h_yesno <> 'n'
        DO
            h_yesno = PROMPT 'No volumes will be created. Is this OK?' +
                             ' Type Y/N and press <return>'
                      WITH STYLE = POPUP;
            h_yesno = LOWERCASE(:h_yesno);
        ENDWHILE;

        IF h_yesno = 'n'
        THEN
            RESUME FIELD question2;
        ENDIF;
    ENDIF;

    IF question4 = 'Y' AND question2 = 'N'
    THEN
        MESSAGE 'You are not allowed to create a 2nd volume without' +
                ' creating a 1st volume'
        WITH STYLE = POPUP;
        question4 = 'N';
        RESUME FIELD question2;
    ENDIF;

    IF question5 = 'Y' AND question2 = 'N'
    THEN
        MESSAGE 'You cannot have an 05 volume code without its' +
                ' corresponding 02 code'
        WITH STYLE = POPUP;
        RESUME FIELD question2;
    ENDIF;

    IF question6 = 'Y' AND question4 = 'N'
    THEN
        MESSAGE 'You cannot have a 06 volume code without its' +
                ' corresponding 04 code'
        WITH STYLE = POPUP;
        RESUME FIELD question4;
    ENDIF;

    IF question6 = 'Y' AND question5 = 'N'
    THEN
        MESSAGE 'You cannot have a 06 volume code without its' +
                ' corresponding 05 code'
        WITH STYLE = POPUP;
        RESUME FIELD question5;
    ENDIF;

    IF question8 = 'Y' AND question2 = 'N'
    THEN
        MESSAGE 'You cannot have a 08 volume code without its' +
                ' corresponding 02 code'
        WITH STYLE = POPUP;
        RESUME FIELD question2;
    ENDIF;

    IF question6 = 'N' AND question5 = 'Y' AND question4 = 'Y'
    THEN
        MESSAGE 'If you have both the 04 and the 05 Questions, you' +
                ' must have the corresponding 06 Question'
        WITH STYLE = POPUP;
        RESUME FIELD question6;
    ENDIF;

    IF question2 = 'Y'
    THEN
        h_quantity_required = 1;
    ELSE
        h_quantity_required = 0;
    ENDIF;

    IF question4 = 'Y'
    THEN
        h_quantity_required = 2;
    ENDIF;

    /*-s----------------------------------------------------------------
     Check if the 02 volume question already exists
    ----------------------------------------------------------------e-*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT question AS h_question
        FROM   question_library
        WHERE  question = :question + 1
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing question_library'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 0
    THEN
        MESSAGE 'The First Volume Question already exists for this' +
                ' Question. This Volume Question must be deleted' +
                ' before creating a Value Question'
        WITH STYLE = POPUP;
        RETURN 0;
    ENDIF;

    /*------------------------------------------------------------------
     Check if the 04 volume question already exists
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT question AS h_question
        FROM   question_library
        WHERE  question = :question + 3
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing question_library'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 0
    THEN
        MESSAGE 'The Second Volume Question already exists for this' +
                ' Question. This Volume Question must be deleted' +
                ' before creating a Value Question'
        WITH STYLE = POPUP;
        RETURN 0;
    ENDIF;

    /*-s----------------------------------------------------------------
     Create 01 Question
    ----------------------------------------------------------------e-*/

    ret_val = CALLPROC msaee_fp_cr_question (
              inquiry           = :inquiry,
              question_industry = :question_industry,
              question          = :question,
              brief_text        = :brief_text,
              uk_only           = :uk_only,
              owner_question    = :owner_question,
              h_quest_order     = :h_quest_order,
              period            = :period,
              volumes           = :h_quantity_required,
              h_rep_quest       = :rep_quest);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    /*-s----------------------------------------------------------------
     Create 02 Volume
    ----------------------------------------------------------------e-*/

    IF h_quantity_required > 0
    THEN
        unit_1 = '';
        ret_val = CALLFRAME msaee_fr_cr_quest_vols (
                  inquiry             = :inquiry,
                  question_industry   = :question_industry,
                  h_quest_order       = :h_quest_order,
                  uk_only             = :uk_only,
                  owner_question      = (:owner_question + 1),
                  unit_type_is_preset = 'N',
                  unit_1              = BYREF(:unit_1),
                  question            = :question + 1,
                  period              = :period);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    /*-s----------------------------------------------------------------
     Create 04 Volume
    ----------------------------------------------------------------e-*/

    IF h_quantity_required = 2
    THEN
        unit_2 = '';
        ret_val = CALLFRAME msaee_fr_cr_quest_vols (
                  inquiry             = :inquiry,
                  question_industry   = :question_industry,
                  h_quest_order       = :h_quest_order,
                  uk_only             = :uk_only,
                  owner_question      = (:owner_question + 3),
                  unit_type_is_preset = 'N',
                  unit_1              = BYREF(:unit_2),
                  question            = :question + 3,
                  period              = :period);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    /*-s----------------------------------------------------------------
     Create 05 Volume
    ----------------------------------------------------------------e-*/

    IF h_quantity_required > 0 AND question5 = 'Y'
    THEN
        ret_val = CALLFRAME msaee_fr_cr_quest_vols (
                  inquiry             = :inquiry,
                  question_industry   = :question_industry,
                  h_quest_order       = 1,
                  unit_type_is_preset = 'Y',
                  uk_only             = :uk_only,
                  owner_question      = (:owner_question + 4),
                  unit_1              = :unit_1,
                  question            = :question + 4,
                  period              = :period);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    /*-s----------------------------------------------------------------
     Create 06 Volume
    ----------------------------------------------------------------e-*/

    IF h_quantity_required = 2 AND question6 = 'Y'
    THEN
        ret_val = CALLFRAME msaee_fr_cr_quest_vols (
                  inquiry             = :inquiry,
                  question_industry   = :question_industry,
                  h_quest_order       = 1,
                  uk_only             = :uk_only,
                  owner_question      = (:owner_question + 5),
                  unit_type_is_preset = 'Y',
                  unit_1              = :unit_2,
                  question            = :question + 5,
                  period              = :period);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    /*-s----------------------------------------------------------------
     Create 08 Volume
    ----------------------------------------------------------------e-*/

    IF h_quantity_required > 0 AND question8 = 'Y'
    THEN
        ret_val = CALLFRAME msaee_fr_cr_quest_vols (
                  inquiry             = :inquiry,
                  question_industry   = :question_industry,
                  h_quest_order       = 1,
                  unit_type_is_preset = 'Y',
                  uk_only             = :uk_only,
                  owner_question      = (:owner_question + 7),
                  unit_1              = :unit_1,
                  question            = :question + 7,
                  period              = :period);

        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;


    /*----------------------------------------------------------
    get reason for change and update question_changes table
    -----------------------------------------------------------*/

    h_yesno = '';

    ret_val = CALLPROC msaee_fp_insert_q_changes (
	      question		= :question,
	      period		= :period,
	      h_yesno		= :h_yesno,		
	      h_prefix		= :h_prefix);

    IF ret_val <> 0
    THEN
	RETURN ret_val;
    ENDIF;

    IF ret_val = 9
    THEN 
        RETURN 9;
    ENDIF;

    MESSAGE 'Question creation completed OK' WITH STYLE = POPUP;

    CLEAR FIELD ALL;
    msa_date = 'now';

    question2 = 'N';
    question4 = 'N';
    question5 = 'N';
    question6 = 'N';
    question8 = 'N';

    rep_quest = 'N';
    uk_only   = 'Y';
    
    SET_FORMS FIELD '' (REVERSE(inquiry)= 0,
                        DISPLAYONLY(inquiry)= 0,
                        UNDERLINE(inquiry)= 1,
                        REVERSE(question_industry)= 0,
                        DISPLAYONLY(question_industry)= 0,
                        UNDERLINE(question_industry)= 1,
                        REVERSE(question)= 0,
                        DISPLAYONLY(question)= 0,
                        UNDERLINE(question)= 1,
                        REVERSE(brief_text)= 0,
                        DISPLAYONLY(brief_text)= 0,
                        UNDERLINE(brief_text)= 1,
                        REVERSE(period)= 0,
                        DISPLAYONLY(period)= 0,
                        UNDERLINE(period)= 1,
                        REVERSE(uk_only)= 1,
                        DISPLAYONLY(uk_only)= 1,
                        UNDERLINE(uk_only)= 0,
                        INVISIBLE(owner_question)= 1,
                        REVERSE(owner_question)= 0,
                        DISPLAYONLY(owner_question)= 0,
                        UNDERLINE(owner_question)= 1,
                        REVERSE(rep_quest)= 1,
                        DISPLAYONLY(rep_quest)= 1,
                        UNDERLINE(rep_quest)= 0); 
    RESUME FIELD period;

}

'End', KEY FRSKEY6 =
{
    RETURN 0;
}
