iNITIALIZE () =

DECLARE ret_val           = INTEGER4 NOT NULL,
        h_retries         = INTEGER1 NOT NULL,
        h_retries_allowed = INTEGER1 NOT NULL,
        h_retry_or_not    = CHAR(5)  NOT NULL,
        h_yesno           = CHAR(1)  NOT NULL,
        h_line_count      = INTEGER2 NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        lp_insert_row     = PROCEDURE RETURNING INTEGER,
        h_line_no         = INTEGER1 NOT NULL,
        h_text            = VARCHAR(62) NOT NULL,
        h_l1              = VARCHAR(62) NOT NULL,
        h_l2              = VARCHAR(62) NOT NULL,
        h_l3              = VARCHAR(62) NOT NULL,
        h_l4              = VARCHAR(62) NOT NULL,
        h_l5              = VARCHAR(62) NOT NULL,
        h_l6              = VARCHAR(62) NOT NULL,
        h_l7              = VARCHAR(62) NOT NULL,
        h_l8              = VARCHAR(62) NOT NULL,
        h_l9              = VARCHAR(62) NOT NULL,
        h_l10             = VARCHAR(62) NOT NULL,
        h_l11             = VARCHAR(62) NOT NULL

{
    msa_date = 'now';
    h_frpr_name = 'msaee_fr_up_note_text';
    h_retries_allowed = 3;

    MESSAGE 'Checking Note . . .';
    
    /*------------------------------------------------------------------
     Load the text
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        SELECT   note_text AS h_text,
                 line_no AS h_line_no
        FROM     note_text_line
        WHERE    note_code = :note_code
        AND      period    = :period
        ORDER BY h_line_no 
        {
            IF h_line_no = 1
            THEN
                line1 = :h_text;
            ELSEIF h_line_no = 2
            THEN
                line2 = :h_text;
            ELSEIF h_line_no = 3
            THEN
                line3 = :h_text;
            ELSEIF h_line_no = 4
            THEN
                line4 = :h_text;
            ELSEIF h_line_no = 5
            THEN
                line5 = :h_text;
            ELSEIF h_line_no = 6
            THEN
                line6 = :h_text;
            ELSEIF h_line_no = 7
            THEN
                line7 = :h_text;
            ELSEIF h_line_no = 8
            THEN
                line8 = :h_text;
            ELSEIF h_line_no = 9
            THEN
                line9 = :h_text;
            ELSEIF h_line_no = 10
            THEN
                line10 = :h_text;
            ELSEIF h_line_no = 11
            THEN
                line11 = :h_text;
            ENDIF;
        };

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing note_text_line'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'This Note does not exist for this Period'
        WITH STYLE = POPUP;
        RETURN 0;
    ENDIF;

    h_l1 = line1;
    h_l2 = line2;
    h_l3 = line3;
    h_l4 = line4;
    h_l5 = line5;
    h_l6 = line6;
    h_l7 = line7;
    h_l8 = line8;
    h_l9 = line9;
    h_l10 = line10;
    h_l11 = line11;
}

'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'HELP',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');

}

'Update', KEY FRSKEY4 =
{

    /*--------------------------------------------------------------
     Delete previous data
    --------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        DELETE FROM note_text_line
        WHERE       note_code = :note_code
        AND         period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in deleting from note_text_line'
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    /*------------------------------------------------------------------
      Find out last line
    ------------------------------------------------------------------*/

    IF     line11 <> '' THEN h_line_count = 11;
    ELSEIF line10 <> '' THEN h_line_count = 10;
    ELSEIF line9 <> '' THEN h_line_count = 9;
    ELSEIF line8 <> '' THEN h_line_count = 8;
    ELSEIF line7 <> '' THEN h_line_count = 7;
    ELSEIF line6 <> '' THEN h_line_count = 6;
    ELSEIF line5 <> '' THEN h_line_count = 5;
    ELSEIF line4 <> '' THEN h_line_count = 4;
    ELSEIF line3 <> '' THEN h_line_count = 3;
    ELSEIF line2 <> '' THEN h_line_count = 2;
    ELSE h_line_count = 1; 
    ENDIF;

    /*------------------------------------------------------------------
      Insert each line
    ------------------------------------------------------------------*/

    IF h_line_count >= 1
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 1,
                  lp_text    = line1);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 2
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 2,
                  lp_text    = line2);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 3
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 3,
                  lp_text    = line3);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 4
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 4,
                  lp_text    = line4);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 5
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 5,
                  lp_text    = line5);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 6
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 6,
                  lp_text    = line6);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 7
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 7,
                  lp_text    = line7);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 8
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 8,
                  lp_text    = line8);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 9
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 9,
                  lp_text    = line9);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 10
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 10,
                  lp_text    = line10);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    IF h_line_count >= 11
    THEN
        ret_val = CALLPROC lp_insert_row (
                  lp_line_no = 11,
                  lp_text    = line11);
        IF ret_val <> 0
        THEN
            RETURN ret_val;
        ENDIF;
    ENDIF;

    /*--------------------------------------------------------------
     Update table form_note_text
    --------------------------------------------------------------*/

    /* check if this is a new note or an existing note */

    IF length(h_l1) < 4 
    THEN

	h_retry_or_not      = 'RETRY';
	h_retries           = 0;

	WHILE :h_retries < h_retries_allowed
        AND :h_retry_or_not = 'RETRY'
	DO
    	    h_retries = :h_retries + 1;

            INSERT INTO form_note_text
       		(note_code,
		period,
		line_no,
		line_count,
		text1,
		text2,
		text3,
		text4,
		text5,
		text6,
		text7,
		text8,
		text9,
		text10,
		text11)
            VALUES
       		(:note_code,
		:period,
		1,
		:h_line_count,
		:line1,
		:line2,
		:line3,
		:line4,
		:line5,
		:line6,
		:line7,
		:line8,
		:line9,
		:line10,
		:line11);

            ret_val = CALLPROC check_inq_ing (
                      h_num_row_ck      = 1,
                      h_commit          = 'Y',
                      h_rollback        = 'N',
                      h_retries         = :h_retries,
                      h_retries_allowed = :h_retries_allowed,
                      h_frpr_name       = :h_frpr_name);
   
            IF ret_val <> 7
            THEN
                h_retry_or_not = '';
            ENDIF;
  
         ENDWHILE;
   
         IF ret_val = 7
         THEN
             RETURN 7;
   
         ELSEIF ret_val = 9
         THEN
             MESSAGE 'System error in inserting into form_note_text'
             WITH STYLE = POPUP;
   
	     RETURN 9;
   
         ELSEIF ret_val = 1
         THEN
             MESSAGE 'No rows inserted into form_note_text'
             WITH STYLE = POPUP;
             RETURN 9;
         ENDIF;

    ELSE

	h_retry_or_not      = 'RETRY';
	h_retries           = 0;

	WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
	DO

	    h_retries = :h_retries + 1;


	    UPDATE form_note_text
	    SET line_count	= :h_line_count,
		text1		= :line1,
		text2		= :line2,
		text3		= :line3,
		text4		= :line4,
		text5		= :line5,
		text6		= :line6,
		text7		= :line7,
		text8		= :line8,
		text9		= :line9,
		text10		= :line10,
		text11		= :line11

	    WHERE note_code     = :note_code
	    AND   period        = :period;

	    ret_val = CALLPROC check_inq_ing (
		      h_num_row_ck      = 1,
		      h_commit          = 'Y',
		      h_rollback        = 'N',
		      h_retries         = :h_retries,
		      h_retries_allowed = :h_retries_allowed,
		      h_frpr_name       = :h_frpr_name);

	    IF ret_val <> 7
	    THEN
		h_retry_or_not = '';
	    ENDIF;

	ENDWHILE;

	IF ret_val = 7
	THEN
	    RETURN 7;

	ELSEIF ret_val = 9
	THEN
	    MESSAGE 'System error in updating form_note_text'
	    WITH STYLE = POPUP;
	    RETURN 9;

	ELSEIF ret_val = 1
	THEN
	    MESSAGE 'No rows updated on form_note_text'
	    WITH STYLE = POPUP;
	    RETURN 9;
	ENDIF;

    ENDIF;

    /*------------------------------------------------------------------
      Update line_count
    ------------------------------------------------------------------*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        UPDATE note
        SET    line_count = :h_line_count
        WHERE  note_code = :note_code
        AND    period = :period;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in updating note'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No rows updated on note'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    h_l1 = line1;
    h_l2 = line2;
    h_l3 = line3;
    h_l4 = line4;
    h_l5 = line5;
    h_l6 = line6;
    h_l7 = line7;
    h_l8 = line8;
    h_l9 = line9;
    h_l10 = line10;
    h_l11 = line11;

    MESSAGE 'Note Text Saved OK' WITH STYLE = POPUP;

}

'End', KEY FRSKEY6 =
{
    IF h_l1 <> line1
    OR h_l2 <> line2
    OR h_l3 <> line3
    OR h_l4 <> line4
    OR h_l5 <> line5
    OR h_l6 <> line6
    OR h_l7 <> line7
    OR h_l8 <> line8
    OR h_l9 <> line9
    OR h_l10 <> line10
    OR h_l11 <> line11
    THEN
        h_yesno = '';
        WHILE h_yesno <> 'y' AND h_yesno <> 'n'
        DO
            h_yesno = PROMPT 'Do you really wish to end without saving' +
                             ' any details? Type Y/N and press <return>'
                      WITH STYLE = POPUP;
            h_yesno = LOWERCASE(:h_yesno);
        ENDWHILE;
   
        IF h_yesno = 'n'
        THEN
            RESUME;
        ENDIF;
    ENDIF;

    RETURN 0;
}

/*------------------------------------------------------------------
               L O C A L   P R O C E D U R E
------------------------------------------------------------------*/

PROCEDURE lp_insert_row (

    lp_line_no = INTEGER1 NOT NULL,
    lp_text    = CHAR(62) NOT NULL) =

{

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        INSERT INTO note_text_line (
                    note_code,
                    period,
                    line_no,
                    note_text)
        VALUES (    :note_code,
                    :period,
                    lp_line_no,
                    lp_text);

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in inserting line ' + ASCII(lp_line_no)
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No rows inserted for line ' + ASCII(lp_line_no)
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    RETURN 0;

}
