INITIALIZE () =

DECLARE h_retries_allowed = INTEGER1 NOT NULL,
        h_retries         = INTEGER1 NOT NULL,
        h_retry_or_not    = CHAR(5) NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        h_reference       = CHAR(11) NOT NULL,
        h_yesno           = CHAR(1) NOT NULL,
        h_field_name      = VARCHAR(24) NOT NULL,
        h_rows            = INTEGER4 NOT NULL,
        h_record          = INTEGER4 NOT NULL,
        ret_val           = INTEGER1 NOT NULL,
        lp_load_table     = PROCEDURE RETURNING INTEGER

{
    h_retries_allowed = 3;
    h_frpr_name = 'msafd_fr_reclass_stop';
    msa_date = 'now';
    SET_FORMS FIELD '' (MODE(tf) = 'READ');

    ret_val = CALLPROC lp_load_table ();
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;
}

'Help', KEY FRSKEY1 =
{
    HELP_FORMS(SUBJECT = 'HELP',
               FILE = :g_help + '/' + :h_frpr_name + '.hlp');
}

'Insert' =
{
    h_reference = '';

    ret_val = CALLFRAME msafd_fr_reclass_ins (
              contributor_reference = BYREF(h_reference),
              insert_or_amend       = 'i');
    IF ret_val <> 0
    THEN
        RESUME;
    ENDIF;
    
    ret_val = CALLPROC lp_load_table ();
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    UNLOADTABLE tf (h_record = _record)
    {
        IF tf.contributor_reference = h_reference
        THEN
            SCROLL tf TO h_record;
            ENDLOOP;
        ENDIF;
    };
}

'Amend' =
{
    INQUIRE_FORMS FORM (h_field_name = FIELD);

    IF :h_field_name <> 'tf'
    THEN
        MESSAGE 'Please highlight the required Contributor'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    INQUIRE_FORMS TABLE '' (h_rows = DATAROWS(tf));

    IF :h_rows = 0
    THEN
        MESSAGE 'Please highlight the required Contributor'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    ret_val = CALLPROC msa_fp_industry_responsibility
            ( p_industry  = :tf.contributor_industry,
              p_reference = :tf.contributor_reference);

    IF ret_val = 9
    THEN
      RETURN 9;
    ENDIF;

    IF ret_val <> 0
    THEN
        RESUME;
    ENDIF;

    h_reference = :tf.contributor_reference;

    ret_val = CALLFRAME msafd_fr_reclass_ins (
              contributor_reference = BYREF(h_reference),
              insert_or_amend       = 'a');
    IF ret_val <> 0
    THEN
        RESUME;
    ENDIF;

    ret_val = CALLPROC lp_load_table ();
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    UNLOADTABLE tf (h_record = _record)
    {
        IF tf.contributor_reference = h_reference
        THEN
            SCROLL tf TO h_record;
            RESUME;
        ENDIF;
    };
}

'Delete' =
{
    INQUIRE_FORMS FORM (h_field_name = FIELD);

    IF :h_field_name <> 'tf'
    THEN
        MESSAGE 'Please highlight the required Contributor'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    INQUIRE_FORMS TABLE '' (h_rows = DATAROWS(tf));

    IF :h_rows = 0
    THEN
        MESSAGE 'Please highlight the required Contributor'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    ret_val = CALLPROC msa_fp_industry_responsibility
            ( p_industry  = :tf.contributor_industry,
              p_reference = :tf.contributor_reference);

    IF ret_val = 9
    THEN
      RETURN 9;
    ENDIF;

    IF ret_val <> 0
    THEN
        RESUME;
    ENDIF;

    h_yesno = '';
    WHILE h_yesno <> 'y' AND h_yesno <> 'n'
    DO
        h_yesno = PROMPT 'Do you really wish to delete this entry?' +
                         ' Type Y/N and press <return>'
                  WITH STYLE = POPUP;
        h_yesno = LOWERCASE(:h_yesno);
    ENDWHILE;

    IF h_yesno = 'n'
    THEN
        RESUME;
    ENDIF;

    MESSAGE 'Deleting Contributor . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        DELETE FROM reclass_exclusions
        WHERE       contributor_reference = :tf.contributor_reference;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in deleting from reclass_exclusions'
        WITH STYLE = POPUP;
        RETURN 9;

    ELSEIF ret_val = 1
    THEN
        MESSAGE 'No rows deleted from reclass_exclusions'
        WITH STYLE = POPUP;
        RETURN 9;
    ENDIF;

    h_record = :tf._record;

    ret_val = CALLPROC lp_load_table ();
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    IF h_record > no_contributors
    THEN
        h_record = no_contributors;
    ENDIF;

    SCROLL tf TO h_record;

    MESSAGE 'Please make a note of this deletion in ''Contact Details'''
    WITH STYLE = POPUP;     
}

'ContactDetails' =
{
    INQUIRE_FORMS FORM (h_field_name = FIELD);

    IF :h_field_name <> 'tf'
    THEN
        MESSAGE 'Please highlight the required Contributor'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    INQUIRE_FORMS TABLE '' (h_rows = DATAROWS(tf));

    IF :h_rows = 0
    THEN
        MESSAGE 'Please highlight the required Contributor'
        WITH STYLE = POPUP;
        RESUME;
    ENDIF;

    CALL APPLICATION(exec = '$IMAGES/communicate -numeric_overflow=ignore ',
         param = VARCHAR(:tf.contributor_reference));

}

'End', KEY FRSKEY6 =
{
    RETURN 0;
}

/*----------------------------------------------------------------------
                     L O C A L   P R O C E D U R E
----------------------------------------------------------------------*/

PROCEDURE lp_load_table () =
{
    MESSAGE 'Selecting Data . . .';

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
    DO

        h_retries = :h_retries + 1;

        tf =

        SELECT   contributor_reference,
                 contributor_industry,
                 time,
                 reason
        FROM     reclass_exclusions
        ORDER BY contributor_industry,
                 contributor_reference;

        ret_val = CALLPROC check_inq_ing (
                  h_num_row         = BYREF(no_contributors),
                  h_num_row_ck      = 1,
                  h_commit          = 'Y',
                  h_rollback        = 'N',
                  h_retries         = :h_retries,
                  h_retries_allowed = :h_retries_allowed,
                  h_frpr_name       = :h_frpr_name);

        IF ret_val <> 7
        THEN
            h_retry_or_not = '';
        ENDIF;

    ENDWHILE;

    IF ret_val = 7
    THEN
        RETURN 7;

    ELSEIF ret_val = 9
    THEN
        MESSAGE 'System error in accessing reclass_exclusions'
        WITH STYLE = POPUP;
        RETURN 9;

    ENDIF;

    RETURN 0;
}
