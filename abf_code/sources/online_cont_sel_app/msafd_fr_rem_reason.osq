/*-s--------------------------------------------------------------------
Get reason for removal
--------------------------------------------------------------------e-*/

INITIALIZE (p_reason = CHAR(40) NOT NULL) =

DECLARE 
  h_retries_allowed = INTEGER1 NOT NULL,
  h_retries         = INTEGER1 NOT NULL,
  h_retry_or_not    = CHAR(5) NOT NULL,
  h_frpr_name       = VARCHAR(24) NOT NULL,
  h_return           = INTEGER1 NOT NULL

{
  h_frpr_name       = 'msafd_fr_rem_reason';
  h_retries_allowed = 3;
  msa_date          = 'now';

  SET_FORMS FIELD '' (MODE(tf) = 'READ');

  h_retry_or_not      = 'RETRY';
  h_retries           = 0;

  WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
  DO

    h_retries = :h_retries + 1;

    tf =

    SELECT   reason
    FROM     removal_reasons
    ORDER BY reason;

    h_return = CALLPROC check_inq_ing 
             ( h_num_row_ck      = 1,
               h_commit          = 'Y',
               h_rollback        = 'N',
               h_retries         = :h_retries,
               h_retries_allowed = :h_retries_allowed,
               h_frpr_name       = :h_frpr_name);

    IF h_return != 7
    THEN
      h_retry_or_not = '';
    ENDIF;

  ENDWHILE;

  IF h_return != 0
  THEN
    MESSAGE 'ERROR: Failed to load removal reasons for display. '
          + 'Error code ' +VARCHAR(:h_return) +'. '
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
    RETURN 9;
  ENDIF;

}


'Select', KEY FRSKEY4 =
{
  IF tf.reason = 'OTHER'
  THEN
    h_return = CALLFRAME msafd_fr_rem_other (s_reason = BYREF(:p_reason));
  ELSE
    p_reason = :tf.reason;
  ENDIF;

  RETURN 0;

}

'Abort', KEY FRSKEY14 =
{
  /* Returning 1 to avoid triggering the deselection with no reason given. */
  RETURN 1;
}
