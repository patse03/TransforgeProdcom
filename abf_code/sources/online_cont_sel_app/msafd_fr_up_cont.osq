/*----------------------------------------------------------------------
  Updating contributor non-periodic data
----------------------------------------------------------------------*/

INITIALIZE () =

DECLARE h_return               = INTEGER4 NOT NULL,
        h_retries             = INTEGER1 NOT NULL,
        h_retries_allowed     = INTEGER1 NOT NULL,
        h_frpr_name           = VARCHAR(24) NOT NULL,
        h_retry_or_not        = CHAR(5)  NOT NULL,
        h_output_category     = CHAR(1)  NOT NULL,
        h_region              = CHAR(2)  NOT NULL,
        h_keyresp             = INTEGER1 NOT NULL,
        h_inquiry             = INTEGER1 NOT NULL,
        h_display             = INTEGER1 NOT NULL,
        h_addressee           = CHAR(30) NOT NULL,
        h_add_name1           = CHAR(35) NOT NULL,
        h_add_name2           = CHAR(35) NOT NULL,
        h_add_name3           = CHAR(35) NOT NULL,
        h_add_tradstyle1      = CHAR(35) NOT NULL,
        h_add_tradstyle2      = CHAR(35) NOT NULL,
        h_add_tradstyle3      = CHAR(35) NOT NULL,
        h_add_line1           = CHAR(30) NOT NULL,
        h_add_line2           = CHAR(30) NOT NULL,
        h_add_line3           = CHAR(30) NOT NULL,
        h_add_line4           = CHAR(30) NOT NULL,
        h_add_line5           = CHAR(30) NOT NULL,
        h_add_postcode        = CHAR(8) NOT NULL,
        h_phone_contact       = CHAR(30) NOT NULL,
        h_phone_area_code     = CHAR(5) NOT NULL,
        h_phone               = CHAR(10) NOT NULL,
        h_phone_extension     = CHAR(5) NOT NULL,
        h_fax_area_code       = CHAR(5) NOT NULL,
        h_fax                 = CHAR(10) NOT NULL,
        h_email               = CHAR(50) NOT NULL,
        h_period              = INTEGER4 NOT NULL,
        h_character           = CHAR(1) NOT NULL,
        h_test_string         = VARCHAR(30) NOT NULL,
        h_counter             = INTEGER1 NOT NULL,
        h_idbr                = CHAR(11) NOT NULL,
        h_dummy               = CHAR(11) NOT NULL,
        h_text                = CHAR(35) NOT NULL,
        h_yesno               = CHAR(1) NOT NULL,
        h_param_list          = VARCHAR(100) NOT NULL,
        h_param1              = CHAR(11) NOT NULL,
        h_varchar_variable    = VARCHAR(100) NOT NULL,
        h_integer_variable    = INTEGER2 NOT NULL,

        lp_full_error_check   = PROCEDURE RETURNING INTEGER,
        lp_load_contributor   = PROCEDURE RETURNING INTEGER,
        lp_store_fields       = PROCEDURE RETURNING NONE

{
  msa_date = 'now';
  h_frpr_name = 'msafd_fr_up_cont';
  h_retries_allowed = 3;

  SET_FORMS FRS (MAPFILE='/home/prodcom/admin/prodcom.map');

  /*----------------------------------------------------------------------
       Access check. (Error messages handled by procedure.)
  ----------------------------------------------------------------------*/
  
  h_return = CALLPROC check_access_frames (p_frpr_name = :h_frpr_name);

  IF h_return = 1 
  THEN
    RETURN 0;
  ELSEIF h_return > 1
  THEN
    RETURN 9;
  ENDIF;

  s_enforcement = 'UNDER ENFORCEMENT';
  s_key         = 'KEY';
  s_deselected  = 'DESELECTED';
  
  SET_FORMS FIELD '' (INVISIBLE(s_enforcement)=1,
                      INVISIBLE(s_country)=1,
                      INVISIBLE(s_key) = 1,
                      INVISIBLE(s_deselected) = 1,
                      INVISIBLE(s_period) = 0,
                      UNDERLINE(s_period)= 0,
                      REVERSE(s_period)= 0,
                      INVISIBLE(s_industry)= 0,
                      DISPLAYONLY(s_contributor_reference)=0,
                      REVERSE(s_contributor_reference)=0,
                      UNDERLINE(s_contributor_reference)=1);

  h_param_list = CALLPROC CommandLineParameters ();

  h_varchar_variable = SQUEEZE(h_param_list);
  h_integer_variable = LOCATE(h_varchar_variable, ' ');
  h_param1           = LEFT(h_varchar_variable, h_integer_variable-1);

  IF :h_param1 != ''
  THEN
    s_contributor_reference = :h_param1;

    h_return = CALLPROC lp_load_contributor ();

    IF h_return != 0
    THEN

      IF h_return != 1
      THEN
        RETURN h_return;
      ELSE
        RESUME FIELD s_contributor_reference;
      ENDIF;

    ENDIF;


    RESUME FIELD s_addressee;

  ENDIF;
}

/*************************** FIELD ACTIVATIONS ****************************/

FIELD s_contributor_reference =
{
  MESSAGE 'Checking Contributor . . .';

  h_return = CALLPROC lp_load_contributor ();

  IF h_return != 0
  THEN

    IF h_return != 1
    THEN
      RETURN h_return;
    ELSE
      RESUME FIELD s_contributor_reference;
    ENDIF;

  ENDIF;

  RESUME FIELD s_addressee;

}

/**************************** KEY ACTIVATIONS ****************************/

'Update', KEY FRSKEY4 =
{

  INQUIRE_FORMS FIELD '' (h_display = DISPLAYONLY(s_contributor_reference));

  IF :h_display = 0
  THEN
    MESSAGE 'WARNING: Please enter a valid contributor reference.'
    WITH STYLE = POPUP;
    RESUME FIELD s_contributor_reference;
  ENDIF;

  IF s_add_name1 = ''
  THEN
    MESSAGE 'WARNING: Contributor name is a mandatory field. '
          + 'Please complete it before continuing.'
    WITH STYLE = POPUP;
    RESUME FIELD s_add_name1;
  ENDIF;

  IF s_add_line1 = '' 
  OR s_add_line2 = ''
  THEN
    MESSAGE 'WARNING: At least two lines of the contributors postal address '
          + 'are required. Please complete them before continuing.'
    WITH STYLE = POPUP;
    RESUME FIELD s_add_line1;
  ENDIF;

  /*------------------------------------------------------------------
    Prevent any non-numeric or non-space characters from corrupting 
    the phone and fax numbers
  ------------------------------------------------------------------*/

  s_phone_area_code = SQUEEZE(s_phone_area_code);
  h_test_string = '';
  h_counter = 1;

  WHILE h_counter <= LENGTH(s_phone_area_code)
  DO

    h_character = CHAREXTRACT(s_phone_area_code,h_counter);

    IF LOCATE('0123456789',h_character) < 11
    THEN
      h_test_string = h_test_string + h_character;
    ENDIF;

    h_counter = h_counter + 1;

  ENDWHILE; 

  s_phone_area_code = h_test_string;

  s_phone = SQUEEZE(s_phone);
  h_test_string = '';
  h_counter = 1;

  WHILE h_counter <= LENGTH(s_phone)
  DO

    h_character = CHAREXTRACT(s_phone,h_counter);

    IF LOCATE('0123456789',h_character) < 11
    THEN
      h_test_string = h_test_string + h_character;
    ENDIF;

    h_counter = h_counter + 1;

  ENDWHILE; 

  s_phone = h_test_string;


  s_phone_extension = SQUEEZE(s_phone_extension);
  h_test_string = '';
  h_counter = 1;

  WHILE h_counter <= LENGTH(s_phone_extension)
  DO

    h_character = CHAREXTRACT(s_phone_extension,h_counter);

    IF LOCATE('0123456789',h_character) < 11
    THEN
      h_test_string = h_test_string + h_character;
    ENDIF;

    h_counter = h_counter + 1;

  ENDWHILE; 

  s_phone_extension = h_test_string;

  s_fax_area_code = SQUEEZE(s_fax_area_code);
  h_test_string = '';
  h_counter = 1;

  WHILE h_counter <= LENGTH(s_fax_area_code)
  DO

    h_character = CHAREXTRACT(s_fax_area_code,h_counter);

    IF LOCATE('0123456789',h_character) < 11
    THEN
      h_test_string = h_test_string + h_character;
    ENDIF;

    h_counter = h_counter + 1;

  ENDWHILE; 

  s_fax_area_code = h_test_string;


  s_fax = SQUEEZE(s_fax);
  h_test_string = '';
  h_counter = 1;

  WHILE h_counter <= LENGTH(s_fax)
  DO

    h_character = CHAREXTRACT(s_fax,h_counter);

    IF LOCATE('0123456789',h_character) < 11
    THEN
      h_test_string = h_test_string + h_character;
    ENDIF;

    h_counter = h_counter + 1;

  ENDWHILE; 

  s_fax = h_test_string;

  REDISPLAY;

  h_retry_or_not      = 'RETRY';
  h_retries           = 0;

  WHILE (:h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY')
  DO
    h_retries = :h_retries + 1;

    UPDATE contributor
    SET    addressee          = :s_addressee,
           add_name1          = :s_add_name1,
           add_name2          = :s_add_name2,
           add_name3          = :s_add_name3,
           add_line1          = :s_add_line1,
           add_line2          = :s_add_line2,
           add_line3          = :s_add_line3,
           add_line4          = :s_add_line4,
           add_line5          = :s_add_line5,
           add_tradstyle1     = :s_add_tradstyle1,
           add_tradstyle2     = :s_add_tradstyle2,
           add_tradstyle3     = :s_add_tradstyle3,
           phone_contact      = :s_phone_contact,
           add_postcode       = :s_add_postcode,
           phone_area_code    = :s_phone_area_code,
           phone              = :s_phone,
           phone_extension    = :s_phone_extension,
           fax_area_code      = :s_fax_area_code,
           fax                = :s_fax,
           email              = :s_email
    WHERE  contributor_reference  = :s_contributor_reference;

    h_return = CALLPROC lp_full_error_check(p_num_row_ck = 1);

    IF h_return != 7
    THEN
      h_retry_or_not = '';
    ENDIF;

  ENDWHILE;

  IF h_return != 0
  THEN
    MESSAGE 'ERROR: Failed to update contributor details. '
          + 'Error code ' +VARCHAR(:h_return) +'. '
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
    RETURN 9;
  ENDIF;

  MESSAGE 'NOTE: Contributor details updated successfully.'
  WITH STYLE = POPUP;

  CALLPROC lp_store_fields ();

}

'Clear', KEY FRSKEY12 =
{
  IF :h_addressee           != :s_addressee
  OR :h_add_name1           != :s_add_name1
  OR :h_add_name2           != :s_add_name2
  OR :h_add_name3           != :s_add_name3
  OR :h_add_tradstyle1      != :s_add_tradstyle1
  OR :h_add_tradstyle2      != :s_add_tradstyle2
  OR :h_add_tradstyle3      != :s_add_tradstyle3
  OR :h_add_line1           != :s_add_line1
  OR :h_add_line2           != :s_add_line2
  OR :h_add_line3           != :s_add_line3
  OR :h_add_line4           != :s_add_line4
  OR :h_add_line5           != :s_add_line5
  OR :h_add_postcode        != :s_add_postcode
  OR :h_phone_contact       != :s_phone_contact
  OR :h_phone_area_code     != :s_phone_area_code
  OR :h_phone               != :s_phone
  OR :h_phone_extension     != :s_phone_extension
  OR :h_fax_area_code       != :s_fax_area_code
  OR :h_fax                 != :s_fax
  OR :h_email               != :s_email
  THEN

    h_yesno = '';

    WHILE h_yesno != 'Y' AND h_yesno != 'N'
    DO
      h_yesno = PROMPT 'WARNING: Changes have not been saved. '
                     + 'Do you wish to clear the screen without updating '
                     + 'the contributors details? [Y/N] : '
                WITH STYLE = POPUP;

      h_yesno = UPPER(h_yesno);

    ENDWHILE;

    IF h_yesno = 'N'
    THEN
      RESUME FIELD s_addressee;
    ENDIF;

  ENDIF;

  CLEAR FIELD ALL;

  msa_date = 'now';

  s_enforcement = 'UNDER ENFORCEMENT';
  s_deselected  = 'DESELECTED';
  s_key         = 'KEY';
  
  SET_FORMS FIELD '' (INVISIBLE(s_enforcement)=1,
                      INVISIBLE(s_country)=1,
                      INVISIBLE(s_key) = 1,
                      INVISIBLE(s_deselected) = 1,
                      INVISIBLE(s_period) = 0,
                      UNDERLINE(s_period)= 0,
                      REVERSE(s_period)= 0,
                      INVISIBLE(s_industry)= 0,
                      DISPLAYONLY(s_contributor_reference)=0,
                      REVERSE(s_contributor_reference)=0,
                      UNDERLINE(s_contributor_reference)=1);

  CALLPROC lp_store_fields ();

}

'End', KEY FRSKEY14 =
{
  IF :h_addressee           != :s_addressee
  OR :h_add_name1           != :s_add_name1
  OR :h_add_name2           != :s_add_name2
  OR :h_add_name3           != :s_add_name3
  OR :h_add_tradstyle1      != :s_add_tradstyle1
  OR :h_add_tradstyle2      != :s_add_tradstyle2
  OR :h_add_tradstyle3      != :s_add_tradstyle3
  OR :h_add_line1           != :s_add_line1
  OR :h_add_line2           != :s_add_line2
  OR :h_add_line3           != :s_add_line3
  OR :h_add_line4           != :s_add_line4
  OR :h_add_line5           != :s_add_line5
  OR :h_add_postcode        != :s_add_postcode
  OR :h_phone_contact       != :s_phone_contact
  OR :h_phone_area_code     != :s_phone_area_code
  OR :h_phone               != :s_phone
  OR :h_phone_extension     != :s_phone_extension
  OR :h_fax_area_code       != :s_fax_area_code
  OR :h_fax                 != :s_fax
  OR :h_email               != :s_email
  THEN

    h_yesno = '';

    WHILE h_yesno != 'Y' AND h_yesno <> 'N'
    DO
      h_yesno = PROMPT 'WARNING: Changes have not been saved. '
                     + 'Do you wish to exit without updating the '
                     + 'contributors details? [Y/N] : '
                WITH STYLE = POPUP;

      h_yesno = UPPER(h_yesno);

    ENDWHILE;

    IF h_yesno = 'N'
    THEN
      RESUME FIELD s_addressee;
    ENDIF;

  ENDIF;

  RETURN 0;

}

/**************************** LOCAL PROCEDURES ******************************/

/*===========================================================================
    Local procedure to load contributor data to screen fields.
===========================================================================*/

PROCEDURE lp_load_contributor () =

DECLARE   lp_return   = INTEGER4  NOT NULL WITH DEFAULT,

{

  h_retry_or_not      = 'RETRY';
  h_retries           = 0;

  WHILE (:h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY')
  DO

    h_retries = :h_retries + 1;

    SELECT addressee       AS s_addressee,
           add_name1       AS s_add_name1,
           add_name2       AS s_add_name2,
           add_name3       AS s_add_name3,
           add_line1       AS s_add_line1,
           add_line2       AS s_add_line2,
           add_line3       AS s_add_line3,
           add_line4       AS s_add_line4,
           add_line5       AS s_add_line5,
           add_postcode    AS s_add_postcode,
           add_tradstyle1  AS s_add_tradstyle1,
           add_tradstyle2  AS s_add_tradstyle2,
           add_tradstyle3  AS s_add_tradstyle3,
           phone_contact   AS s_phone_contact,
           addressee       AS s_addressee,
           phone_area_code AS s_phone_area_code,
           phone           AS s_phone,
           phone_extension AS s_phone_extension,
           fax_area_code   AS s_fax_area_code,
           fax             AS s_fax,
           email           AS s_email
    FROM   contributor
    WHERE  contributor_reference = :s_contributor_reference;

    lp_return = CALLPROC lp_full_error_check(p_num_row_ck = 1);

    IF lp_return != 7
    THEN
      h_retry_or_not = '';
    ENDIF;

  ENDWHILE;

  IF lp_return = 1
  THEN
    MESSAGE 'ERROR: This contributor does not exist on the ProdCom system. '
          + 'Please try again or exit the screen.'
    WITH STYLE = POPUP;
    RETURN 1;
  ELSEIF lp_return > 1
  THEN
    MESSAGE 'ERROR: Failed to select contributor details. '
          + 'Error code ' +VARCHAR(:lp_return) +'. '
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
    RETURN :lp_return;
  ENDIF;

  /*-----------------------------------------------------------------------
     Calculate current data period for comparison.
  -----------------------------------------------------------------------*/

  h_period = (DATE_PART('year','now') *100)-100;

  /*-----------------------------------------------------------------------
     Get latest periodic details if available and set screamer fields
     as apropriate.
  -----------------------------------------------------------------------*/

  lp_return = CALLPROC msa_fp_latest_details 
            ( p_contributor_reference = :s_contributor_reference,
              p_output_category       = BYREF(:h_output_category),
              p_contributor_industry  = BYREF(:s_industry),
              p_period                = BYREF(:s_period),
              p_region                = BYREF(:h_region),
              p_keyresp               = BYREF(:h_keyresp));

  IF lp_return = 1
  THEN
    SET_FORMS FIELD '' (INVISIBLE(s_deselected)= 0,
                        INVISIBLE(s_industry)= 1,
                        INVISIBLE(s_period)= 1);
  ELSEIF lp_return > 1
  THEN
    /* Error message handled in external procedure */
    RETURN :lp_return;
  ENDIF;

  IF h_period > :s_period
  THEN

    SET_FORMS FIELD '' (UNDERLINE(s_period)= 1,
                        REVERSE(s_period)= 1);

    /*.......................................................................
       Check if deselection occurred after last recorded period.
    .......................................................................*/

    h_retry_or_not      = 'RETRY';
    h_retries           = 0;

    WHILE (:h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY')
    DO

      h_retries = :h_retries + 1;

      SELECT contributor_reference AS h_dummy
      FROM   removed_contrib_period
      WHERE  period > :s_period;
       
      lp_return = CALLPROC lp_full_error_check(p_num_row_ck = 0);

      IF lp_return != 7
      THEN
        h_retry_or_not = '';
      ENDIF;

    ENDWHILE;

    IF lp_return = 1
    THEN
      SET_FORMS FIELD '' (INVISIBLE(s_deselected)= 0);
    ELSEIF lp_return > 1
    THEN
      MESSAGE 'ERROR: Failed to select from removed contributor period data. '
            + 'Error code ' +VARCHAR(:lp_return) +'. '
            + 'Please contact IM immediately.'
      WITH STYLE = POPUP;
      RETURN :lp_return;
    ENDIF;
    
  ENDIF;


  IF :h_output_category = 'Y'
  THEN
    SET_FORMS FIELD '' (INVISIBLE(s_enforcement)= 0);
  ELSE
    SET_FORMS FIELD '' (INVISIBLE(s_enforcement)= 1);
  ENDIF;
    
  h_retry_or_not      = 'RETRY';
  h_retries           = 0;
    
  WHILE :h_retries < h_retries_allowed AND :h_retry_or_not = 'RETRY'
  DO
    
    h_retries = :h_retries + 1;
    
    SELECT country AS s_country
    FROM   region
    WHERE  region = :h_region;
    
    lp_return = CALLPROC lp_full_error_check(p_num_row_ck = 1);
    
    IF lp_return != 7
    THEN
      h_retry_or_not = '';
    ENDIF;
    
  ENDWHILE;
    
  IF lp_return > 1
  THEN
    MESSAGE 'ERROR: Failed to select contributors country. '
          + 'Error code ' +VARCHAR(:lp_return) +'. '
          + 'Please contact IM immediately.'
    WITH STYLE = POPUP;
    RETURN :lp_return;
  ENDIF;

  IF s_country != ''
  THEN
    SET_FORMS FIELD '' (INVISIBLE(s_country) = 0);
  ELSE
    SET_FORMS FIELD '' (INVISIBLE(s_country) = 1);
  ENDIF;
    
  IF :h_keyresp = 1
  THEN
    SET_FORMS FIELD '' (INVISIBLE(s_key) = 0);
  ELSE
    SET_FORMS FIELD '' (INVISIBLE(s_key) = 1);
  ENDIF;

  /*------------------------------------------------------------------------
      Lock contributor reference and save screen field values for
      later comparison.    
  ------------------------------------------------------------------------*/

  SET_FORMS FIELD ''  (DISPLAYONLY(s_contributor_reference)=1,
                       UNDERLINE(s_contributor_reference)=0,
                       REVERSE(s_contributor_reference)=1);
  REDISPLAY;

  CALLPROC lp_store_fields ();

  RETURN 0;

}

/*=========================================================================
    Local procedure to store on screen data for later comparison.
=========================================================================*/

PROCEDURE lp_store_fields () =
{

    h_addressee           = s_addressee;
    h_add_name1           = s_add_name1;
    h_add_name2           = s_add_name2;
    h_add_name3           = s_add_name3;
    h_add_tradstyle1      = s_add_tradstyle1;
    h_add_tradstyle2      = s_add_tradstyle2;
    h_add_tradstyle3      = s_add_tradstyle3;
    h_add_line1           = s_add_line1;
    h_add_line2           = s_add_line2;
    h_add_line3           = s_add_line3;
    h_add_line4           = s_add_line4;
    h_add_line5           = s_add_line5;
    h_add_postcode        = s_add_postcode;
    h_phone_contact       = s_phone_contact;
    h_phone_area_code     = s_phone_area_code;
    h_phone               = s_phone;
    h_phone_extension     = s_phone_extension;
    h_fax_area_code       = s_fax_area_code;
    h_fax                 = s_fax;
    h_email               = s_email;

    RETURN;

}


/*=======================================================================
    Local procedure to fully check sql for errors during online programs.
    Committed, no rollback.
=======================================================================*/

PROCEDURE lp_full_error_check (p_num_row_ck = INTEGER4 NOT NULL WITH DEFAULT) =

DECLARE   lp_return   = INTEGER4  NOT NULL WITH DEFAULT,

{

  lp_return = CALLPROC check_inq_ing 
            ( h_num_row_ck      = :p_num_row_ck,
              h_commit          = 'Y',
              h_rollback        = 'N',
              h_retries         = :h_retries,
              h_retries_allowed = :h_retries_allowed,
              h_frpr_name       = :h_frpr_name);

  RETURN :lp_return;

}

