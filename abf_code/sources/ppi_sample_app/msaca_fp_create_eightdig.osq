/*-s--------------------------------------------------------------------

Procedure msaca_fp_create_eightdig     

--------------------------------------------------------------------e-*/

PROCEDURE msaca_fp_create_eightdig () =

DECLARE ret_val               = INTEGER4 NOT NULL,
        h_table1              = VARCHAR(24) NOT NULL,
        h_table2              = VARCHAR(24) NOT NULL,
        h_table3              = VARCHAR(24) NOT NULL,
        h_table4              = VARCHAR(24) NOT NULL,
        h_table5              = VARCHAR(24) NOT NULL,
        h_table6              = VARCHAR(24) NOT NULL,
        h_table7              = VARCHAR(24) NOT NULL,
        h_check_table1        = VARCHAR(24) NOT NULL,
        h_check_table2        = VARCHAR(24) NOT NULL,
        ppi_file1             = VARCHAR(100) NOT NULL,
        ppi_file2             = VARCHAR(100) NOT NULL,
        ppi_file3             = VARCHAR(100) NOT NULL,
        contributor_reference = CHAR(11) NOT NULL,
        acell                 = CHAR(2) NOT NULL,
        question              = INTEGER4 NOT NULL,
        period                = INTEGER4 NOT NULL,
        h_frpr_name           = VARCHAR(24) NOT NULL

{
    h_frpr_name = 'msaca_fp_create_eightdig';
    h_table1 = 'ppi_eightdig_all';
    h_table2 = 'ppi_sixdig_ann_sum';
    h_table3 = 'temp_ppi_eightdig_data';
    h_table4 = 'ppi_eightdig_data';
    h_table5 = 'ppi_question_library';
    h_table6 = 'ppi_prodcom_cncodes';
    h_table7 = 'temp_ppi_eightdig_copy';
    h_check_table1 = 'ppi_contrib_errors';
    h_check_table2 = 'ppi_question_errors';

    ppi_file1 = :g_path_name2 + '/prodcom/ppi_eightdig_' 
              + VARCHAR(:g_perpha) + '.txt';

    ppi_file2 = :g_path_name2 + '/prodcom/ppi_qlibrary_' 
              + VARCHAR(:g_perpha) + '.txt';

    ppi_file3 = :g_path_name2 + '/prodcom/ppi_cncodes_' 
              + VARCHAR(:g_perpha) + '.txt';

   /*-s----------------------------------------------------------------
    Amended July 2000 to select everybody from the Prodcom population
    rather than select the successfully sampled contributors/sixdigits

    Find their original eight digit question. This is held in table
    ppi_eightdig_all created in process 3. Copy this table into a text
    file for PPI. Also copy the question_library so that PPI can
    match the eightdigit with the question text.

    Amended September 1999 after request from PPI users:
    Only select the eightdigit where the value is greater than 0
   ----------------------------------------------------------------e-*/

    ret_val = CALLPROC batch_fp_drop_table(h_table = :h_table3);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    message 'Creating table ...' + :h_table3;

    CREATE TABLE :h_table3
    AS SELECT    period,
                 contributor_reference,
                 original_question,
                 question/1000 as sixdig,
                 acell,
                 alloc_type,
                 sample_type
    FROM         :h_table1 a
    WHERE        avalue > 0
    AND          alloc_type = :g_alloc_type
    AND          sample_type = :g_sample_type
    AND          period/100 = :g_period/100
    AND          a.question/1000 IN
                (SELECT sixdig
                 FROM   :h_table2 b
                 WHERE  a.contributor_reference = b.contributor_reference
                 AND    a.period/100 = b.period/100
                 AND    a.alloc_type = b.alloc_type
                 AND    a.sample_type = b.sample_type);
 
    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating ' + :h_table3,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;


    /*-s----------------------------------------------------------------
    Delete any existing rows from table for period running for       
    ----------------------------------------------------------------e-*/

    DELETE FROM :h_table4
    WHERE period = :g_period
    AND   alloc_type = :g_alloc_type;

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error deleting existing rows from ' + :h_table4,
                    :h_frpr_name,
                    9,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*-s----------------------------------------------------------------
    Only insert distinct rows as only one record is needed for a 
    quarterly contributor product pair     
    ----------------------------------------------------------------e-*/

    INSERT INTO :h_table4
    SELECT DISTINCT 
	   :g_period AS period,
	   contributor_reference,
	   original_question,
	   sixdig,
	   'V' as acell,
	   alloc_type,
	   sample_type
    FROM   :h_table3;

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error inserting new rows into ' + :h_table4,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    ret_val = CALLPROC batch_fp_drop_table(h_table = :h_table7);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    message 'Creating table ...' + :h_table7;

    CREATE TABLE :h_table7
    AS SELECT    * 
    FROM     :h_table4
    WHERE     period = :g_period
    AND       alloc_type = :g_alloc_type 
    AND       sample_type = :g_sample_type;

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating table of new data ' + :h_table7,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*-s----------------------------------------------------------------
    Check that all contributors on sample are included in
    ppi_eightdig_data before copying to file. If any found write
    message to error_log and investigate table
    ----------------------------------------------------------------e-*/

    ret_val = CALLPROC batch_fp_drop_table(h_table = :h_check_table1);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    message 'Creating table ...' + :h_check_table1;

    CREATE TABLE :h_check_table1
    AS SELECT * 
    FROM      ppi_contribs_found a
    WHERE     period = :g_period
    AND       alloc_type = :g_alloc_type
    AND       sample_type = :g_sample_type
    AND       contributor_reference NOT IN
              (SELECT contributor_reference
               FROM   :h_table7 b
               WHERE  a.period = b.period
               AND    a.alloc_type = b.alloc_type
               AND    a.sample_type = b.sample_type);

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating table ' + :h_check_table1,
                    :h_frpr_name,
                    9,
                    :g_user_id);
        COMMIT;
        RETURN 9;
    ELSEIF ret_val = 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Contributors found that are not on ppi_eightdig_data: Check ' + :h_check_table1,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
    ENDIF;

    /*-s----------------------------------------------------------------
    This delete caused problems for PPI IS as there is no join on
    stratum as it does not exist on table ppi_eightdig_data therefore
    more records were deleted than should have been.
    Amended October 2001 to comment out this delete

    Delete from ppi_eightdig_data where the sixdigit has no_quotes = 0 
    on table ppi_all_params
    ----------------------------------------------------------------e-*/
    /*-s----------------------------------------------------------------

    DELETE FROM :h_table7
    WHERE  sixdig IN
	   (SELECT sixdig
	    FROM   ppi_all_params
	    WHERE  period      = :g_period
	    AND    alloc_type  = :g_alloc_type
	    AND    sample_type = :g_sample_type
	    AND    no_quotes   = 0);

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error deleting where no_quotes = 0 on ' + :h_table7,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;
    ----------------------------------------------------------------e-*/

    /*-s----------------------------------------------------------------
    Copy table to $SCRATCH/prodcom
    ----------------------------------------------------------------e-*/

    message 'Copying table ...' + :h_table7;
   
    COPY TABLE :h_table7
               (contributor_reference = c0comma,
                period                = c0comma,
                original_question     = c0comma,
                sixdig                = c0comma,
                acell                 = c0nl)
    INTO :ppi_file1;

    
    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error copying file ' + :ppi_file1,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*-s----------------------------------------------------------------
    Check that all questions on ppi_eightdig_data are on the 
    question library
    ----------------------------------------------------------------e-*/

    ret_val = CALLPROC batch_fp_drop_table(h_table = :h_check_table2);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    message 'Creating table ...' + :h_check_table2;

    CREATE TABLE :h_check_table2
    AS SELECT * 
    FROM      :h_table7
    WHERE     original_question NOT IN
              (SELECT question
               FROM   question_library
               WHERE  period = :g_period);

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating table ' + :h_check_table2,
                    :h_frpr_name,
                    9,
                    :g_user_id);
        COMMIT;
        RETURN 9;
    ELSEIF ret_val = 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Questions found that are not on Question Library: Please Check ' + :h_check_table2,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
    ENDIF;

    /*-s----------------------------------------------------------------
    Copy question_library into a dollar separated file to
    $SCRATCH/prodcom
    ----------------------------------------------------------------e-*/

    ret_val = CALLPROC batch_fp_drop_table(h_table = :h_table5);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    message 'Creating table ...' + :h_table5;

    CREATE TABLE :h_table5
    AS SELECT  question,
               text_line1,
               text_line2,
               text_line3,
               text_line4,
               text_line5,
               text_line6,
               text_line7,
               text_line8,
               text_line9,
               text_line10
    FROM       question_library
    WHERE      period = :g_period
    AND        quest_order = 1
    AND        MOD(question,10) = 1;

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating table ' + :h_table5,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

                 
    message 'Copying table ...' + :h_table5;

    COPY TABLE :h_table5(
               question          = c0$, 
               text_line1        = c0$,
               text_line2        = c0$,
               text_line3        = c0$,
               text_line4        = c0$,
               text_line5        = c0$,
               text_line6        = c0$,
               text_line7        = c0$,
               text_line8        = c0$,
               text_line9        = c0$,
               text_line10       = c0nl)

    INTO :ppi_file2;

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error copying file ' + :ppi_file2,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;
    /*-s----------------------------------------------------------------
    Create a copy of prodcom_cncodes for current run period
    ----------------------------------------------------------------e-*/

    ret_val = CALLPROC batch_fp_drop_table(h_table = :h_table6);

    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    CREATE TABLE :h_table6
    AS SELECT    * 
    FROM         prodcom_cncodes
    WHERE        period = :g_period;

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating ' + :h_table6,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*-s----------------------------------------------------------------
    Copy file to $SCRATCH/prodcom
    ----------------------------------------------------------------e-*/
    message 'Copying table ...' + :h_table6;

    COPY TABLE :h_table6(
                period  = c0$,
                prodcom_code = c0$, 
                need_count = c0$, 
                cn_code1 = c0$,           
                cn_code2 = c0$,           
                cn_code3 = c0$,     
                cn_code4 = c0$,        
                cn_code5 = c0$,        
                cn_code6 = c0$,    
                cn_code7 = c0$,       
                cn_code8 = c0$,       
                cn_code9 = c0nl)
    INTO :ppi_file3;          

    ret_val = CALLPROC batch_check_inq_ing(
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);

    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error copying file ' + :ppi_file3,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;


   RETURN 0;
}
    
