/*--------------------------------------------------------------------
Procedure msaca_fp_sample

Process 5.1 - sampling from PRN = 0 program.

The first part of this program upto copying the population to a flat
file is the same as the first part of program - msaca_fp_categories which 
is process 5.1 that runs pilot rotation - PRN 1. The remainder of the program 
selects the sample from PRN 0. 

---------------------------------------------------------------------*/

PROCEDURE msaca_fp_sample () =

DECLARE   ret_val               = INTEGER1 NOT NULL,
          h_frpr_name           = VARCHAR(24) NOT NULL,
          h_table1              = VARCHAR(24) NOT NULL,
          h_table2              = VARCHAR(24) NOT NULL,
          h_table3              = VARCHAR(24) NOT NULL,
          h_table4              = VARCHAR(24) NOT NULL,
          h_table5              = VARCHAR(24) NOT NULL,
          h_file1               = VARCHAR(100) NOT NULL,
          h_found               = INTEGER2 NOT NULL,
          period                = INTEGER4 NOT NULL,
          fourdig               = INTEGER4 NOT NULL,
          alloc_selected        = INTEGER2 NOT NULL,
          stratum               = INTEGER2 NOT NULL,
          prn                   = INTEGER4 NOT NULL,
          avalue                = INTEGER4 NOT NULL,
          contributor_reference = VARCHAR(11) NOT NULL,
          sixdig                = INTEGER4 NOT NULL


{

    h_frpr_name = 'msaca_fp_sample';
    h_table1 = 'ppi_detr_sixdig_data';
    h_table2 = 'ppi_contribs_found';
    h_table3 = 'ppi_contribs_count';
    h_table4 = 'ppi_detr_sixdig_count';
    h_table5 = 'temp_ppi_sixdig_ann_sum';

    h_file1 =:g_path_name2 + '/prodcom/ppi_population_' + VARCHAR(:g_perpha) +
    '_prn' + VARCHAR(:g_sample_type) + '.txt';

    /*--------------------------------------------------------------------
    Insert into table of sixdig data of the DETR inclusions the current
    periods data. These are needed by PPI on top of the references sampled. 
    They must not be included in the table that the Random Sample is being 
    selected from. PPI IS require this table
    ---------------------------------------------------------------------*/
  
    MESSAGE 'Deleting existing rows from ' + :h_table1;

    DELETE FROM :h_table1
    WHERE  period/100 = :g_period/100
    AND    alloc_type = :g_alloc_type
    AND    sample_type = :g_sample_type;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'System error deleting current period from ' + :h_table1,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    MESSAGE 'Inserting new periods data into  ' + :h_table1;

    INSERT INTO :h_table1
    SELECT    a.* 
    FROM      ppi_sixdig_ann_sum a
    WHERE     period/100 = :g_period/100
    AND       alloc_type = :g_alloc_type
    AND       sample_type = :g_sample_type
    AND       contributor_reference IN
              (SELECT contributor_reference
               FROM   ppi_detr_inclusions b
               WHERE  b.period = :g_period 
               AND    a.sixdig = b.question/1000);

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'System error inserting new periods data into ' + :h_table1,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*--------------------------------------------------------------------
    Create temp_ppi_sixdig_ann_sum to use during sampling.
    ---------------------------------------------------------------------*/

    ret_val = CALLPROC batch_fp_drop_table (
                       h_table = :h_table5);
  
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;

    MESSAGE 'Creating temp table  ' + :h_table5;
 
    CREATE TABLE :h_table5 as
    SELECT * FROM ppi_sixdig_ann_sum
    WHERE period/100 = :g_period/100
    AND   alloc_type = :g_alloc_type
    AND   sample_type = :g_sample_type; 

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating ' + :h_table5,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;
    
    /*--------------------------------------------------------------------
    Modify temp_ppi_sixdig_ann_sum to help speed sampling up.
    ---------------------------------------------------------------------*/
    MESSAGE 'Modifying table  ' + :h_table5;

    MODIFY :h_table5 TO BTREE UNIQUE ON
            period,
            contributor_reference,
            sixdig,
            avalue,
            prn,
            alloc_type,
            sample_type;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error modifying ' + :h_table5,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*--------------------------------------------------------------------
    Create index on temp_ppi_sixdig_ann_sum to help speed sampling up.
    ---------------------------------------------------------------------*/

    MESSAGE 'Creating index on table  ' + :h_table5;

    CREATE INDEX x1_t_ppi_sixdig_ann_sum on
                :h_table5 
                (sixdig,period,stratum,alloc_type,sample_type)
    WITH STRUCTURE = BTREE;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating index on ' + :h_table5,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*--------------------------------------------------------------------
    Delete DETR references and their sixdigits from the table 
    temp_ppi_sixdig_ann_sum as they must not be included in the table 
    the Sample is selected from for those sixdigits within the
    eightdigit Prodcom question held on ppi_detr_inclusions. The references 
    may be randomly selected for other sixdigits they respond to.
    ---------------------------------------------------------------------*/

    DELETE FROM :h_table5 a
    WHERE       period/100 = :g_period/100
    AND         alloc_type = :g_alloc_type
    AND         sample_type = :g_sample_type
    AND         contributor_reference IN
                (SELECT contributor_reference
                 FROM   :h_table1 b
		 WHERE  a.sixdig = b.sixdig);


    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'System error deleting from ' + :h_table5,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

  /*--------------------------------------------------------------------
   Copy table temp_ppi_sixdig_ann_sum to a flat file for PPI statisticians
   This is the same population used for each type of sampling either
   PRN 0 sampling or rotation
  --------------------------------------------------------------------*/

   COPY TABLE :h_table5(
               period                = c0comma,
               contributor_reference = c0comma,
               sixdig                = c0comma,
               avalue                = c0comma,
               stratum               = c0comma,
               prn                   = c0comma,
               alloc_type            = c0comma,
               sample_type           = c0nl)
   INTO :h_file1;

   ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
   IF ret_val = 9 
   THEN
       INSERT INTO error_log
       VALUES (    'now',
                   'System error copying ' + :h_table5,
                   :h_frpr_name,
                   :ret_val,
                   :g_user_id);
       COMMIT;
       RETURN ret_val;
   ENDIF;

    /*--------------------------------------------------------------------
    Deleting any existing rows for current period from ppi_contribs_found
    ---------------------------------------------------------------------*/

    MESSAGE 'Deleting existing rows from ' + :h_table2;
    
    DELETE FROM :h_table2
    WHERE  period = :g_period
    AND    alloc_type = :g_alloc_type
    AND    sample_type = :g_sample_type;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'System error deleting existing rows from ' + :h_table2,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*--------------------------------------------------------------------
    Some four digits have no third stratum and the six digits within
    the group only have an allocation for strata 1 and 2

    Deal with these four digits first as only the first strata will be
    randomly selected and the second strata will be completely
    enumerated ie. 1 in 1s

    Select loop to select the alloc_selected per stratum from the data
    in table ppi_all_params, this is supplied by PPI Statisticians. 

    Loop around the contributors and their sixdigit sales, inserting 
    into the empty table until the number required is met. Random 
    selection is only done for strata 1 and 2 
    ---------------------------------------------------------------------*/
    /*--------------------------------------------------------------------
    Deal with the four digits that have no third stratum
    ---------------------------------------------------------------------*/

    SELECT  period,
            sixdig,
	    fourdig,
            stratum,
            alloc_selected
    FROM    ppi_all_params
    WHERE   period = :g_period
    AND     stratum = 1
    AND     alloc_type = :g_alloc_type
    AND     sample_type = :g_sample_type
    AND     fourdig IN 
            (SELECT fourdig
             FROM   ppi_bound_params
             WHERE  period = :g_period
             AND    stratum = 2
             AND    upper_bound = 999999999
             AND    alloc_type = :g_alloc_type
             AND    sample_type = :g_sample_type)
    {
        MESSAGE 'Processing Fourdig - ' +
                 VARCHAR(:fourdig) + ' . . .';
  	 
        h_found = 1;
  
        SELECT contributor_reference,
               avalue,
               prn
        FROM   :h_table5
        WHERE  period/100 = :g_period/100
        AND    sixdig = :sixdig
        AND    stratum = :stratum
        AND    alloc_type = :g_alloc_type
        AND    sample_type = :g_sample_type
        ORDER BY prn,
  	         contributor_reference
  
        {	
            IF h_found <= alloc_selected
            THEN 
                INSERT INTO :h_table2
                VALUES (:period,
                        :contributor_reference,
                        :sixdig,
                        :avalue,
                        :prn,
                        :stratum,
                        :g_alloc_type,
                        :g_sample_type);
  
                ret_val = CALLPROC batch_check_inq_ing (
                          h_num_row_ck = 1,
                          h_commit     = 'Y',
                          h_rollback   = 'N',
                          h_frpr_name  = :h_frpr_name);
  
                IF ret_val <> 0
                THEN
                    INSERT INTO error_log
                    VALUES (    'now',
                                'Error inserting fourdigit level into ' + :h_table2,
                                :h_frpr_name,
                                :ret_val,
                                 :g_user_id);
                    COMMIT;
                    RETURN ret_val;
                ENDIF;
            ENDIF;

            h_found = :h_found + 1;
        };
  
    };

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error in first select loop for fourdigits',
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*--------------------------------------------------------------------
    deal with the rest of the six digits 
    ---------------------------------------------------------------------*/
    SELECT  period,
            sixdig,
            fourdig,
            stratum,
            alloc_selected
    FROM    ppi_all_params
    WHERE   period = :g_period
    AND     stratum IN (1,2)
    AND     alloc_type = :g_alloc_type
    AND     sample_type = :g_sample_type
    AND     fourdig NOT IN 
            (SELECT fourdig
             FROM   ppi_bound_params
             WHERE  period = :g_period
             AND    stratum = 2
             AND    upper_bound = 999999999
             AND    alloc_type = :g_alloc_type
             AND    sample_type = :g_sample_type)
 
    ORDER BY sixdig
  
    {
        MESSAGE 'Processing Sixdig ' +
                 VARCHAR(:sixdig) + ' . . .';
  	 
        h_found = 1;
  
        SELECT contributor_reference,
               avalue,
               prn
        FROM   :h_table5
        WHERE  period/100 = :g_period/100
        AND    sixdig = :sixdig
        AND    stratum = :stratum
        AND    alloc_type = :g_alloc_type
        AND    sample_type = :g_sample_type
        ORDER BY prn,
  	         contributor_reference
  
        {	
            IF h_found <= alloc_selected
            THEN 
                INSERT INTO :h_table2
                VALUES (:period,
                        :contributor_reference,
                        :sixdig,
                        :avalue,
                        :prn,
                        :stratum,
                        :g_alloc_type,
                        :g_sample_type);
  
                ret_val = CALLPROC batch_check_inq_ing (
                          h_num_row_ck = 1,
                          h_commit     = 'Y',
                          h_rollback   = 'N',
                          h_frpr_name  = :h_frpr_name);
  
                IF ret_val <> 0
                THEN
                    INSERT INTO error_log
                    VALUES (    'now',
                                'Error inserting sixdigit level into ' + :h_table2,
                                :h_frpr_name,
                                :ret_val,
                                 :g_user_id);
                    COMMIT;
                    RETURN ret_val;
                ENDIF;
            ENDIF;

            h_found = :h_found + 1;
        };
  
    };
  
    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error in second select loop for sixdigits',
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*--------------------------------------------------------------------
    Insert into table all contributors and their sixdigit sales for
    stratum 2. This stratum is completely enumerated ie. 1 in 1s
    for those four digits that have no stratum 3

    Default to the annual global period rather than the 4th quarterly
    period as this causes duplicates later on
    ---------------------------------------------------------------------*/
    INSERT INTO :h_table2
    SELECT :g_period,
           contributor_reference,
           sixdig,
  	   avalue,
  	   prn,
  	   stratum,
           alloc_type,
           sample_type
    FROM   :h_table5
    WHERE  stratum = 2
    AND    period/100 = :g_period/100
    AND    alloc_type = :g_alloc_type
    AND    sample_type = :g_sample_type
    AND    sixdig IN       
           (SELECT sixdig 
            FROM   ppi_all_params
            WHERE  period = :g_period
            AND    alloc_type = :g_alloc_type
            AND    sample_type = :g_sample_type)
    AND    sixdig/100 IN 
           (SELECT fourdig
            FROM   ppi_bound_params
            WHERE  stratum = 2
            AND    period = :g_period
            AND    upper_bound = 999999999
            AND    alloc_type = :g_alloc_type
            AND    sample_type = :g_sample_type);
  
    /*--------------------------------------------------------------------
    Insert into table all contributors and their sixdigit sales for
    stratum 3. This stratum is completely enumerated ie. 1 in 1s

    Default to the annual global period rather than the 4th quarterly
    period as this causes duplicates later on
    ---------------------------------------------------------------------*/
    INSERT INTO :h_table2
    SELECT :g_period,
           contributor_reference,
           sixdig,
  	   avalue,
  	   prn,
  	   stratum,
           alloc_type, 
           sample_type
    FROM   :h_table5
    WHERE  stratum = 3
    AND    period/100 = :g_period/100
    AND    alloc_type = :g_alloc_type
    AND    sample_type = :g_sample_type
    AND    sixdig IN           
           (SELECT sixdig 
            FROM   ppi_all_params
            WHERE  period = :g_period
            AND    alloc_type = :g_alloc_type
            AND    sample_type = :g_sample_type)
    AND    sixdig/100 NOT IN 
           (SELECT fourdig
            FROM   ppi_bound_params
            WHERE  stratum = 2
            AND    period = :g_period
            AND    upper_bound = 999999999
            AND    alloc_type = :g_alloc_type
            AND    sample_type = :g_sample_type);
  
  
    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error in select loop for 1 in 1s stratum 3 ' + :h_table2,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*--------------------------------------------------------------------
    Create a table counting the number of contributors that have been
    found using the random sampling select loop above. Update table 
    ppi_all_params, contribs_found with the figures. 
    These are to be used for comparison purposes in reports later. 
    ---------------------------------------------------------------------*/

    ret_val = CALLPROC batch_fp_drop_table (
                       h_table = :h_table3);
  
    IF ret_val <> 0
    THEN
        RETURN ret_val;
    ENDIF;
  
    MESSAGE 'Creating table ' + :h_table3;
  
    CREATE TABLE :h_table3 
    AS SELECT period,
              sixdig,
              stratum,
              alloc_type,
              sample_type,
              COUNT(contributor_reference) as contribs_found
    FROM      :h_table2
    WHERE     period = :g_period
    AND       alloc_type = :g_alloc_type
    AND       sample_type = :g_sample_type
    GROUP BY  period,
              sixdig,
              stratum,
              alloc_type,
              sample_type;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error creating ' + :h_table3,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    UPDATE ppi_all_params a
    FROM   :h_table3 b
    SET    alloc_found = b.contribs_found
    WHERE  a.sixdig = b.sixdig
    AND    a.period  = :g_period
    AND    a.period  = b.period
    AND    a.stratum = b.stratum
    AND    a.alloc_type = :g_alloc_type
    AND    a.alloc_type = b.alloc_type
    AND    a.sample_type = :g_sample_type
    AND    a.sample_type = b.sample_type;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val <> 0
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error updating ppi_all_params with contribs_found count ',
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    /*--------------------------------------------------------------------
    Create a table to hold the counts by stratum and sixdig of the DETR
    inclusions held in table ppi_detr_sixdig_data created above. 
    These need to be added to the total number of contribs_found that 
    was calculated after running the sample program above. This means 
    that there will be cases where the total contribs_found is greater 
    than the number required for the sixdigits affected
    ---------------------------------------------------------------------*/
  
    MESSAGE 'Deleting existing rows from ' + :h_table4;

    DELETE FROM :h_table4
    WHERE  period/100 = :g_period/100
    AND    alloc_type = :g_alloc_type
    AND    sample_type = :g_sample_type;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9 
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'System error deleting current period from ' + :h_table4,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    INSERT INTO :h_table4 
    SELECT    :g_period as period,
              stratum,
              sixdig,
              alloc_type,
              sample_type,
              COUNT(contributor_reference) as contribs_found
    FROM      :h_table1
    WHERE     period/100 = :g_period/100
    AND       alloc_type = :g_alloc_type
    AND       sample_type = :g_sample_type
    GROUP BY  stratum,
              sixdig,
              alloc_type,
              sample_type;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    IF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error inserting new periods data into  ' + :h_table4,
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    UPDATE ppi_all_params a
    FROM   :h_table4 b
    SET    alloc_found = alloc_found + b.contribs_found
    WHERE  a.sixdig = b.sixdig
    AND    a.period = :g_period
    AND    a.period = b.period
    AND    a.stratum = b.stratum
    AND    a.alloc_type = :g_alloc_type
    AND    a.alloc_type = b.alloc_type
    AND    a.sample_type = :g_sample_type
    AND    a.sample_type = b.sample_type;

    ret_val = CALLPROC batch_check_inq_ing (
              h_num_row_ck = 1,
              h_commit     = 'Y',
              h_rollback   = 'N',
              h_frpr_name  = :h_frpr_name);
  
    iF ret_val = 9
    THEN
        INSERT INTO error_log
        VALUES (    'now',
                    'Error updating ppi_all_params with DETR contribs_found count ',
                    :h_frpr_name,
                    :ret_val,
                    :g_user_id);
        COMMIT;
        RETURN ret_val;
    ENDIF;

    RETURN 0;
  
  }       
