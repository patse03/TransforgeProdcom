/*****************************************************************************
  DESCRIPTION: Application main menu. 

  CREATED: Dom Ford - April 2012

  CHANGES: May 2012 - DF - Added header info now program functional.

*****************************************************************************/

INITIALIZE () =

DECLARE h_retries_allowed = INTEGER1    NOT NULL,
        h_retries         = INTEGER1    NOT NULL,
        h_retry_or_not    = CHAR(5)     NOT NULL,
        h_frpr_name       = VARCHAR(24) NOT NULL,
        h_return          = INTEGER1    NOT NULL,
	h_password        = CHAR(5)     NOT NULL,
	h_date_changed    = DATE        NOT NULL,
        h_exit            = CHAR(1)     NOT NULL,
	h_fullname        = CHAR(40)    NOT NULL,
        h_firstname       = VARCHAR(20) NOT NULL,
        h_secondname      = VARCHAR(20) NOT NULL,

        lp_error_check      = PROCEDURE RETURNING INTEGER,
        lp_full_error_check = PROCEDURE RETURNING INTEGER
{

  SELECT DBMSINFO('username') AS g_user_id;
  SELECT DBMSINFO('database') AS g_database;

  SET_FORMS FRS (MAPFILE='/home/prodcom/admin/prodcom.map');

  h_frpr_name = 'control_1_fr';
  msa_date    = 'now';

  IF g_database != 'produserdb'
  THEN
    MESSAGE'THIS APPLICATION CAN ONLY BE RUN ON PRODUSERDB'
    WITH STYLE = POPUP;
    EXIT;
  ENDIF;

  CALLFRAME control_1a_fr();

  s_developer = SHIFT(:g_fullname, (((40-LENGTH(g_fullname))/2)*1));

}

/*----------------------------------------------------------------------
   Main menu routing.
----------------------------------------------------------------------*/

FIELD choice =
BEGIN

  g_option = IFNULL(:choice,0);

  IF choice = 1
  THEN
    CALLFRAME control_2_fr;

   ELSEIF choice = 2
   THEN
    CALLFRAME control_3_fr;

   ELSEIF choice = 3
   THEN
    CALLFRAME control_4_fr;

   ELSEIF choice = 4
   THEN
    CALLFRAME control_5_fr;

   ELSEIF choice = 5
   THEN
    CALLFRAME control_6_fr;

   ELSEIF choice = 6
   THEN
     MESSAGE 'IN DEVELOPMENT: This will call up screens to backup data tables.'
     WITH STYLE = POPUP;

   ELSEIF choice = 7
   THEN
    CALLFRAME control_8_fr;

   ELSEIF choice = 8
   THEN
     MESSAGE 'IN DEVELOPMENT: This will update the list of tables from Vulcan.'
     WITH STYLE = POPUP;

  ELSEIF choice = 0
  THEN
     EXIT;

  ELSE
     RESUME FIELD choice;

  ENDIF;

IF h_return != 0 THEN RETURN; ENDIF;

RESUME FIELD choice;

END;


/*=======================================================================
   FRSKEY4: View application status - Check status and version history.
=======================================================================*/

'App Status', KEY FRSKEY4 =
{
  CALLFRAME control_0a_fr();
  RESUME FIELD choice;
}


/*=======================================================================
   FRSKEY6:  View Table Status - Check table status and history.
======================================================================*/

'Table Status', KEY FRSKEY6 =
{
  CALLFRAME control_0b_fr();
  RESUME FIELD choice;
}


/*=======================================================================
   FRSKEY8:  View Table Groups - View or Edit table groups.
======================================================================*/

'View/Edit Groups', KEY FRSKEY8 =
{
  CALLFRAME control_6x_fr();
  RESUME FIELD choice;
}


/****************************************************************************/
/*********************** LOCAL PROCEDURES ***********************************/
/****************************************************************************/

/*===========================================================================
	      Local procedure for error checking within retry loop.
============================================================================*/

PROCEDURE lp_full_error_check
	  (p_num_row_ck  = INTEGER4 NOT NULL WITH DEFAULT)=

DECLARE lp_return = INTEGER4 NOT NULL WITH DEFAULT


BEGIN

lp_return = CALLPROC check_inq_ing ( h_num_row_ck      = :p_num_row_ck,
 				    h_commit          = 'Y',
				    h_rollback        = 'N',
				    h_retries         = :h_retries,
                                    h_retries_allowed = :h_retries_allowed,
                                    h_frpr_name       = 'val_gates_1.fr');
RETURN :lp_return;

END

/*===========================================================================
	      Local procedure for basic error checking.
============================================================================*/

PROCEDURE lp_error_check
	  (p_num_row_ck  = INTEGER4 NOT NULL WITH DEFAULT)=

DECLARE lp_return = INTEGER4 NOT NULL WITH DEFAULT


BEGIN

lp_return = CALLPROC check_inq_ing ( h_num_row_ck      = :p_num_row_ck,
 				    h_commit          = 'Y',
				    h_rollback        = 'N',
				    h_retries         = 1,
                                    h_retries_allowed = 1,
                                    h_frpr_name       = 'val_gates_1.fr');
RETURN :lp_return;

END
